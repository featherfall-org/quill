{
  "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis128X2_256.decrypt": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis128X2_256.decrypt/return/0"
    ],
    "params": [
      {
        "name": "cipher",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis128X2_256.decrypt/param/0"
      },
      {
        "name": "tag",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis128X2_256.decrypt/param/1"
      },
      {
        "name": "key",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis128X2_256.decrypt/param/2"
      },
      {
        "name": "nonce",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis128X2_256.decrypt/param/3"
      },
      {
        "name": "ad",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis128X2_256.decrypt/param/4"
      }
    ]
  },
  "@roblox/globaltype/BufferSink.write": {
    "code_sample": "",
    "documentation": "\n\n**Parameters**\n- `data`: The data to write to write.\n\n\n**Throws**\n- Memory Error\n",
    "returns": [],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/BufferSink.write/param/0"
      },
      {
        "name": "data",
        "documentation": "@roblox/globaltype/BufferSink.write/param/1"
      }
    ]
  },
  "@roblox/globaltype/HttpResponse": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "ok": "@roblox/globaltype/HttpResponse.ok",
      "status_reason": "@roblox/globaltype/HttpResponse.status_reason",
      "status_code": "@roblox/globaltype/HttpResponse.status_code",
      "body": "@roblox/globaltype/HttpResponse.body",
      "headers": "@roblox/globaltype/HttpResponse.headers"
    }
  },
  "@roblox/globaltype/_zune_fs.createFile/param/1": {
    "code_sample": "",
    "documentation": "The create options."
  },
  "@roblox/globaltype/NetworkSocket.accept": {
    "code_sample": "",
    "documentation": "Yields and waits for a connection to be made on the socket, and returns a `NetworkSocket` object.\n\n**Throws**\n- IO Error\n",
    "returns": [
      "@roblox/globaltype/NetworkSocket.accept/return/0"
    ],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/NetworkSocket.accept/param/0"
      }
    ]
  },
  "@roblox/globaltype/_zune_crypto.aead.chacha_poly": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "XChaCha12Poly1305": "@roblox/globaltype/_zune_crypto.aead.chacha_poly.XChaCha12Poly1305",
      "XChaCha20Poly1305": "@roblox/globaltype/_zune_crypto.aead.chacha_poly.XChaCha20Poly1305",
      "ChaCha12Poly1305": "@roblox/globaltype/_zune_crypto.aead.chacha_poly.ChaCha12Poly1305",
      "XChaCha8Poly1305": "@roblox/globaltype/_zune_crypto.aead.chacha_poly.XChaCha8Poly1305",
      "ChaCha20Poly1305": "@roblox/globaltype/_zune_crypto.aead.chacha_poly.ChaCha20Poly1305",
      "ChaCha8Poly1305": "@roblox/globaltype/_zune_crypto.aead.chacha_poly.ChaCha8Poly1305"
    }
  },
  "@roblox/globaltype/_zune_require": {
    "code_sample": "",
    "documentation": "A library to use zune's require resolver in luau.",
    "keys": {
      "getCached": "@roblox/globaltype/_zune_require.getCached",
      "navigate": "@roblox/globaltype/_zune_require.navigate"
    },
    "learn_more_link": "https://zune.sh/docs/v0.5.0/api/require"
  },
  "@roblox/globaltype/_zune_ffi.closure/param/0": {
    "code_sample": "",
    "documentation": "The function definition."
  },
  "@roblox/globaltype/_zune_fs.path.extension/param/0": {
    "code_sample": "",
    "documentation": "The path to get the extension from."
  },
  "@roblox/globaltype/FileHandle.lock/param/1": {
    "code_sample": "",
    "documentation": "The mode to lock the file."
  },
  "@roblox/globaltype/_zune_mem.rotate": {
    "code_sample": "",
    "documentation": "Rotates the buffer to the left by the given amount.\n\nFor example, rotating `[1, 2, 3, 4, 5]` by `2` would result in `[3, 4, 5, 1, 2]`.\n\n**Parameters**\n- `src`: The source to rotate in.\n- `amount`: The amount to rotate by.\n",
    "returns": [],
    "params": [
      {
        "name": "src",
        "documentation": "@roblox/globaltype/_zune_mem.rotate/param/0"
      },
      {
        "name": "amount",
        "documentation": "@roblox/globaltype/_zune_mem.rotate/param/1"
      }
    ]
  },
  "@roblox/globaltype/_zune_fs.writeDir/param/1": {
    "code_sample": "",
    "documentation": "If true, the function will create all parent directories if they do not"
  },
  "@roblox/globaltype/_zune_fs.embeddedScripts": {
    "code_sample": "",
    "documentation": "Will return the list of all embedded scripts, the table will always be empty when called from an unbundled context.\n\n**Throws**\n- Memory Error\n",
    "returns": [
      "@roblox/globaltype/_zune_fs.embeddedScripts/return/0"
    ],
    "params": []
  },
  "@roblox/globaltype/_zune_fs.readFile": {
    "code_sample": "",
    "documentation": "Read the contents of a file from the provided path."
  },
  "@roblox/globaltype/LuauCompileOptions": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "optimization_level": "@roblox/globaltype/LuauCompileOptions.optimization_level",
      "coverage_level": "@roblox/globaltype/LuauCompileOptions.coverage_level",
      "debug_level": "@roblox/globaltype/LuauCompileOptions.debug_level"
    }
  },
  "@roblox/globaltype/_zune_fs.watch": {
    "code_sample": "",
    "documentation": "Watches a directory for changes.\n\n*Does not watch subdirectories.*\n*Windows: Can watch changes in first child subdirectories.*\n\n**Parameters**\n- `path`: The path to the directory to watch.\n- `callback`: The function to call when a change is detected.\n\n\n**Throws**\n- IO Error\n",
    "returns": [
      "@roblox/globaltype/_zune_fs.watch/return/0"
    ],
    "params": [
      {
        "name": "path",
        "documentation": "@roblox/globaltype/_zune_fs.watch/param/0"
      },
      {
        "name": "callback",
        "documentation": "@roblox/globaltype/_zune_fs.watch/param/1"
      }
    ]
  },
  "@roblox/globaltype/_zune_crypto_password": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "hash": "@roblox/globaltype/_zune_crypto_password.hash",
      "verify": "@roblox/globaltype/_zune_crypto_password.verify"
    }
  },
  "@roblox/globaltype/_zune_fs.symlink": {
    "code_sample": "",
    "documentation": "Create a symbolic link from one path to another path.\n\n**Parameters**\n- `from`: The path to the file or directory to link.\n- `to`: The path to link the file or directory to.\n\n\n**Throws**\n- IO Error\n- Not Supported (`Windows`)\n",
    "returns": [],
    "params": [
      {
        "name": "from",
        "documentation": "@roblox/globaltype/_zune_fs.symlink/param/0"
      },
      {
        "name": "to",
        "documentation": "@roblox/globaltype/_zune_fs.symlink/param/1"
      }
    ]
  },
  "@roblox/globaltype/Regex.match": {
    "code_sample": "",
    "documentation": "\n\n**Parameters**\n- `input`: The input to match against the regex.\n\n\n**Throws**\n- Regex Error\n- Memory Error\n",
    "returns": [
      "@roblox/globaltype/Regex.match/return/0"
    ],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/Regex.match/param/0"
      },
      {
        "name": "input",
        "documentation": "@roblox/globaltype/Regex.match/param/1"
      }
    ]
  },
  "@roblox/globaltype/_zune_io.terminal": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "getSize": "@roblox/globaltype/_zune_io.terminal.getSize",
      "isTTY": "@roblox/globaltype/_zune_io.terminal.isTTY",
      "restoreMode": "@roblox/globaltype/_zune_io.terminal.restoreMode",
      "enableRawMode": "@roblox/globaltype/_zune_io.terminal.enableRawMode",
      "getCurrentMode": "@roblox/globaltype/_zune_io.terminal.getCurrentMode"
    }
  },
  "@roblox/globaltype/_zune_testing.expected": {
    "code_sample": "",
    "documentation": "Expects a value to be true or non nil.\n\nSimilar to `assert(value)`\n\n\n**Parameters**\n- `value`: The value to expect.\n",
    "returns": [],
    "params": [
      {
        "name": "value",
        "documentation": "@roblox/globaltype/_zune_testing.expected/param/0"
      }
    ]
  },
  "@roblox/globaltype/_zune_process.create/param/0": {
    "code_sample": "",
    "documentation": "The executable to run."
  },
  "@roblox/globaltype/_zune_serde_json": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "encode": "@roblox/globaltype/_zune_serde_json.encode",
      "values": "@roblox/globaltype/_zune_serde_json.values",
      "decode": "@roblox/globaltype/_zune_serde_json.decode",
      "indents": "@roblox/globaltype/_zune_serde_json.indents"
    }
  },
  "@roblox/globaltype/_zune_serde.zlib": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "decompress": "@roblox/globaltype/_zune_serde.zlib.decompress",
      "compress": "@roblox/globaltype/_zune_serde.zlib.compress"
    }
  },
  "@roblox/globaltype/_zune_io.createFixedBufferStream": {
    "code_sample": "",
    "documentation": "Creates a buffer stream.\n\n**Parameters**\n- `buffer`: The buffer to create the stream with.\n\n\n**Throws**\n- Memory Error\n",
    "returns": [
      "@roblox/globaltype/_zune_io.createFixedBufferStream/return/0"
    ],
    "params": [
      {
        "name": "buffer",
        "documentation": "@roblox/globaltype/_zune_io.createFixedBufferStream/param/0"
      }
    ]
  },
  "@roblox/globaltype/_zune_mem.indexOfScalar/param/1": {
    "code_sample": "",
    "documentation": "The byte to search for."
  },
  "@roblox/global/zune": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "serde": "@roblox/globaltype/_zune_serde",
      "fs": "@roblox/globaltype/_zune_fs",
      "crypto": "@roblox/globaltype/_zune_crypto",
      "thread": "@roblox/globaltype/_zune_thread",
      "process": "@roblox/globaltype/_zune_process",
      "regex": "@roblox/globaltype/_zune_regex",
      "task": "@roblox/globaltype/_zune_task",
      "testing": "@roblox/globaltype/_zune_testing",
      "luau": "@roblox/globaltype/_zune_luau",
      "net": "@roblox/globaltype/_zune_net",
      "datetime": "@roblox/globaltype/_zune_datetime",
      "io": "@roblox/globaltype/_zune_io",
      "compiled": "@roblox/global/zune.compiled",
      "mem": "@roblox/globaltype/_zune_mem",
      "random": "@roblox/globaltype/_zune_random",
      "require": "@roblox/globaltype/_zune_require",
      "sqlite": "@roblox/globaltype/_zune_sqlite",
      "ffi": "@roblox/globaltype/_zune_ffi"
    }
  },
  "@roblox/globaltype/_zune_ffi.getLuaState": {
    "code_sample": "",
    "documentation": "Returns the lua state.\n\n**Parameters**\n- `mainthread`: Whether to get the main thread or the current thread.\n  - default: `false`\n\n\n**Throws**\n- Memory Error\n",
    "returns": [
      "@roblox/globaltype/_zune_ffi.getLuaState/return/0"
    ],
    "params": [
      {
        "name": "mainthread",
        "documentation": "@roblox/globaltype/_zune_ffi.getLuaState/param/0"
      }
    ]
  },
  "@roblox/globaltype/_zune_crypto.random.fill/param/0": {
    "code_sample": "",
    "documentation": "The buffer to write to."
  },
  "@roblox/globaltype/_zune_mem.startsWith/param/1": {
    "code_sample": "",
    "documentation": "The needle to check for."
  },
  "@roblox/globaltype/_zune_ffi_c.compile": {
    "code_sample": "",
    "documentation": "\n\n**Parameters**\n- `src`: The C source code to compile.\n- `opts`: The options for the compilation.\n",
    "returns": [
      "@roblox/globaltype/_zune_ffi_c.compile/return/0"
    ],
    "params": [
      {
        "name": "src",
        "documentation": "@roblox/globaltype/_zune_ffi_c.compile/param/0"
      },
      {
        "name": "opts",
        "documentation": "@roblox/globaltype/_zune_ffi_c.compile/param/1"
      }
    ]
  },
  "@roblox/global/_FILE": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "source": "@roblox/global/_FILE.source",
      "main": "@roblox/global/_FILE.main"
    }
  },
  "@roblox/globaltype/FFIPointer.release": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/FFIPointer.release/return/0"
    ],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/FFIPointer.release/param/0"
      }
    ]
  },
  "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis256X4_256.decrypt": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis256X4_256.decrypt/return/0"
    ],
    "params": [
      {
        "name": "cipher",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis256X4_256.decrypt/param/0"
      },
      {
        "name": "tag",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis256X4_256.decrypt/param/1"
      },
      {
        "name": "key",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis256X4_256.decrypt/param/2"
      },
      {
        "name": "nonce",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis256X4_256.decrypt/param/3"
      },
      {
        "name": "ad",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis256X4_256.decrypt/param/4"
      }
    ]
  },
  "@roblox/globaltype/_zune_fs.writeFile": {
    "code_sample": "",
    "documentation": "Write the contents to a file at the provided path.\n\n**Parameters**\n- `path`: The path to the file to write.\n- `contents`: The contents to write to the file. (This may be limited to the max luau `string`).\n\n\n**Throws**\n- IO Error\n",
    "returns": [],
    "params": [
      {
        "name": "path",
        "documentation": "@roblox/globaltype/_zune_fs.writeFile/param/0"
      },
      {
        "name": "contents",
        "documentation": "@roblox/globaltype/_zune_fs.writeFile/param/1"
      }
    ]
  },
  "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis128X4_256.encrypt": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis128X4_256.encrypt/return/0"
    ],
    "params": [
      {
        "name": "data",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis128X4_256.encrypt/param/0"
      },
      {
        "name": "key",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis128X4_256.encrypt/param/1"
      },
      {
        "name": "nonce",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis128X4_256.encrypt/param/2"
      },
      {
        "name": "ad",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis128X4_256.encrypt/param/3"
      }
    ]
  },
  "@roblox/globaltype/_zune_fs.path.extension": {
    "code_sample": "",
    "documentation": "Returns the extension of the provided path.\n- `/lib/main.test.luau` -> `.luau`\n- `/lib/main.luau` -> `.luau`\n- `/lib/main.` -> `.`\n- `/lib/main` -> ``\n\n**Parameters**\n- `path`: The path to get the extension from.\n",
    "returns": [
      "@roblox/globaltype/_zune_fs.path.extension/return/0"
    ],
    "params": [
      {
        "name": "path",
        "documentation": "@roblox/globaltype/_zune_fs.path.extension/param/0"
      }
    ]
  },
  "@roblox/globaltype/FFIPointerType.tag": {
    "code_sample": "",
    "documentation": "Get the tag id of the pointer type.",
    "returns": [
      "@roblox/globaltype/FFIPointerType.tag/return/0"
    ],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/FFIPointerType.tag/param/0"
      }
    ]
  },
  "@roblox/globaltype/SQLite3Database.transaction": {
    "code_sample": "",
    "documentation": "Creates a transaction function.\n\n**Parameters**\n- `callback`: The callback to run inside the transaction.\n- `kind`: The transaction mode to use.\n\n\n**Throws**\n- Luau Error\n",
    "returns": [
      "@roblox/globaltype/SQLite3Database.transaction/return/0"
    ],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/SQLite3Database.transaction/param/0"
      },
      {
        "name": "callback",
        "documentation": "@roblox/globaltype/SQLite3Database.transaction/param/1"
      },
      {
        "name": "kind",
        "documentation": "@roblox/globaltype/SQLite3Database.transaction/param/2"
      }
    ]
  },
  "@roblox/globaltype/_zune_serde.gzip": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "decompress": "@roblox/globaltype/_zune_serde.gzip.decompress",
      "compress": "@roblox/globaltype/_zune_serde.gzip.compress"
    }
  },
  "@roblox/globaltype/HttpServer.stop": {
    "code_sample": "",
    "documentation": "Stop and kill server.",
    "returns": [],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/HttpServer.stop/param/0"
      }
    ]
  },
  "@roblox/globaltype/_zune_require.navigate/param/1": {
    "code_sample": "",
    "documentation": "The path to navigate from. Defaults to the current file."
  },
  "@roblox/globaltype/_zune_crypto_aead.isap.IsapA128A.encrypt": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/_zune_crypto_aead.isap.IsapA128A.encrypt/return/0"
    ],
    "params": [
      {
        "name": "data",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.isap.IsapA128A.encrypt/param/0"
      },
      {
        "name": "key",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.isap.IsapA128A.encrypt/param/1"
      },
      {
        "name": "nonce",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.isap.IsapA128A.encrypt/param/2"
      },
      {
        "name": "ad",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.isap.IsapA128A.encrypt/param/3"
      }
    ]
  },
  "@roblox/globaltype/FFIPointerType.newTag": {
    "code_sample": "",
    "documentation": "Creates a new pointer type with the given tag.\n\n**Parameters**\n- `tag`: The tag to set.\n\n\n**Throws**\n- FFI Error\n- Memory Error\n",
    "returns": [
      "@roblox/globaltype/FFIPointerType.newTag/return/0"
    ],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/FFIPointerType.newTag/param/0"
      },
      {
        "name": "tag",
        "documentation": "@roblox/globaltype/FFIPointerType.newTag/param/1"
      }
    ]
  },
  "@roblox/globaltype/FFIStructureType.offset/param/1": {
    "code_sample": "",
    "documentation": "The field to get the offset of."
  },
  "@roblox/globaltype/_zune_sqlite.open": {
    "code_sample": "",
    "documentation": "Opens a SQLite3 database.\n\n**Parameters**\n- `path`: The path to the database file.\n  - default: ``\":memory:\"``\n\n\n**Throws**\n- SQLite3 Error\n- Memory Error\n",
    "returns": [
      "@roblox/globaltype/_zune_sqlite.open/return/0"
    ],
    "params": [
      {
        "name": "path",
        "documentation": "@roblox/globaltype/_zune_sqlite.open/param/0"
      }
    ]
  },
  "@roblox/globaltype/_zune_serde.lz4": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "compressFrame": "@roblox/globaltype/_zune_serde.lz4.compressFrame",
      "decompressFrame": "@roblox/globaltype/_zune_serde.lz4.decompressFrame",
      "decompress": "@roblox/globaltype/_zune_serde.lz4.decompress",
      "compress": "@roblox/globaltype/_zune_serde.lz4.compress"
    }
  },
  "@roblox/globaltype/_zune_crypto.aead.chacha_poly.XChaCha12Poly1305": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "encrypt": "@roblox/globaltype/_zune_crypto.aead.chacha_poly.XChaCha12Poly1305.encrypt",
      "decrypt": "@roblox/globaltype/_zune_crypto.aead.chacha_poly.XChaCha12Poly1305.decrypt"
    }
  },
  "@roblox/globaltype/_zune_crypto_aead.aes_ocb.Aes128Ocb.encrypt": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/_zune_crypto_aead.aes_ocb.Aes128Ocb.encrypt/return/0"
    ],
    "params": [
      {
        "name": "data",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aes_ocb.Aes128Ocb.encrypt/param/0"
      },
      {
        "name": "key",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aes_ocb.Aes128Ocb.encrypt/param/1"
      },
      {
        "name": "nonce",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aes_ocb.Aes128Ocb.encrypt/param/2"
      },
      {
        "name": "ad",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aes_ocb.Aes128Ocb.encrypt/param/3"
      }
    ]
  },
  "@roblox/globaltype/_zune_serde": {
    "code_sample": "",
    "documentation": "A library to serialize and deserialize data in luau.",
    "keys": {
      "gzip": "@roblox/globaltype/_zune_serde.gzip",
      "json": "@roblox/globaltype/_zune_serde.json",
      "zstd": "@roblox/globaltype/_zune_serde.zstd",
      "json5": "@roblox/globaltype/_zune_serde.json5",
      "yaml": "@roblox/globaltype/_zune_serde.yaml",
      "base64": "@roblox/globaltype/_zune_serde.base64",
      "toml": "@roblox/globaltype/_zune_serde.toml",
      "lz4": "@roblox/globaltype/_zune_serde.lz4",
      "zlib": "@roblox/globaltype/_zune_serde.zlib"
    },
    "learn_more_link": "https://zune.sh/docs/v0.5.0/api/serde"
  },
  "@roblox/globaltype/_zune_serde_zstd": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "decompress": "@roblox/globaltype/_zune_serde_zstd.decompress",
      "compress": "@roblox/globaltype/_zune_serde_zstd.compress"
    }
  },
  "@roblox/globaltype/NetworkSocket.sendMsg": {
    "code_sample": "",
    "documentation": "Sends data over the socket, and returns the number of bytes sent.\n\n**Parameters**\n- `port`: The port to send the message to.\n- `address`: The address to send the message to.\n- `data`: The data to send.\n- `offset`: The offset to start sending from.\n  - default: `0`\n\n\n**Throws**\n- Network Error\n- Memory Error\n",
    "returns": [
      "@roblox/globaltype/NetworkSocket.sendMsg/return/0"
    ],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/NetworkSocket.sendMsg/param/0"
      },
      {
        "name": "port",
        "documentation": "@roblox/globaltype/NetworkSocket.sendMsg/param/1"
      },
      {
        "name": "address",
        "documentation": "@roblox/globaltype/NetworkSocket.sendMsg/param/2"
      },
      {
        "name": "data",
        "documentation": "@roblox/globaltype/NetworkSocket.sendMsg/param/3"
      },
      {
        "name": "offset",
        "documentation": "@roblox/globaltype/NetworkSocket.sendMsg/param/4"
      }
    ]
  },
  "@roblox/globaltype/FFICompileOptions.options": {
    "code_sample": "",
    "documentation": "The compiler options to use."
  },
  "@roblox/globaltype/FFIPointerType.newTag/param/1": {
    "code_sample": "",
    "documentation": "The tag to set."
  },
  "@roblox/globaltype/_zune_serde_json5.decode/param/0": {
    "code_sample": "",
    "documentation": "The JSON string to decode."
  },
  "@roblox/globaltype/_zune_mem.eqlSlice": {
    "code_sample": "",
    "documentation": "Compares two slices for equality.\n\n**Parameters**\n- `a`: The first slice to compare.\n- `aOffset`: The offset to start the comparison from in the first slice.\n- `b`: The second slice to compare.\n- `bOffset`: The offset to start the comparison from in the second slice.\n- `count`: The number of bytes to compare.\n",
    "returns": [
      "@roblox/globaltype/_zune_mem.eqlSlice/return/0"
    ],
    "params": [
      {
        "name": "a",
        "documentation": "@roblox/globaltype/_zune_mem.eqlSlice/param/0"
      },
      {
        "name": "aOffset",
        "documentation": "@roblox/globaltype/_zune_mem.eqlSlice/param/1"
      },
      {
        "name": "b",
        "documentation": "@roblox/globaltype/_zune_mem.eqlSlice/param/2"
      },
      {
        "name": "bOffset",
        "documentation": "@roblox/globaltype/_zune_mem.eqlSlice/param/3"
      },
      {
        "name": "count",
        "documentation": "@roblox/globaltype/_zune_mem.eqlSlice/param/4"
      }
    ]
  },
  "@roblox/globaltype/_zune_testing.expectEqual": {
    "code_sample": "",
    "documentation": "Expects a value to equal another.\n\nSimilar to `assert(value == expected, ...)`\n"
  },
  "@roblox/globaltype/_zune_random.RomuTrio": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "new": "@roblox/globaltype/_zune_random.RomuTrio.new"
    }
  },
  "@roblox/globaltype/_zune_crypto": {
    "code_sample": "",
    "documentation": "A library to do cryptographic operations in luau. Provides functions for hashing, aead, tls, and secure random number generation.",
    "keys": {
      "password": "@roblox/globaltype/_zune_crypto.password",
      "aead": "@roblox/globaltype/_zune_crypto.aead",
      "createHash": "@roblox/globaltype/_zune_crypto.createHash",
      "random": "@roblox/globaltype/_zune_crypto.random",
      "tls": "@roblox/globaltype/_zune_crypto.tls"
    },
    "learn_more_link": "https://zune.sh/docs/v0.5.0/api/crypto"
  },
  "@roblox/globaltype/_zune_fs.embedFile": {
    "code_sample": "",
    "documentation": "When called from a bundled context, this would get and load the contents of the embedded file.\nOtherwise would synchronously read a file relative to the calling script.\n\n**Parameters**\n- `path`: The file path relative to calling script.\n\n\n**Throws**\n- IO Error\n",
    "returns": [
      "@roblox/globaltype/_zune_fs.embedFile/return/0"
    ],
    "params": [
      {
        "name": "path",
        "documentation": "@roblox/globaltype/_zune_fs.embedFile/param/0"
      }
    ]
  },
  "@roblox/globaltype/_zune_mem.MAX_SIZE": {
    "code_sample": "",
    "documentation": "The maximum amount of bytes luau can hold."
  },
  "@roblox/globaltype/ServerWebSocketHandlers.close": {
    "code_sample": "",
    "documentation": "The function to call when a WebSocket connection is closed."
  },
  "@roblox/globaltype/_zune_serde_json5.decode/param/1": {
    "code_sample": "",
    "documentation": "The configuration for the decoding."
  },
  "@roblox/globaltype/CryptoHash.update/param/1": {
    "code_sample": "",
    "documentation": "The value to update the hash with."
  },
  "@roblox/globaltype/_zune_crypto_tls.setupServer/param/1": {
    "code_sample": "",
    "documentation": "The configuration for the server."
  },
  "@roblox/globaltype/_zune_mem.replaceScalar/param/0": {
    "code_sample": "",
    "documentation": "The source to replace in."
  },
  "@roblox/globaltype/_zune_crypto_password.verify/param/0": {
    "code_sample": "",
    "documentation": "The password to verify."
  },
  "@roblox/globaltype/_zune_ffi.free/param/0": {
    "code_sample": "",
    "documentation": "The pointer to free. If the pointer is static, it must have a known size."
  },
  "@roblox/globaltype/_zune_serde_json5": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "encode": "@roblox/globaltype/_zune_serde_json5.encode",
      "values": "@roblox/globaltype/_zune_serde_json5.values",
      "decode": "@roblox/globaltype/_zune_serde_json5.decode",
      "indents": "@roblox/globaltype/_zune_serde_json5.indents"
    }
  },
  "@roblox/globaltype/Regex.search": {
    "code_sample": "",
    "documentation": "\n\n**Throws**\n- Regex Error\n- Memory Error\n",
    "returns": [
      "@roblox/globaltype/Regex.search/return/0"
    ],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/Regex.search/param/0"
      },
      {
        "name": "input",
        "documentation": "@roblox/globaltype/Regex.search/param/1"
      }
    ]
  },
  "@roblox/globaltype/_zune_crypto.tls.setupServer/param/0": {
    "code_sample": "",
    "documentation": "The socket to setup the server on."
  },
  "@roblox/globaltype/IoReadable.readf32": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/IoReadable.readf32/return/0"
    ],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/IoReadable.readf32/param/0"
      }
    ]
  },
  "@roblox/globaltype/HttpWebSocket.isConnected": {
    "code_sample": "",
    "documentation": "Returns if the WebSocket is connected.",
    "returns": [
      "@roblox/globaltype/HttpWebSocket.isConnected/return/0"
    ],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/HttpWebSocket.isConnected/param/0"
      }
    ]
  },
  "@roblox/globaltype/_zune_ffi.tagName": {
    "code_sample": "",
    "documentation": "\n\n**Parameters**\n- `tag`: The tag id to get the name of.\n",
    "returns": [
      "@roblox/globaltype/_zune_ffi.tagName/return/0"
    ],
    "params": [
      {
        "name": "tag",
        "documentation": "@roblox/globaltype/_zune_ffi.tagName/param/0"
      }
    ]
  },
  "@roblox/globaltype/_zune_random.Isaac64.new": {
    "code_sample": "",
    "documentation": "\n\n**Throws**\n- Memory Error\n",
    "returns": [
      "@roblox/globaltype/_zune_random.Isaac64.new/return/0"
    ],
    "params": [
      {
        "name": "seed",
        "documentation": "@roblox/globaltype/_zune_random.Isaac64.new/param/0"
      }
    ]
  },
  "@roblox/globaltype/CryptoHash.copy": {
    "code_sample": "",
    "documentation": "Copies the current hash state.\n\nIf the hash object was created with a key, the object must still be opened.\n\n**Throws**\n- Crypto Error\n- Memory Error\n",
    "returns": [
      "@roblox/globaltype/CryptoHash.copy/return/0"
    ],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/CryptoHash.copy/param/0"
      }
    ]
  },
  "@roblox/globaltype/HttpWebSocket.close/param/1": {
    "code_sample": "",
    "documentation": "The close code to send."
  },
  "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis256X4": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "encrypt": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis256X4.encrypt",
      "decrypt": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis256X4.decrypt"
    }
  },
  "@roblox/globaltype/_zune_mem.endsWith": {
    "code_sample": "",
    "documentation": "Checks if a slice ends with a given needle.\n\n**Parameters**\n- `slice`: The slice to check.\n- `needle`: The needle to check for.\n",
    "returns": [
      "@roblox/globaltype/_zune_mem.endsWith/return/0"
    ],
    "params": [
      {
        "name": "slice",
        "documentation": "@roblox/globaltype/_zune_mem.endsWith/param/0"
      },
      {
        "name": "needle",
        "documentation": "@roblox/globaltype/_zune_mem.endsWith/param/1"
      }
    ]
  },
  "@roblox/globaltype/FileHandle.read": {
    "code_sample": "",
    "documentation": "read from the file"
  },
  "@roblox/globaltype/FileHandle.seekBy": {
    "code_sample": "",
    "documentation": "Seeks the file by relative to the current position.\n\n**Parameters**\n- `amount`: The amount of bytes to seek from the current seek.\n  - default: `0`\n\n\n**Throws**\n- IO Error\n",
    "returns": [],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/FileHandle.seekBy/param/0"
      },
      {
        "name": "amount",
        "documentation": "@roblox/globaltype/FileHandle.seekBy/param/1"
      }
    ]
  },
  "@roblox/globaltype/_zune_serde.json5.decode/param/0": {
    "code_sample": "",
    "documentation": "The JSON string to decode."
  },
  "@roblox/globaltype/_zune_fs.metadata/param/0": {
    "code_sample": "",
    "documentation": "The path to the file or directory to get metadata from."
  },
  "@roblox/globaltype/Regex.replace/param/1": {
    "code_sample": "",
    "documentation": "The string to replace."
  },
  "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis128X2.decrypt": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis128X2.decrypt/return/0"
    ],
    "params": [
      {
        "name": "cipher",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis128X2.decrypt/param/0"
      },
      {
        "name": "tag",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis128X2.decrypt/param/1"
      },
      {
        "name": "key",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis128X2.decrypt/param/2"
      },
      {
        "name": "nonce",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis128X2.decrypt/param/3"
      },
      {
        "name": "ad",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis128X2.decrypt/param/4"
      }
    ]
  },
  "@roblox/globaltype/_zune_ffi.c.compile": {
    "code_sample": "",
    "documentation": "\n\n**Parameters**\n- `src`: The C source code to compile.\n- `opts`: The options for the compilation.\n",
    "returns": [
      "@roblox/globaltype/_zune_ffi.c.compile/return/0"
    ],
    "params": [
      {
        "name": "src",
        "documentation": "@roblox/globaltype/_zune_ffi.c.compile/param/0"
      },
      {
        "name": "opts",
        "documentation": "@roblox/globaltype/_zune_ffi.c.compile/param/1"
      }
    ]
  },
  "@roblox/globaltype/_zune_mem.trim": {
    "code_sample": "",
    "documentation": "Trims the given values from both ends of the buffer.\n\n**Parameters**\n- `src`: The source to trim.\n- `values_to_strip`: The values to trim from the source.\n\n\n**Throws**\n- Memory Error\n",
    "returns": [
      "@roblox/globaltype/_zune_mem.trim/return/0"
    ],
    "params": [
      {
        "name": "src",
        "documentation": "@roblox/globaltype/_zune_mem.trim/param/0"
      },
      {
        "name": "values_to_strip",
        "documentation": "@roblox/globaltype/_zune_mem.trim/param/1"
      }
    ]
  },
  "@roblox/globaltype/_zune_net_SOCKF": {
    "code_sample": "",
    "documentation": "Table of socket flags.",
    "keys": {
      "DCCP": "@roblox/globaltype/_zune_net_SOCKF.DCCP",
      "RAW": "@roblox/globaltype/_zune_net_SOCKF.RAW",
      "RDM": "@roblox/globaltype/_zune_net_SOCKF.RDM",
      "DGRAM": "@roblox/globaltype/_zune_net_SOCKF.DGRAM",
      "PACKET": "@roblox/globaltype/_zune_net_SOCKF.PACKET",
      "STREAM": "@roblox/globaltype/_zune_net_SOCKF.STREAM",
      "SEQPACKET": "@roblox/globaltype/_zune_net_SOCKF.SEQPACKET",
      "CLOEXEC": "@roblox/globaltype/_zune_net_SOCKF.CLOEXEC",
      "NONBLOCK": "@roblox/globaltype/_zune_net_SOCKF.NONBLOCK"
    }
  },
  "@roblox/globaltype/_zune_serde_yaml.decode": {
    "code_sample": "",
    "documentation": "Decodes YAML.\n\n**Parameters**\n- `yaml`: The YAML string to decode.\n\n\n**Throws**\n- Memory Error\n",
    "returns": [
      "@roblox/globaltype/_zune_serde_yaml.decode/return/0"
    ],
    "params": [
      {
        "name": "yaml",
        "documentation": "@roblox/globaltype/_zune_serde_yaml.decode/param/0"
      }
    ]
  },
  "@roblox/globaltype/NetworkSocket.setOption/param/1": {
    "code_sample": "",
    "documentation": "The level of the option."
  },
  "@roblox/globaltype/FFIPointer.span": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/FFIPointer.span/return/0"
    ],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/FFIPointer.span/param/0"
      },
      {
        "name": "offset",
        "documentation": "@roblox/globaltype/FFIPointer.span/param/1"
      }
    ]
  },
  "@roblox/globaltype/FFIPointer.readi16": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/FFIPointer.readi16/return/0"
    ],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/FFIPointer.readi16/param/0"
      },
      {
        "name": "offset",
        "documentation": "@roblox/globaltype/FFIPointer.readi16/param/1"
      }
    ]
  },
  "@roblox/globaltype/_zune_fs.path.globMatch/param/1": {
    "code_sample": "",
    "documentation": "The glob pattern to match against."
  },
  "@roblox/globaltype/_zune_ffi.free": {
    "code_sample": "",
    "documentation": "\n\n**Parameters**\n- `src`: The pointer to free. If the pointer is static, it must have a known size.\n\n\n**Throws**\n- FFI Error\n- Memory Error\n",
    "returns": [],
    "params": [
      {
        "name": "src",
        "documentation": "@roblox/globaltype/_zune_ffi.free/param/0"
      }
    ]
  },
  "@roblox/globaltype/_zune_mem.trim/param/0": {
    "code_sample": "",
    "documentation": "The source to trim."
  },
  "@roblox/globaltype/_zune_mem.lastIndexOfNone": {
    "code_sample": "",
    "documentation": "Find the last index of a byte that is not in the given `needle`.\n\n**Parameters**\n- `src`: The source to search in.\n- `needle`: The bytes to not search for.\n",
    "returns": [
      "@roblox/globaltype/_zune_mem.lastIndexOfNone/return/0"
    ],
    "params": [
      {
        "name": "src",
        "documentation": "@roblox/globaltype/_zune_mem.lastIndexOfNone/param/0"
      },
      {
        "name": "needle",
        "documentation": "@roblox/globaltype/_zune_mem.lastIndexOfNone/param/1"
      }
    ]
  },
  "@roblox/globaltype/_zune_crypto_aead.aes_gcm.Aes256Gcm.encrypt": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/_zune_crypto_aead.aes_gcm.Aes256Gcm.encrypt/return/0"
    ],
    "params": [
      {
        "name": "data",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aes_gcm.Aes256Gcm.encrypt/param/0"
      },
      {
        "name": "key",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aes_gcm.Aes256Gcm.encrypt/param/1"
      },
      {
        "name": "nonce",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aes_gcm.Aes256Gcm.encrypt/param/2"
      },
      {
        "name": "ad",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aes_gcm.Aes256Gcm.encrypt/param/3"
      }
    ]
  },
  "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis128X4_256": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "encrypt": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis128X4_256.encrypt",
      "decrypt": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis128X4_256.decrypt"
    }
  },
  "@roblox/globaltype/_zune_serde.yaml.decode": {
    "code_sample": "",
    "documentation": "Decodes YAML.\n\n**Parameters**\n- `yaml`: The YAML string to decode.\n\n\n**Throws**\n- Memory Error\n",
    "returns": [
      "@roblox/globaltype/_zune_serde.yaml.decode/return/0"
    ],
    "params": [
      {
        "name": "yaml",
        "documentation": "@roblox/globaltype/_zune_serde.yaml.decode/param/0"
      }
    ]
  },
  "@roblox/globaltype/BufferStream.reader": {
    "code_sample": "",
    "documentation": "\n\n**Throws**\n- Memory Error\n",
    "returns": [
      "@roblox/globaltype/BufferStream.reader/return/0"
    ],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/BufferStream.reader/param/0"
      }
    ]
  },
  "@roblox/globaltype/_zune_mem.indexOfPos/param/1": {
    "code_sample": "",
    "documentation": "The offset to start searching from."
  },
  "@roblox/globaltype/_zune_fs.copy": {
    "code_sample": "",
    "documentation": "Copies a file or directory from one path to another path.\n\n**Parameters**\n- `from`: The path to the file or directory to copy.\n- `to`: The path to copy the file or directory to.\n- `overwrite`: If true, the function will overwrite the file if it exists.\n  - default: `false`\n\n\n**Throws**\n- IO Error\n",
    "returns": [],
    "params": [
      {
        "name": "from",
        "documentation": "@roblox/globaltype/_zune_fs.copy/param/0"
      },
      {
        "name": "to",
        "documentation": "@roblox/globaltype/_zune_fs.copy/param/1"
      },
      {
        "name": "overwrite",
        "documentation": "@roblox/globaltype/_zune_fs.copy/param/2"
      }
    ]
  },
  "@roblox/globaltype/BufferStream.writer": {
    "code_sample": "",
    "documentation": "\n\n**Throws**\n- Memory Error\n",
    "returns": [
      "@roblox/globaltype/BufferStream.writer/return/0"
    ],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/BufferStream.writer/param/0"
      }
    ]
  },
  "@roblox/globaltype/FileHandle.unlock": {
    "code_sample": "",
    "documentation": "Unlocks from the current lock mode.\n\n**Throws**\n- IO Error\n",
    "returns": [],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/FileHandle.unlock/param/0"
      }
    ]
  },
  "@roblox/globaltype/_zune_mem.lastIndexOf": {
    "code_sample": "",
    "documentation": "Find the last index of a needle in the buffer.\n\n**Parameters**\n- `src`: The source to search in.\n- `needle`: The needle to search for.\n",
    "returns": [
      "@roblox/globaltype/_zune_mem.lastIndexOf/return/0"
    ],
    "params": [
      {
        "name": "src",
        "documentation": "@roblox/globaltype/_zune_mem.lastIndexOf/param/0"
      },
      {
        "name": "needle",
        "documentation": "@roblox/globaltype/_zune_mem.lastIndexOf/param/1"
      }
    ]
  },
  "@roblox/globaltype/_zune_io.createBufferSink": {
    "code_sample": "",
    "documentation": "Creates a buffer sink.\n\n**Parameters**\n- `opts`: The options for the buffer sink.\n\n\n**Throws**\n- Memory Error\n",
    "returns": [
      "@roblox/globaltype/_zune_io.createBufferSink/return/0"
    ],
    "params": [
      {
        "name": "opts",
        "documentation": "@roblox/globaltype/_zune_io.createBufferSink/param/0"
      }
    ]
  },
  "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis256X2.encrypt": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis256X2.encrypt/return/0"
    ],
    "params": [
      {
        "name": "data",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis256X2.encrypt/param/0"
      },
      {
        "name": "key",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis256X2.encrypt/param/1"
      },
      {
        "name": "nonce",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis256X2.encrypt/param/2"
      },
      {
        "name": "ad",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis256X2.encrypt/param/3"
      }
    ]
  },
  "@roblox/globaltype/_zune_mem.lastIndexOfScalar": {
    "code_sample": "",
    "documentation": "Find the last index of a scalar/char in the buffer.\n\n**Parameters**\n- `src`: The source to search in.\n- `char`: The byte to search for.\n",
    "returns": [
      "@roblox/globaltype/_zune_mem.lastIndexOfScalar/return/0"
    ],
    "params": [
      {
        "name": "src",
        "documentation": "@roblox/globaltype/_zune_mem.lastIndexOfScalar/param/0"
      },
      {
        "name": "char",
        "documentation": "@roblox/globaltype/_zune_mem.lastIndexOfScalar/param/1"
      }
    ]
  },
  "@roblox/globaltype/_zune_ffi.types": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "i16": "@roblox/globaltype/_zune_ffi.types.i16",
      "i32": "@roblox/globaltype/_zune_ffi.types.i32",
      "pointer": "@roblox/globaltype/_zune_ffi.types.pointer",
      "double": "@roblox/globaltype/_zune_ffi.types.double",
      "i64": "@roblox/globaltype/_zune_ffi.types.i64",
      "u8": "@roblox/globaltype/_zune_ffi.types.u8",
      "float": "@roblox/globaltype/_zune_ffi.types.float",
      "u64": "@roblox/globaltype/_zune_ffi.types.u64",
      "void": "@roblox/globaltype/_zune_ffi.types.void",
      "i8": "@roblox/globaltype/_zune_ffi.types.i8",
      "u16": "@roblox/globaltype/_zune_ffi.types.u16",
      "u32": "@roblox/globaltype/_zune_ffi.types.u32"
    }
  },
  "@roblox/globaltype/_zune_serde_base64.encode": {
    "code_sample": "",
    "documentation": "Encodes a string to Base64."
  },
  "@roblox/globaltype/FileHandle.readSync": {
    "code_sample": "",
    "documentation": "Read the contents of the file synchronously."
  },
  "@roblox/globaltype/_zune_fs.path.join": {
    "code_sample": "",
    "documentation": "Joins multiple paths into a single path with OS specific separator.\n```luau\n- (`lib`, `main.luau`) -> `lib/main.luau`\n- (`lib`, `lib/main.luau`) -> `lib/lib/main.luau`\n```\n",
    "returns": [
      "@roblox/globaltype/_zune_fs.path.join/return/0"
    ],
    "params": [
      {
        "name": "...",
        "documentation": "@roblox/globaltype/_zune_fs.path.join/param/0"
      }
    ]
  },
  "@roblox/globaltype/_zune_fs.embedFile/param/0": {
    "code_sample": "",
    "documentation": "The file path relative to calling script."
  },
  "@roblox/globaltype/Random.clone": {
    "code_sample": "",
    "documentation": "Creates a new random number generator with the same state as the current one.",
    "returns": [
      "@roblox/globaltype/Random.clone/return/0"
    ],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/Random.clone/param/0"
      }
    ]
  },
  "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis256X2.decrypt": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis256X2.decrypt/return/0"
    ],
    "params": [
      {
        "name": "cipher",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis256X2.decrypt/param/0"
      },
      {
        "name": "tag",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis256X2.decrypt/param/1"
      },
      {
        "name": "key",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis256X2.decrypt/param/2"
      },
      {
        "name": "nonce",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis256X2.decrypt/param/3"
      },
      {
        "name": "ad",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis256X2.decrypt/param/4"
      }
    ]
  },
  "@roblox/globaltype/_zune_mem.indexOf/param/0": {
    "code_sample": "",
    "documentation": "The source to search in."
  },
  "@roblox/globaltype/_zune_serde.json5.decode": {
    "code_sample": "",
    "documentation": "Decodes JSON.\n\n**Parameters**\n- `json`: The JSON string to decode.\n- `config`: The configuration for the decoding.\n\n\n**Throws**\n- Memory Error\n",
    "returns": [
      "@roblox/globaltype/_zune_serde.json5.decode/return/0"
    ],
    "params": [
      {
        "name": "json",
        "documentation": "@roblox/globaltype/_zune_serde.json5.decode/param/0"
      },
      {
        "name": "config",
        "documentation": "@roblox/globaltype/_zune_serde.json5.decode/param/1"
      }
    ]
  },
  "@roblox/globaltype/BufferStream.canRead/param/1": {
    "code_sample": "",
    "documentation": "The amount of bytes to check for reading availability."
  },
  "@roblox/globaltype/_zune_mem.lastIndexOfNone/param/1": {
    "code_sample": "",
    "documentation": "The bytes to not search for."
  },
  "@roblox/globaltype/_zune_process.loadEnv/return/0": {
    "code_sample": "",
    "documentation": "",
    "keys": []
  },
  "@roblox/globaltype/Regex.replaceAll/param/2": {
    "code_sample": "",
    "documentation": "The replacement string."
  },
  "@roblox/globaltype/_zune_ffi.suffix": {
    "code_sample": "",
    "documentation": "The recommended suffix for the library file.\n\nPlatforms:\n- Windows: `.dll`\n- Linux: `.so`\n- macOS: `.dylib`"
  },
  "@roblox/globaltype/_zune_random_Xoshiro256.new": {
    "code_sample": "",
    "documentation": "\n\n**Throws**\n- Memory Error\n",
    "returns": [
      "@roblox/globaltype/_zune_random_Xoshiro256.new/return/0"
    ],
    "params": [
      {
        "name": "seed",
        "documentation": "@roblox/globaltype/_zune_random_Xoshiro256.new/param/0"
      }
    ]
  },
  "@roblox/globaltype/_zune_serde.toml.decode/return/0": {
    "code_sample": "",
    "documentation": "",
    "keys": []
  },
  "@roblox/globaltype/_zune_net_http.websocket/param/0": {
    "code_sample": "",
    "documentation": "The host to connect to."
  },
  "@roblox/globaltype/_zune_mem.rotate/param/0": {
    "code_sample": "",
    "documentation": "The source to rotate in."
  },
  "@roblox/globaltype/_zune_process.env": {
    "code_sample": "",
    "documentation": "The process enviroment table.\n\n(Loaded from top to bottom)\n- Includes `.env` file in the current working directory.\n- Includes `.env.production` file in the current working directory. When `LUAU_ENV` is set to `PRODUCTION`.\n- Includes `.env.development` file in the current working directory. When `LUAU_ENV` is set to `DEVELOPMENT`.\n- Includes `.env.test` file in the current working directory. When `LUAU_ENV` is set to `TEST`.\n- Includes `.env.local` file in the current working directory.",
    "keys": []
  },
  "@roblox/globaltype/BufferStream.canRead": {
    "code_sample": "",
    "documentation": "\n\n**Parameters**\n- `amount`: The amount of bytes to check for reading availability.\n  - default: `0`\n",
    "returns": [
      "@roblox/globaltype/BufferStream.canRead/return/0"
    ],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/BufferStream.canRead/param/0"
      },
      {
        "name": "amount",
        "documentation": "@roblox/globaltype/BufferStream.canRead/param/1"
      }
    ]
  },
  "@roblox/globaltype/_zune_mem.trimLeft/param/1": {
    "code_sample": "",
    "documentation": "The values to trim from the source."
  },
  "@roblox/globaltype/IoReadable.readu16": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/IoReadable.readu16/return/0"
    ],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/IoReadable.readu16/param/0"
      }
    ]
  },
  "@roblox/globaltype/_zune_net_http": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "request": "@roblox/globaltype/_zune_net_http.request",
      "websocket": "@roblox/globaltype/_zune_net_http.websocket",
      "serve": "@roblox/globaltype/_zune_net_http.serve"
    }
  },
  "@roblox/globaltype/_zune_crypto.tls.bundleFromSystem": {
    "code_sample": "",
    "documentation": "\n\n**Throws**\n- IO Error\n- Tls Error\n",
    "returns": [
      "@roblox/globaltype/_zune_crypto.tls.bundleFromSystem/return/0"
    ],
    "params": []
  },
  "@roblox/globaltype/BufferSinkOptions.limit": {
    "code_sample": "",
    "documentation": "The maximum amount of bytes allowed to be written to the buffer."
  },
  "@roblox/globaltype/_zune_fs.path.dirname": {
    "code_sample": "",
    "documentation": "Returns the directory name of the provided path, will return nil if there are no more directories.\n- `lib/main.luau` -> `lib`\n- `lib` -> nil\n\n**Parameters**\n- `path`: The path to get the directory name from.\n",
    "returns": [
      "@roblox/globaltype/_zune_fs.path.dirname/return/0"
    ],
    "params": [
      {
        "name": "path",
        "documentation": "@roblox/globaltype/_zune_fs.path.dirname/param/0"
      }
    ]
  },
  "@roblox/globaltype/_zune_random.Sfc64": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "new": "@roblox/globaltype/_zune_random.Sfc64.new"
    }
  },
  "@roblox/globaltype/_zune_crypto.aead.salsa_poly.XSalsa20Poly1305": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "encrypt": "@roblox/globaltype/_zune_crypto.aead.salsa_poly.XSalsa20Poly1305.encrypt",
      "decrypt": "@roblox/globaltype/_zune_crypto.aead.salsa_poly.XSalsa20Poly1305.decrypt"
    }
  },
  "@roblox/globaltype/_zune_random.Pcg32.new": {
    "code_sample": "",
    "documentation": "\n\n**Throws**\n- Memory Error\n",
    "returns": [
      "@roblox/globaltype/_zune_random.Pcg32.new/return/0"
    ],
    "params": [
      {
        "name": "seed",
        "documentation": "@roblox/globaltype/_zune_random.Pcg32.new/param/0"
      }
    ]
  },
  "@roblox/globaltype/_zune_crypto.aead.aes_ocb.Aes128Ocb.decrypt": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/_zune_crypto.aead.aes_ocb.Aes128Ocb.decrypt/return/0"
    ],
    "params": [
      {
        "name": "cipher",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aes_ocb.Aes128Ocb.decrypt/param/0"
      },
      {
        "name": "tag",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aes_ocb.Aes128Ocb.decrypt/param/1"
      },
      {
        "name": "key",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aes_ocb.Aes128Ocb.decrypt/param/2"
      },
      {
        "name": "nonce",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aes_ocb.Aes128Ocb.decrypt/param/3"
      },
      {
        "name": "ad",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aes_ocb.Aes128Ocb.decrypt/param/4"
      }
    ]
  },
  "@roblox/globaltype/_zune_testing.test/param/1": {
    "code_sample": "",
    "documentation": "The callback to run the test.",
    "returns": [],
    "params": []
  },
  "@roblox/globaltype/_zune_mem.slice/param/1": {
    "code_sample": "",
    "documentation": "The offset to start the slice from."
  },
  "@roblox/globaltype/NetworkSocket.send": {
    "code_sample": "",
    "documentation": "Sends data over the socket, and returns the number of bytes sent.\n\n**Parameters**\n- `data`: The data to send.\n- `offset`: The offset to start sending from.\n  - default: `0`\n\n\n**Throws**\n- Network Error\n- Memory Error\n",
    "returns": [
      "@roblox/globaltype/NetworkSocket.send/return/0"
    ],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/NetworkSocket.send/param/0"
      },
      {
        "name": "data",
        "documentation": "@roblox/globaltype/NetworkSocket.send/param/1"
      },
      {
        "name": "offset",
        "documentation": "@roblox/globaltype/NetworkSocket.send/param/2"
      }
    ]
  },
  "@roblox/globaltype/BufferStream.seekTo/param/1": {
    "code_sample": "",
    "documentation": "The position to seek to."
  },
  "@roblox/globaltype/_zune_crypto.aead": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "salsa_poly": "@roblox/globaltype/_zune_crypto.aead.salsa_poly",
      "isap": "@roblox/globaltype/_zune_crypto.aead.isap",
      "aes_gcm": "@roblox/globaltype/_zune_crypto.aead.aes_gcm",
      "aegis": "@roblox/globaltype/_zune_crypto.aead.aegis",
      "aes_ocb": "@roblox/globaltype/_zune_crypto.aead.aes_ocb",
      "chacha_poly": "@roblox/globaltype/_zune_crypto.aead.chacha_poly"
    }
  },
  "@roblox/globaltype/_zune_thread.fromBytecode/param/0": {
    "code_sample": "",
    "documentation": "The bytecode to load in the new thread."
  },
  "@roblox/globaltype/HttpServeOptions.max_connections": {
    "code_sample": "",
    "documentation": "The maximum number of connections.\n- `0` for no limit"
  },
  "@roblox/globaltype/IoWritable.write/param/1": {
    "code_sample": "",
    "documentation": "The data to write to the stream."
  },
  "@roblox/globaltype/_zune_ffi_c.compile/param/1": {
    "code_sample": "",
    "documentation": "The options for the compilation."
  },
  "@roblox/globaltype/BufferStream.seekTo": {
    "code_sample": "",
    "documentation": "\n\n**Parameters**\n- `pos`: The position to seek to.\n",
    "returns": [],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/BufferStream.seekTo/param/0"
      },
      {
        "name": "pos",
        "documentation": "@roblox/globaltype/BufferStream.seekTo/param/1"
      }
    ]
  },
  "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis128X4_256.encrypt": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis128X4_256.encrypt/return/0"
    ],
    "params": [
      {
        "name": "data",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis128X4_256.encrypt/param/0"
      },
      {
        "name": "key",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis128X4_256.encrypt/param/1"
      },
      {
        "name": "nonce",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis128X4_256.encrypt/param/2"
      },
      {
        "name": "ad",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis128X4_256.encrypt/param/3"
      }
    ]
  },
  "@roblox/globaltype/_zune_crypto_password.verify/param/1": {
    "code_sample": "",
    "documentation": "The hash to verify against."
  },
  "@roblox/globaltype/_zune_mem.eqlSlice/param/2": {
    "code_sample": "",
    "documentation": "The second slice to compare."
  },
  "@roblox/globaltype/_zune_fs_path.relative/param/1": {
    "code_sample": "",
    "documentation": "The path to resolve to."
  },
  "@roblox/globaltype/BufferStream.size": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/BufferStream.size/return/0"
    ],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/BufferStream.size/param/0"
      }
    ]
  },
  "@roblox/globaltype/_zune_luau.parseExpr/param/0": {
    "code_sample": "",
    "documentation": "The expression to parse."
  },
  "@roblox/globaltype/_zune_crypto.aead.aes_gcm.Aes128Gcm.decrypt": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/_zune_crypto.aead.aes_gcm.Aes128Gcm.decrypt/return/0"
    ],
    "params": [
      {
        "name": "cipher",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aes_gcm.Aes128Gcm.decrypt/param/0"
      },
      {
        "name": "tag",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aes_gcm.Aes128Gcm.decrypt/param/1"
      },
      {
        "name": "key",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aes_gcm.Aes128Gcm.decrypt/param/2"
      },
      {
        "name": "nonce",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aes_gcm.Aes128Gcm.decrypt/param/3"
      },
      {
        "name": "ad",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aes_gcm.Aes128Gcm.decrypt/param/4"
      }
    ]
  },
  "@roblox/globaltype/IoWritable.writei8": {
    "code_sample": "",
    "documentation": "\n\n**Throws**\n- Writer Error\n",
    "returns": [],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/IoWritable.writei8/param/0"
      },
      {
        "name": "value",
        "documentation": "@roblox/globaltype/IoWritable.writei8/param/1"
      }
    ]
  },
  "@roblox/globaltype/_zune_ffi.fn": {
    "code_sample": "",
    "documentation": "\n\n**Parameters**\n- `definition`: The function definition.\n- `srcPtr`: The pointer to the function.\n\n\n**Throws**\n- FFI Error\n- Memory Error\n",
    "returns": [
      "@roblox/globaltype/_zune_ffi.fn/return/0"
    ],
    "params": [
      {
        "name": "definition",
        "documentation": "@roblox/globaltype/_zune_ffi.fn/param/0"
      },
      {
        "name": "srcPtr",
        "documentation": "@roblox/globaltype/_zune_ffi.fn/param/1"
      }
    ]
  },
  "@roblox/globaltype/BufferStream.write/param/1": {
    "code_sample": "",
    "documentation": "The data to write to the stream."
  },
  "@roblox/globaltype/_zune_process.create/param/1": {
    "code_sample": "",
    "documentation": "The arguments to pass to the executable."
  },
  "@roblox/globaltype/BufferStream.write": {
    "code_sample": "",
    "documentation": "\n\n**Parameters**\n- `data`: The data to write to the stream.\n\n\n**Throws**\n- Writer Error\n",
    "returns": [],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/BufferStream.write/param/0"
      },
      {
        "name": "data",
        "documentation": "@roblox/globaltype/BufferStream.write/param/1"
      }
    ]
  },
  "@roblox/globaltype/FFIPointer.readi8": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/FFIPointer.readi8/return/0"
    ],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/FFIPointer.readi8/param/0"
      },
      {
        "name": "offset",
        "documentation": "@roblox/globaltype/FFIPointer.readi8/param/1"
      }
    ]
  },
  "@roblox/globaltype/NetworkSocket.recvMsg/param/1": {
    "code_sample": "",
    "documentation": "The maximum size of the message to receive."
  },
  "@roblox/globaltype/_zune_crypto.aead.salsa_poly": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "XSalsa20Poly1305": "@roblox/globaltype/_zune_crypto.aead.salsa_poly.XSalsa20Poly1305"
    }
  },
  "@roblox/globaltype/_zune_mem.reverse": {
    "code_sample": "",
    "documentation": "Reverses the buffer in place.\n- `[1, 2, 3]` -> `[3, 2, 1]`\n\n**Parameters**\n- `src`: The source to reverse in.\n",
    "returns": [],
    "params": [
      {
        "name": "src",
        "documentation": "@roblox/globaltype/_zune_mem.reverse/param/0"
      }
    ]
  },
  "@roblox/globaltype/ProcessChild.wait": {
    "code_sample": "",
    "documentation": "Kills the process and yields until the process exits.\n\n**Throws**\n- Process Error\n",
    "returns": [
      "@roblox/globaltype/ProcessChild.wait/return/0"
    ],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/ProcessChild.wait/param/0"
      }
    ]
  },
  "@roblox/globaltype/_zune_ffi.dlopen/param/1": {
    "code_sample": "",
    "documentation": "The symbols to load from the library.",
    "keys": []
  },
  "@roblox/globaltype/NetworkSocket.setOption/param/2": {
    "code_sample": "",
    "documentation": "The name of the option."
  },
  "@roblox/globaltype/FFIStructureType.new/param/1": {
    "code_sample": "",
    "documentation": "The fields to set in the structure."
  },
  "@roblox/globaltype/_zune_crypto_aead.aes_gcm.Aes256Gcm": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "encrypt": "@roblox/globaltype/_zune_crypto_aead.aes_gcm.Aes256Gcm.encrypt",
      "decrypt": "@roblox/globaltype/_zune_crypto_aead.aes_gcm.Aes256Gcm.decrypt"
    }
  },
  "@roblox/globaltype/_zune_crypto.aead.chacha_poly.ChaCha20Poly1305.encrypt": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/_zune_crypto.aead.chacha_poly.ChaCha20Poly1305.encrypt/return/0"
    ],
    "params": [
      {
        "name": "data",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.chacha_poly.ChaCha20Poly1305.encrypt/param/0"
      },
      {
        "name": "key",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.chacha_poly.ChaCha20Poly1305.encrypt/param/1"
      },
      {
        "name": "nonce",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.chacha_poly.ChaCha20Poly1305.encrypt/param/2"
      },
      {
        "name": "ad",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.chacha_poly.ChaCha20Poly1305.encrypt/param/3"
      }
    ]
  },
  "@roblox/globaltype/_zune_datetime.fromUnixTimestampMillis": {
    "code_sample": "",
    "documentation": "\n\n**Parameters**\n- `timestamp`: The unix timestamp in milliseconds.\n\n\n**Throws**\n- DateTime Error\n- Memory Error\n",
    "returns": [
      "@roblox/globaltype/_zune_datetime.fromUnixTimestampMillis/return/0"
    ],
    "params": [
      {
        "name": "timestamp",
        "documentation": "@roblox/globaltype/_zune_datetime.fromUnixTimestampMillis/param/0"
      }
    ]
  },
  "@roblox/globaltype/_zune_fs.path.join/param/0": {
    "code_sample": "",
    "documentation": "The paths to join. if no arguments are provided, the result will be `nil`."
  },
  "@roblox/globaltype/BufferSink.close": {
    "code_sample": "",
    "documentation": "",
    "returns": [],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/BufferSink.close/param/0"
      }
    ]
  },
  "@roblox/globaltype/Random.nextInteger/param/1": {
    "code_sample": "",
    "documentation": "The minimum value (inclusive)."
  },
  "@roblox/globaltype/_zune_mem.lastIndexOfNone/param/0": {
    "code_sample": "",
    "documentation": "The source to search in."
  },
  "@roblox/globaltype/_zune_fs.path.dirname/param/0": {
    "code_sample": "",
    "documentation": "The path to get the directory name from."
  },
  "@roblox/globaltype/_zune_fs.removeDir": {
    "code_sample": "",
    "documentation": "Removes a directory at the provided path.\n\n**Parameters**\n- `path`: The path to the directory to remove.\n- `recursive`: If true, the function will remove all files and directories inside the directory.\n  - default: `false`\n\n\n**Throws**\n- IO Error\n",
    "returns": [],
    "params": [
      {
        "name": "path",
        "documentation": "@roblox/globaltype/_zune_fs.removeDir/param/0"
      },
      {
        "name": "recursive",
        "documentation": "@roblox/globaltype/_zune_fs.removeDir/param/1"
      }
    ]
  },
  "@roblox/globaltype/_zune_crypto_tls.setupClient": {
    "code_sample": "",
    "documentation": "\n\n**Parameters**\n- `socket`: The socket to setup the client on.\n- `config`: The configuration for the client.\n\n\n**Throws**\n- Tls Error\n- Memory Error\n",
    "returns": [],
    "params": [
      {
        "name": "socket",
        "documentation": "@roblox/globaltype/_zune_crypto_tls.setupClient/param/0"
      },
      {
        "name": "config",
        "documentation": "@roblox/globaltype/_zune_crypto_tls.setupClient/param/1"
      }
    ]
  },
  "@roblox/globaltype/Random.nextInteger": {
    "code_sample": "",
    "documentation": "Generates a random integer.\n\nIf no arguments are provided, the function will generate a number between the limits of a signed 32-bit integer.\n\n**Parameters**\n- `min`: The minimum value (inclusive).\n- `max`: The maximum value (inclusive).\n\n\n**Throws**\n- Range Error\n",
    "returns": [
      "@roblox/globaltype/Random.nextInteger/return/0"
    ],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/Random.nextInteger/param/0"
      },
      {
        "name": "min",
        "documentation": "@roblox/globaltype/Random.nextInteger/param/1"
      },
      {
        "name": "max",
        "documentation": "@roblox/globaltype/Random.nextInteger/param/2"
      }
    ]
  },
  "@roblox/globaltype/FFILibrary.getSymbol": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/FFILibrary.getSymbol/return/0"
    ],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/FFILibrary.getSymbol/param/0"
      },
      {
        "name": "symbol",
        "documentation": "@roblox/globaltype/FFILibrary.getSymbol/param/1"
      }
    ]
  },
  "@roblox/globaltype/FFIStructureType.new": {
    "code_sample": "",
    "documentation": "Creates a new instance of the structure.\n\n**Parameters**\n- `fields`: The fields to set in the structure.\n\n\n**Throws**\n- FFI Error\n- Memory Error\n",
    "returns": [
      "@roblox/globaltype/FFIStructureType.new/return/0"
    ],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/FFIStructureType.new/param/0"
      },
      {
        "name": "fields",
        "documentation": "@roblox/globaltype/FFIStructureType.new/param/1"
      }
    ]
  },
  "@roblox/globaltype/_zune_mem.indexOfAny/param/0": {
    "code_sample": "",
    "documentation": "The source to search in."
  },
  "@roblox/globaltype/HttpWebSocketOptions.open": {
    "code_sample": "",
    "documentation": "The function to call when the WebSocket connection is opened."
  },
  "@roblox/globaltype/_zune_fs.move/param/2": {
    "code_sample": "",
    "documentation": "If true, the function will overwrite the file if `to` exists."
  },
  "@roblox/globaltype/FFIFunctionDefintion": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "args": "@roblox/globaltype/FFIFunctionDefintion.args",
      "returns": "@roblox/globaltype/FFIFunctionDefintion.returns"
    }
  },
  "@roblox/globaltype/_zune_fs.path": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "dirname": "@roblox/globaltype/_zune_fs.path.dirname",
      "extension": "@roblox/globaltype/_zune_fs.path.extension",
      "isAbsolute": "@roblox/globaltype/_zune_fs.path.isAbsolute",
      "relative": "@roblox/globaltype/_zune_fs.path.relative",
      "join": "@roblox/globaltype/_zune_fs.path.join",
      "stem": "@roblox/globaltype/_zune_fs.path.stem",
      "basename": "@roblox/globaltype/_zune_fs.path.basename",
      "globMatch": "@roblox/globaltype/_zune_fs.path.globMatch",
      "resolve": "@roblox/globaltype/_zune_fs.path.resolve"
    }
  },
  "@roblox/globaltype/_zune_fs.realPath/param/0": {
    "code_sample": "",
    "documentation": "The path to resolve."
  },
  "@roblox/globaltype/_zune_crypto.aead.aes_gcm.Aes256Gcm": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "encrypt": "@roblox/globaltype/_zune_crypto.aead.aes_gcm.Aes256Gcm.encrypt",
      "decrypt": "@roblox/globaltype/_zune_crypto.aead.aes_gcm.Aes256Gcm.decrypt"
    }
  },
  "@roblox/globaltype/SerdeGenericCompressionOptions.level": {
    "code_sample": "",
    "documentation": "The compression level"
  },
  "@roblox/globaltype/_zune_luau.load/param/0": {
    "code_sample": "",
    "documentation": "The bytecode to load."
  },
  "@roblox/globaltype/_zune_serde_json.encode/param/0": {
    "code_sample": "",
    "documentation": "The value to encode."
  },
  "@roblox/globaltype/_zune_crypto.aead.chacha_poly.XChaCha20Poly1305": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "encrypt": "@roblox/globaltype/_zune_crypto.aead.chacha_poly.XChaCha20Poly1305.encrypt",
      "decrypt": "@roblox/globaltype/_zune_crypto.aead.chacha_poly.XChaCha20Poly1305.decrypt"
    }
  },
  "@roblox/globaltype/_zune_mem.max": {
    "code_sample": "",
    "documentation": "Finds the maximum value in the buffer.\n\nExpects the buffer to be non-empty.\n\n**Parameters**\n- `src`: The source to search in.\n",
    "returns": [
      "@roblox/globaltype/_zune_mem.max/return/0"
    ],
    "params": [
      {
        "name": "src",
        "documentation": "@roblox/globaltype/_zune_mem.max/param/0"
      }
    ]
  },
  "@roblox/globaltype/IoReadable.readu8": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/IoReadable.readu8/return/0"
    ],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/IoReadable.readu8/param/0"
      }
    ]
  },
  "@roblox/globaltype/_zune_crypto.password.hash/param/1": {
    "code_sample": "",
    "documentation": "The options for the password hashing."
  },
  "@roblox/globaltype/_zune_crypto_tls.bundleFromFile/param/0": {
    "code_sample": "",
    "documentation": "The file to load the bundle from."
  },
  "@roblox/globaltype/_zune_mem.trim/param/1": {
    "code_sample": "",
    "documentation": "The values to trim from the source."
  },
  "@roblox/globaltype/Regex.match/param/1": {
    "code_sample": "",
    "documentation": "The input to match against the regex."
  },
  "@roblox/globaltype/ProcessOptions.shell": {
    "code_sample": "",
    "documentation": "The shell to use, `true` would use the common shell for your os."
  },
  "@roblox/globaltype/_zune_task.spawn/param/0": {
    "code_sample": "",
    "documentation": "The function to run immediately."
  },
  "@roblox/globaltype/_zune_crypto_random.fill/param/2": {
    "code_sample": "",
    "documentation": "The number of bytes to write."
  },
  "@roblox/globaltype/_zune_net_IPPROTO": {
    "code_sample": "",
    "documentation": "Table of IP protocols.",
    "keys": {
      "COMP": "@roblox/globaltype/_zune_net_IPPROTO.COMP",
      "ICMP": "@roblox/globaltype/_zune_net_IPPROTO.ICMP",
      "ESP": "@roblox/globaltype/_zune_net_IPPROTO.ESP",
      "MPLS": "@roblox/globaltype/_zune_net_IPPROTO.MPLS",
      "TCP": "@roblox/globaltype/_zune_net_IPPROTO.TCP",
      "ICMPV6": "@roblox/globaltype/_zune_net_IPPROTO.ICMPV6",
      "MTP": "@roblox/globaltype/_zune_net_IPPROTO.MTP",
      "GRE": "@roblox/globaltype/_zune_net_IPPROTO.GRE",
      "SCTP": "@roblox/globaltype/_zune_net_IPPROTO.SCTP",
      "MAX": "@roblox/globaltype/_zune_net_IPPROTO.MAX",
      "NONE": "@roblox/globaltype/_zune_net_IPPROTO.NONE",
      "RSVP": "@roblox/globaltype/_zune_net_IPPROTO.RSVP",
      "IDP": "@roblox/globaltype/_zune_net_IPPROTO.IDP",
      "UDPLITE": "@roblox/globaltype/_zune_net_IPPROTO.UDPLITE",
      "HOPOPTS": "@roblox/globaltype/_zune_net_IPPROTO.HOPOPTS",
      "MH": "@roblox/globaltype/_zune_net_IPPROTO.MH",
      "BEETPH": "@roblox/globaltype/_zune_net_IPPROTO.BEETPH",
      "AH": "@roblox/globaltype/_zune_net_IPPROTO.AH",
      "IPIP": "@roblox/globaltype/_zune_net_IPPROTO.IPIP",
      "IPV6": "@roblox/globaltype/_zune_net_IPPROTO.IPV6",
      "PIM": "@roblox/globaltype/_zune_net_IPPROTO.PIM",
      "DSTOPTS": "@roblox/globaltype/_zune_net_IPPROTO.DSTOPTS",
      "UDP": "@roblox/globaltype/_zune_net_IPPROTO.UDP",
      "DCCP": "@roblox/globaltype/_zune_net_IPPROTO.DCCP",
      "RAW": "@roblox/globaltype/_zune_net_IPPROTO.RAW",
      "PUP": "@roblox/globaltype/_zune_net_IPPROTO.PUP",
      "IGMP": "@roblox/globaltype/_zune_net_IPPROTO.IGMP",
      "ENCAP": "@roblox/globaltype/_zune_net_IPPROTO.ENCAP",
      "FRAGMENT": "@roblox/globaltype/_zune_net_IPPROTO.FRAGMENT",
      "ROUTING": "@roblox/globaltype/_zune_net_IPPROTO.ROUTING",
      "EGP": "@roblox/globaltype/_zune_net_IPPROTO.EGP",
      "TP": "@roblox/globaltype/_zune_net_IPPROTO.TP",
      "IP": "@roblox/globaltype/_zune_net_IPPROTO.IP"
    }
  },
  "@roblox/globaltype/_zune_mem.eqlSlice/param/1": {
    "code_sample": "",
    "documentation": "The offset to start the comparison from in the first slice."
  },
  "@roblox/globaltype/_zune_fs.removeFile/param/0": {
    "code_sample": "",
    "documentation": "The path to the file to remove."
  },
  "@roblox/globaltype/_zune_luau.compile/param/0": {
    "code_sample": "",
    "documentation": "The source code to compile."
  },
  "@roblox/globaltype/_zune_thread.fromBytecode": {
    "code_sample": "",
    "documentation": "Creates a new thread from bytecode.\n\n**Parameters**\n- `bytecode`: The bytecode to load in the new thread.\n- `opts`: The options for loading the bytecode.\n\n\n**Throws**\n- Luau Error\n- Memory Error\n",
    "returns": [
      "@roblox/globaltype/_zune_thread.fromBytecode/return/0"
    ],
    "params": [
      {
        "name": "bytecode",
        "documentation": "@roblox/globaltype/_zune_thread.fromBytecode/param/0"
      },
      {
        "name": "opts",
        "documentation": "@roblox/globaltype/_zune_thread.fromBytecode/param/1"
      }
    ]
  },
  "@roblox/globaltype/FFIPointer.retain": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/FFIPointer.retain/return/0"
    ],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/FFIPointer.retain/param/0"
      }
    ]
  },
  "@roblox/globaltype/HttpWebSocketOptions.timeout": {
    "code_sample": "",
    "documentation": "The timeout for the WebSocket connection.\n- If the timeout is negative, the WebSocket will never timeout."
  },
  "@roblox/globaltype/_zune_mem.eqlSlice/param/4": {
    "code_sample": "",
    "documentation": "The number of bytes to compare."
  },
  "@roblox/globaltype/SQLite3Statement.all": {
    "code_sample": "",
    "documentation": "\n\n**Parameters**\n- `args`: The arguments to bind to the statement.\n\n\n**Throws**\n- SQLite3 Error\n- Memory Error\n",
    "returns": [
      "@roblox/globaltype/SQLite3Statement.all/return/0"
    ],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/SQLite3Statement.all/param/0"
      },
      {
        "name": "args",
        "documentation": "@roblox/globaltype/SQLite3Statement.all/param/1"
      }
    ]
  },
  "@roblox/globaltype/NetworkSocket.bindIp/param/1": {
    "code_sample": "",
    "documentation": "The address to bind to."
  },
  "@roblox/globaltype/_zune_crypto_aead.isap.IsapA128A": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "encrypt": "@roblox/globaltype/_zune_crypto_aead.isap.IsapA128A.encrypt",
      "decrypt": "@roblox/globaltype/_zune_crypto_aead.isap.IsapA128A.decrypt"
    }
  },
  "@roblox/globaltype/FileHandle.append": {
    "code_sample": "",
    "documentation": "Append the contents to the file.\n\n**Parameters**\n- `contents`: The contents to append to the file.\n\n\n**Throws**\n- IO Error\n",
    "returns": [],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/FileHandle.append/param/0"
      },
      {
        "name": "contents",
        "documentation": "@roblox/globaltype/FileHandle.append/param/1"
      }
    ]
  },
  "@roblox/globaltype/FFIStructureType": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "offset": "@roblox/globaltype/FFIStructureType.offset",
      "new": "@roblox/globaltype/FFIStructureType.new"
    }
  },
  "@roblox/globaltype/FFIPointer.writei8": {
    "code_sample": "",
    "documentation": "",
    "returns": [],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/FFIPointer.writei8/param/0"
      },
      {
        "name": "offset",
        "documentation": "@roblox/globaltype/FFIPointer.writei8/param/1"
      },
      {
        "name": "value",
        "documentation": "@roblox/globaltype/FFIPointer.writei8/param/2"
      }
    ]
  },
  "@roblox/globaltype/_zune_mem.replaceScalar/param/1": {
    "code_sample": "",
    "documentation": "The byte to replace."
  },
  "@roblox/globaltype/TlsCertBundle": {
    "code_sample": "",
    "documentation": "",
    "keys": []
  },
  "@roblox/globaltype/_zune_fs_path.extension": {
    "code_sample": "",
    "documentation": "Returns the extension of the provided path.\n- `/lib/main.test.luau` -> `.luau`\n- `/lib/main.luau` -> `.luau`\n- `/lib/main.` -> `.`\n- `/lib/main` -> ``\n\n**Parameters**\n- `path`: The path to get the extension from.\n",
    "returns": [
      "@roblox/globaltype/_zune_fs_path.extension/return/0"
    ],
    "params": [
      {
        "name": "path",
        "documentation": "@roblox/globaltype/_zune_fs_path.extension/param/0"
      }
    ]
  },
  "@roblox/globaltype/_zune_serde_json5.decode": {
    "code_sample": "",
    "documentation": "Decodes JSON.\n\n**Parameters**\n- `json`: The JSON string to decode.\n- `config`: The configuration for the decoding.\n\n\n**Throws**\n- Memory Error\n",
    "returns": [
      "@roblox/globaltype/_zune_serde_json5.decode/return/0"
    ],
    "params": [
      {
        "name": "json",
        "documentation": "@roblox/globaltype/_zune_serde_json5.decode/param/0"
      },
      {
        "name": "config",
        "documentation": "@roblox/globaltype/_zune_serde_json5.decode/param/1"
      }
    ]
  },
  "@roblox/globaltype/_zune_fs_path.relative/param/0": {
    "code_sample": "",
    "documentation": "The path to resolve from."
  },
  "@roblox/globaltype/_zune_testing.defer": {
    "code_sample": "",
    "documentation": "Defers a function.\n\nDeferred function will be executed after a test completes.\nUseful for cleaning up resources.\n ",
    "returns": [],
    "params": [
      {
        "name": "fn",
        "documentation": "@roblox/globaltype/_zune_testing.defer/param/0"
      }
    ]
  },
  "@roblox/globaltype/_zune_crypto_aead.aes_gcm.Aes128Gcm.decrypt": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/_zune_crypto_aead.aes_gcm.Aes128Gcm.decrypt/return/0"
    ],
    "params": [
      {
        "name": "cipher",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aes_gcm.Aes128Gcm.decrypt/param/0"
      },
      {
        "name": "tag",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aes_gcm.Aes128Gcm.decrypt/param/1"
      },
      {
        "name": "key",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aes_gcm.Aes128Gcm.decrypt/param/2"
      },
      {
        "name": "nonce",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aes_gcm.Aes128Gcm.decrypt/param/3"
      },
      {
        "name": "ad",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aes_gcm.Aes128Gcm.decrypt/param/4"
      }
    ]
  },
  "@roblox/globaltype/_zune_mem.indexOfMinMax/param/0": {
    "code_sample": "",
    "documentation": "The source to search in."
  },
  "@roblox/globaltype/HttpServerRequest.headers": {
    "code_sample": "",
    "documentation": "",
    "keys": []
  },
  "@roblox/globaltype/_zune_mem.slice/param/2": {
    "code_sample": "",
    "documentation": "The number of bytes to include in the slice. If not provided,"
  },
  "@roblox/globaltype/_zune_crypto_aead.chacha_poly.ChaCha8Poly1305.decrypt": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/_zune_crypto_aead.chacha_poly.ChaCha8Poly1305.decrypt/return/0"
    ],
    "params": [
      {
        "name": "cipher",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.chacha_poly.ChaCha8Poly1305.decrypt/param/0"
      },
      {
        "name": "tag",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.chacha_poly.ChaCha8Poly1305.decrypt/param/1"
      },
      {
        "name": "key",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.chacha_poly.ChaCha8Poly1305.decrypt/param/2"
      },
      {
        "name": "nonce",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.chacha_poly.ChaCha8Poly1305.decrypt/param/3"
      },
      {
        "name": "ad",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.chacha_poly.ChaCha8Poly1305.decrypt/param/4"
      }
    ]
  },
  "@roblox/globaltype/CryptoHash.update": {
    "code_sample": "",
    "documentation": "\n\n**Parameters**\n- `value`: The value to update the hash with.\n\n\n**Throws**\n- Crypto Error\n",
    "returns": [],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/CryptoHash.update/param/0"
      },
      {
        "name": "value",
        "documentation": "@roblox/globaltype/CryptoHash.update/param/1"
      }
    ]
  },
  "@roblox/globaltype/_zune_serde_json5.values": {
    "code_sample": "",
    "documentation": "Special values for JSON.",
    "keys": {
      "null": "@roblox/globaltype/_zune_serde_json5.values.null"
    }
  },
  "@roblox/globaltype/_zune_process.loadEnv": {
    "code_sample": "",
    "documentation": "Same behavior as `process.env`, does not update `process.env`.\n\n**Throws**\n- IO Error\n- Memory Error\n",
    "returns": [
      "@roblox/globaltype/_zune_process.loadEnv/return/0"
    ],
    "params": []
  },
  "@roblox/globaltype/_zune_mem.copy": {
    "code_sample": "",
    "documentation": "Copies data from one slice to another.\nThis is similar to `buffer.copy` but this supports strings and FFI pointers as well.\n\n**Parameters**\n- `dest`: The destination to copy to.\n- `destOffset`: The offset to start copying to in the destination.\n- `src`: The source to copy from.\n- `srcOffset`: The offset to start copying from in the source.\n- `count`: The number of bytes to copy. If not provided, will copy until the end of the source.\n\n\n**Throws**\n- Memory Error\n",
    "returns": [],
    "params": [
      {
        "name": "dest",
        "documentation": "@roblox/globaltype/_zune_mem.copy/param/0"
      },
      {
        "name": "destOffset",
        "documentation": "@roblox/globaltype/_zune_mem.copy/param/1"
      },
      {
        "name": "src",
        "documentation": "@roblox/globaltype/_zune_mem.copy/param/2"
      },
      {
        "name": "srcOffset",
        "documentation": "@roblox/globaltype/_zune_mem.copy/param/3"
      },
      {
        "name": "count",
        "documentation": "@roblox/globaltype/_zune_mem.copy/param/4"
      }
    ]
  },
  "@roblox/globaltype/_zune_fs_path.resolve/param/0": {
    "code_sample": "",
    "documentation": "The paths to resolve."
  },
  "@roblox/globaltype/CryptoHash.digest": {
    "code_sample": "",
    "documentation": "Returns the finalized hash value.\n\nIf the hash object was created with a key, this would close the object."
  },
  "@roblox/globaltype/SQLite3Database.exec": {
    "code_sample": "",
    "documentation": "\n\n**Parameters**\n- `query`: The query to execute.\n- `args`: The arguments to bind to the query.\n\n\n**Throws**\n- SQLite3 Error\n- Memory Error\n",
    "returns": [
      "@roblox/globaltype/SQLite3Database.exec/return/0"
    ],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/SQLite3Database.exec/param/0"
      },
      {
        "name": "query",
        "documentation": "@roblox/globaltype/SQLite3Database.exec/param/1"
      },
      {
        "name": "args",
        "documentation": "@roblox/globaltype/SQLite3Database.exec/param/2"
      }
    ]
  },
  "@roblox/globaltype/CryptoHash": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "copy": "@roblox/globaltype/CryptoHash.copy",
      "update": "@roblox/globaltype/CryptoHash.update",
      "digest": "@roblox/globaltype/CryptoHash.digest"
    }
  },
  "@roblox/globaltype/_zune_datetime.parse/param/0": {
    "code_sample": "",
    "documentation": "The date string to parse."
  },
  "@roblox/globaltype/_zune_crypto.tls.keyPairFromFile/param/1": {
    "code_sample": "",
    "documentation": "The key file."
  },
  "@roblox/globaltype/FFICompiled.listSymbols": {
    "code_sample": "",
    "documentation": "Lists all symbols in the compiled object.\n\n**Throws**\n- FFI Error\n- Memory Error\n",
    "returns": [
      "@roblox/globaltype/FFICompiled.listSymbols/return/0"
    ],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/FFICompiled.listSymbols/param/0"
      }
    ]
  },
  "@roblox/globaltype/_zune_mem.lastIndexOfScalar/param/0": {
    "code_sample": "",
    "documentation": "The source to search in."
  },
  "@roblox/globaltype/HttpServeOptions.port": {
    "code_sample": "",
    "documentation": "The port to listen on."
  },
  "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis128X2": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "encrypt": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis128X2.encrypt",
      "decrypt": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis128X2.decrypt"
    }
  },
  "@roblox/globaltype/_zune_serde.json.values": {
    "code_sample": "",
    "documentation": "Special values for JSON.",
    "keys": {
      "null": "@roblox/globaltype/_zune_serde.json.values.null"
    }
  },
  "@roblox/globaltype/_zune_ffi.c.compile/param/1": {
    "code_sample": "",
    "documentation": "The options for the compilation."
  },
  "@roblox/globaltype/BufferSink.write/param/1": {
    "code_sample": "",
    "documentation": "The data to write to write."
  },
  "@roblox/globaltype/_zune_crypto_aead.aes_ocb.Aes128Ocb.decrypt": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/_zune_crypto_aead.aes_ocb.Aes128Ocb.decrypt/return/0"
    ],
    "params": [
      {
        "name": "cipher",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aes_ocb.Aes128Ocb.decrypt/param/0"
      },
      {
        "name": "tag",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aes_ocb.Aes128Ocb.decrypt/param/1"
      },
      {
        "name": "key",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aes_ocb.Aes128Ocb.decrypt/param/2"
      },
      {
        "name": "nonce",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aes_ocb.Aes128Ocb.decrypt/param/3"
      },
      {
        "name": "ad",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aes_ocb.Aes128Ocb.decrypt/param/4"
      }
    ]
  },
  "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis256_256": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "encrypt": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis256_256.encrypt",
      "decrypt": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis256_256.decrypt"
    }
  },
  "@roblox/globaltype/LuauCompileOptions.optimization_level": {
    "code_sample": "",
    "documentation": "The optimization level for the compilation."
  },
  "@roblox/globaltype/_zune_crypto.tls.setupClient/param/0": {
    "code_sample": "",
    "documentation": "The socket to setup the client on."
  },
  "@roblox/globaltype/_zune_fs_path.stem": {
    "code_sample": "",
    "documentation": "Returns the name of file without extension of the provided path.\n- `/lib/main.test.luau` -> `main.test`\n- `/lib/main.luau` -> `main`\n\n**Parameters**\n- `path`: The path to get the stem from.\n",
    "returns": [
      "@roblox/globaltype/_zune_fs_path.stem/return/0"
    ],
    "params": [
      {
        "name": "path",
        "documentation": "@roblox/globaltype/_zune_fs_path.stem/param/0"
      }
    ]
  },
  "@roblox/globaltype/BufferStream": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "canRead": "@roblox/globaltype/BufferStream.canRead",
      "write": "@roblox/globaltype/BufferStream.write",
      "seekTo": "@roblox/globaltype/BufferStream.seekTo",
      "seekBy": "@roblox/globaltype/BufferStream.seekBy",
      "read": "@roblox/globaltype/BufferStream.read",
      "writer": "@roblox/globaltype/BufferStream.writer",
      "reader": "@roblox/globaltype/BufferStream.reader",
      "size": "@roblox/globaltype/BufferStream.size",
      "pos": "@roblox/globaltype/BufferStream.pos"
    }
  },
  "@roblox/globaltype/_zune_fs.path.stem/param/0": {
    "code_sample": "",
    "documentation": "The path to get the stem from."
  },
  "@roblox/globaltype/_zune_ffi.ptrFromAddress/param/0": {
    "code_sample": "",
    "documentation": "The address of the pointer."
  },
  "@roblox/globaltype/_zune_random_Isaac64": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "new": "@roblox/globaltype/_zune_random_Isaac64.new"
    }
  },
  "@roblox/globaltype/_zune_fs.symlink/param/1": {
    "code_sample": "",
    "documentation": "The path to link the file or directory to."
  },
  "@roblox/globaltype/_zune_regex": {
    "code_sample": "",
    "documentation": "A library to do regular expressions in Luau.\n\nPowered by [PCRE2](https://pcre2project.github.io/pcre2/).",
    "keys": {
      "create": "@roblox/globaltype/_zune_regex.create"
    },
    "learn_more_link": "https://zune.sh/docs/v0.5.0/api/regex"
  },
  "@roblox/globaltype/_zune_mem.endsWith/param/1": {
    "code_sample": "",
    "documentation": "The needle to check for."
  },
  "@roblox/globaltype/_zune_fs.path.relative/param/1": {
    "code_sample": "",
    "documentation": "The path to resolve to."
  },
  "@roblox/globaltype/_zune_serde.yaml": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "encode": "@roblox/globaltype/_zune_serde.yaml.encode",
      "decode": "@roblox/globaltype/_zune_serde.yaml.decode"
    }
  },
  "@roblox/globaltype/_zune_luau.coverage": {
    "code_sample": "",
    "documentation": "Get coverage data from a function.\n\n**Parameters**\n- `fn`: The function to get the coverage data from.\n",
    "returns": [
      "@roblox/globaltype/_zune_luau.coverage/return/0"
    ],
    "params": [
      {
        "name": "fn",
        "documentation": "@roblox/globaltype/_zune_luau.coverage/param/0"
      }
    ]
  },
  "@roblox/globaltype/_zune_mem.trimLeft": {
    "code_sample": "",
    "documentation": "Trims the given values from the left end of the buffer.\n\n**Parameters**\n- `src`: The source to trim.\n- `values_to_strip`: The values to trim from the source.\n\n\n**Throws**\n- Memory Error\n",
    "returns": [
      "@roblox/globaltype/_zune_mem.trimLeft/return/0"
    ],
    "params": [
      {
        "name": "src",
        "documentation": "@roblox/globaltype/_zune_mem.trimLeft/param/0"
      },
      {
        "name": "values_to_strip",
        "documentation": "@roblox/globaltype/_zune_mem.trimLeft/param/1"
      }
    ]
  },
  "@roblox/globaltype/BufferSink": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "write": "@roblox/globaltype/BufferSink.write",
      "close": "@roblox/globaltype/BufferSink.close",
      "len": "@roblox/globaltype/BufferSink.len",
      "flush": "@roblox/globaltype/BufferSink.flush",
      "writer": "@roblox/globaltype/BufferSink.writer",
      "closed": "@roblox/globaltype/BufferSink.closed"
    }
  },
  "@roblox/globaltype/HttpServerResponse": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "body": "@roblox/globaltype/HttpServerResponse.body",
      "status_code": "@roblox/globaltype/HttpServerResponse.status_code",
      "headers": "@roblox/globaltype/HttpServerResponse.headers"
    }
  },
  "@roblox/globaltype/FFICompileOptions.sysincludes": {
    "code_sample": "",
    "documentation": "The system include directories to use."
  },
  "@roblox/globaltype/_zune_sqlite.open/param/0": {
    "code_sample": "",
    "documentation": "The path to the database file."
  },
  "@roblox/globaltype/_zune_crypto.password.verify": {
    "code_sample": "",
    "documentation": "\n\n**Parameters**\n- `password`: The password to verify.\n- `hash`: The hash to verify against.\n\n\n**Throws**\n- Crypto Error\n",
    "returns": [
      "@roblox/globaltype/_zune_crypto.password.verify/return/0"
    ],
    "params": [
      {
        "name": "password",
        "documentation": "@roblox/globaltype/_zune_crypto.password.verify/param/0"
      },
      {
        "name": "hash",
        "documentation": "@roblox/globaltype/_zune_crypto.password.verify/param/1"
      }
    ]
  },
  "@roblox/globaltype/FFICompileOptions.library_paths": {
    "code_sample": "",
    "documentation": "The library paths to use."
  },
  "@roblox/globaltype/FFIDataType.alignment": {
    "code_sample": "",
    "documentation": "Get the alignment of the data type.",
    "returns": [
      "@roblox/globaltype/FFIDataType.alignment/return/0"
    ],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/FFIDataType.alignment/param/0"
      }
    ]
  },
  "@roblox/globaltype/LuauCompileOptions.coverage_level": {
    "code_sample": "",
    "documentation": "The coverage level for the compilation."
  },
  "@roblox/globaltype/_zune_crypto.tls": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "bundleFromSystem": "@roblox/globaltype/_zune_crypto.tls.bundleFromSystem",
      "setupServer": "@roblox/globaltype/_zune_crypto.tls.setupServer",
      "setupClient": "@roblox/globaltype/_zune_crypto.tls.setupClient",
      "keyPairFromFile": "@roblox/globaltype/_zune_crypto.tls.keyPairFromFile",
      "bundleFromFile": "@roblox/globaltype/_zune_crypto.tls.bundleFromFile"
    }
  },
  "@roblox/globaltype/HttpServeOptions": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "max_connections": "@roblox/globaltype/HttpServeOptions.max_connections",
      "reuse_address": "@roblox/globaltype/HttpServeOptions.reuse_address",
      "backlog": "@roblox/globaltype/HttpServeOptions.backlog",
      "client_timeout": "@roblox/globaltype/HttpServeOptions.client_timeout",
      "port": "@roblox/globaltype/HttpServeOptions.port",
      "address": "@roblox/globaltype/HttpServeOptions.address",
      "request": "@roblox/globaltype/HttpServeOptions.request",
      "max_body_size": "@roblox/globaltype/HttpServeOptions.max_body_size",
      "websocket": "@roblox/globaltype/HttpServeOptions.websocket"
    }
  },
  "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis128L.encrypt": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis128L.encrypt/return/0"
    ],
    "params": [
      {
        "name": "data",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis128L.encrypt/param/0"
      },
      {
        "name": "key",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis128L.encrypt/param/1"
      },
      {
        "name": "nonce",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis128L.encrypt/param/2"
      },
      {
        "name": "ad",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis128L.encrypt/param/3"
      }
    ]
  },
  "@roblox/globaltype/_zune_mem.lastIndexOfScalar/param/1": {
    "code_sample": "",
    "documentation": "The byte to search for."
  },
  "@roblox/globaltype/_zune_crypto.tls.setupClient/param/1": {
    "code_sample": "",
    "documentation": "The configuration for the client."
  },
  "@roblox/globaltype/_zune_net.http.websocket/param/0": {
    "code_sample": "",
    "documentation": "The host to connect to."
  },
  "@roblox/globaltype/_zune_serde_json5.encode/param/0": {
    "code_sample": "",
    "documentation": "The value to encode."
  },
  "@roblox/globaltype/FFIPointer.readu16": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/FFIPointer.readu16/return/0"
    ],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/FFIPointer.readu16/param/0"
      },
      {
        "name": "offset",
        "documentation": "@roblox/globaltype/FFIPointer.readu16/param/1"
      }
    ]
  },
  "@roblox/globaltype/_zune_ffi_types": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "i16": "@roblox/globaltype/_zune_ffi_types.i16",
      "i32": "@roblox/globaltype/_zune_ffi_types.i32",
      "pointer": "@roblox/globaltype/_zune_ffi_types.pointer",
      "double": "@roblox/globaltype/_zune_ffi_types.double",
      "i64": "@roblox/globaltype/_zune_ffi_types.i64",
      "u8": "@roblox/globaltype/_zune_ffi_types.u8",
      "float": "@roblox/globaltype/_zune_ffi_types.float",
      "u64": "@roblox/globaltype/_zune_ffi_types.u64",
      "void": "@roblox/globaltype/_zune_ffi_types.void",
      "i8": "@roblox/globaltype/_zune_ffi_types.i8",
      "u16": "@roblox/globaltype/_zune_ffi_types.u16",
      "u32": "@roblox/globaltype/_zune_ffi_types.u32"
    }
  },
  "@roblox/globaltype/_zune_random_LuauPcg32.new": {
    "code_sample": "",
    "documentation": "\n\n**Throws**\n- Memory Error\n",
    "returns": [
      "@roblox/globaltype/_zune_random_LuauPcg32.new/return/0"
    ],
    "params": [
      {
        "name": "seed",
        "documentation": "@roblox/globaltype/_zune_random_LuauPcg32.new/param/0"
      }
    ]
  },
  "@roblox/globaltype/_zune_task.delay/param/2": {
    "code_sample": "",
    "documentation": "The arguments to pass to the function."
  },
  "@roblox/globaltype/_zune_crypto.aead.isap.IsapA128A.decrypt": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/_zune_crypto.aead.isap.IsapA128A.decrypt/return/0"
    ],
    "params": [
      {
        "name": "cipher",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.isap.IsapA128A.decrypt/param/0"
      },
      {
        "name": "tag",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.isap.IsapA128A.decrypt/param/1"
      },
      {
        "name": "key",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.isap.IsapA128A.decrypt/param/2"
      },
      {
        "name": "nonce",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.isap.IsapA128A.decrypt/param/3"
      },
      {
        "name": "ad",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.isap.IsapA128A.decrypt/param/4"
      }
    ]
  },
  "@roblox/globaltype/_zune_crypto.aead.chacha_poly.XChaCha12Poly1305.encrypt": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/_zune_crypto.aead.chacha_poly.XChaCha12Poly1305.encrypt/return/0"
    ],
    "params": [
      {
        "name": "data",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.chacha_poly.XChaCha12Poly1305.encrypt/param/0"
      },
      {
        "name": "key",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.chacha_poly.XChaCha12Poly1305.encrypt/param/1"
      },
      {
        "name": "nonce",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.chacha_poly.XChaCha12Poly1305.encrypt/param/2"
      },
      {
        "name": "ad",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.chacha_poly.XChaCha12Poly1305.encrypt/param/3"
      }
    ]
  },
  "@roblox/globaltype/_zune_net.ADDRF": {
    "code_sample": "",
    "documentation": "The table of address families.",
    "keys": {
      "RDS": "@roblox/globaltype/_zune_net.ADDRF.RDS",
      "ROSE": "@roblox/globaltype/_zune_net.ADDRF.ROSE",
      "BRIDGE": "@roblox/globaltype/_zune_net.ADDRF.BRIDGE",
      "PHONET": "@roblox/globaltype/_zune_net.ADDRF.PHONET",
      "SNA": "@roblox/globaltype/_zune_net.ADDRF.SNA",
      "FILE": "@roblox/globaltype/_zune_net.ADDRF.FILE",
      "MPLS": "@roblox/globaltype/_zune_net.ADDRF.MPLS",
      "IUCV": "@roblox/globaltype/_zune_net.ADDRF.IUCV",
      "WANPIPE": "@roblox/globaltype/_zune_net.ADDRF.WANPIPE",
      "UNSPEC": "@roblox/globaltype/_zune_net.ADDRF.UNSPEC",
      "CAIF": "@roblox/globaltype/_zune_net.ADDRF.CAIF",
      "NETROM": "@roblox/globaltype/_zune_net.ADDRF.NETROM",
      "UNIX": "@roblox/globaltype/_zune_net.ADDRF.UNIX",
      "INET": "@roblox/globaltype/_zune_net.ADDRF.INET",
      "ATMSVC": "@roblox/globaltype/_zune_net.ADDRF.ATMSVC",
      "MAX": "@roblox/globaltype/_zune_net.ADDRF.MAX",
      "NETLINK": "@roblox/globaltype/_zune_net.ADDRF.NETLINK",
      "X25": "@roblox/globaltype/_zune_net.ADDRF.X25",
      "SECURITY": "@roblox/globaltype/_zune_net.ADDRF.SECURITY",
      "INET6": "@roblox/globaltype/_zune_net.ADDRF.INET6",
      "TIPC": "@roblox/globaltype/_zune_net.ADDRF.TIPC",
      "KEY": "@roblox/globaltype/_zune_net.ADDRF.KEY",
      "IRDA": "@roblox/globaltype/_zune_net.ADDRF.IRDA",
      "ECONET": "@roblox/globaltype/_zune_net.ADDRF.ECONET",
      "IPX": "@roblox/globaltype/_zune_net.ADDRF.IPX",
      "ASH": "@roblox/globaltype/_zune_net.ADDRF.ASH",
      "IB": "@roblox/globaltype/_zune_net.ADDRF.IB",
      "PACKET": "@roblox/globaltype/_zune_net.ADDRF.PACKET",
      "KCM": "@roblox/globaltype/_zune_net.ADDRF.KCM",
      "DECnet": "@roblox/globaltype/_zune_net.ADDRF.DECnet",
      "RXRPC": "@roblox/globaltype/_zune_net.ADDRF.RXRPC",
      "NETBEUI": "@roblox/globaltype/_zune_net.ADDRF.NETBEUI",
      "ALG": "@roblox/globaltype/_zune_net.ADDRF.ALG",
      "IEEE802154": "@roblox/globaltype/_zune_net.ADDRF.IEEE802154",
      "ISDN": "@roblox/globaltype/_zune_net.ADDRF.ISDN",
      "APPLETALK": "@roblox/globaltype/_zune_net.ADDRF.APPLETALK",
      "XDP": "@roblox/globaltype/_zune_net.ADDRF.XDP",
      "LOCAL": "@roblox/globaltype/_zune_net.ADDRF.LOCAL",
      "LLC": "@roblox/globaltype/_zune_net.ADDRF.LLC",
      "CAN": "@roblox/globaltype/_zune_net.ADDRF.CAN",
      "BLUETOOTH": "@roblox/globaltype/_zune_net.ADDRF.BLUETOOTH",
      "QIPCRTR": "@roblox/globaltype/_zune_net.ADDRF.QIPCRTR",
      "PPPOX": "@roblox/globaltype/_zune_net.ADDRF.PPPOX",
      "ATMPVC": "@roblox/globaltype/_zune_net.ADDRF.ATMPVC",
      "AX25": "@roblox/globaltype/_zune_net.ADDRF.AX25",
      "NFC": "@roblox/globaltype/_zune_net.ADDRF.NFC",
      "SMC": "@roblox/globaltype/_zune_net.ADDRF.SMC",
      "ROUTE": "@roblox/globaltype/_zune_net.ADDRF.ROUTE",
      "VSOCK": "@roblox/globaltype/_zune_net.ADDRF.VSOCK"
    }
  },
  "@roblox/globaltype/SQLite3Statement.run/param/1": {
    "code_sample": "",
    "documentation": "The arguments to bind to the statement."
  },
  "@roblox/globaltype/_zune_random.Isaac64": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "new": "@roblox/globaltype/_zune_random.Isaac64.new"
    }
  },
  "@roblox/globaltype/_zune_serde.json": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "encode": "@roblox/globaltype/_zune_serde.json.encode",
      "values": "@roblox/globaltype/_zune_serde.json.values",
      "decode": "@roblox/globaltype/_zune_serde.json.decode",
      "indents": "@roblox/globaltype/_zune_serde.json.indents"
    }
  },
  "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis128L": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "encrypt": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis128L.encrypt",
      "decrypt": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis128L.decrypt"
    }
  },
  "@roblox/globaltype/_zune_crypto_password.hash": {
    "code_sample": "",
    "documentation": "\n\n**Parameters**\n- `password`: The password to hash.\n- `opts`: The options for the password hashing.\n\n\n**Throws**\n- Crypto Error\n- Memory Error\n",
    "returns": [
      "@roblox/globaltype/_zune_crypto_password.hash/return/0"
    ],
    "params": [
      {
        "name": "password",
        "documentation": "@roblox/globaltype/_zune_crypto_password.hash/param/0"
      },
      {
        "name": "opts",
        "documentation": "@roblox/globaltype/_zune_crypto_password.hash/param/1"
      }
    ]
  },
  "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis256": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "encrypt": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis256.encrypt",
      "decrypt": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis256.decrypt"
    }
  },
  "@roblox/globaltype/_zune_ffi.ptr/param/0": {
    "code_sample": "",
    "documentation": "The pointer to reference."
  },
  "@roblox/globaltype/_zune_process.create/param/2": {
    "code_sample": "",
    "documentation": "The options for the process."
  },
  "@roblox/globaltype/_zune_io.format/param/0": {
    "code_sample": "",
    "documentation": "The values to format."
  },
  "@roblox/globaltype/HttpWebSocket.send/param/1": {
    "code_sample": "",
    "documentation": "The message to send."
  },
  "@roblox/globaltype/_zune_io_terminal.getCurrentMode": {
    "code_sample": "",
    "documentation": "Get current saved mode.",
    "returns": [
      "@roblox/globaltype/_zune_io_terminal.getCurrentMode/return/0"
    ],
    "params": []
  },
  "@roblox/globaltype/NetworkSocket.recvMsg": {
    "code_sample": "",
    "documentation": "\n\n**Parameters**\n- `max_size`: The maximum size of the message to receive.\n  - default: `8192`\n\n\n**Throws**\n- Network Error\n- Memory Error\n",
    "returns": [
      "@roblox/globaltype/NetworkSocket.recvMsg/return/0",
      "@roblox/globaltype/NetworkSocket.recvMsg/return/1"
    ],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/NetworkSocket.recvMsg/param/0"
      },
      {
        "name": "max_size",
        "documentation": "@roblox/globaltype/NetworkSocket.recvMsg/param/1"
      }
    ]
  },
  "@roblox/globaltype/SQLite3Database.transaction/param/1": {
    "code_sample": "",
    "documentation": "The callback to run inside the transaction."
  },
  "@roblox/globaltype/_zune_fs.move/param/1": {
    "code_sample": "",
    "documentation": "The path to move the file or directory to."
  },
  "@roblox/globaltype/Thread.send": {
    "code_sample": "",
    "documentation": "Sends a value to the thread.\n\n**Throws**\n- Thread Error\n- Memory Error\n",
    "returns": [],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/Thread.send/param/0"
      },
      {
        "name": "...",
        "documentation": "@roblox/globaltype/Thread.send/param/1"
      }
    ]
  },
  "@roblox/globaltype/_zune_mem.lastIndexOf/param/0": {
    "code_sample": "",
    "documentation": "The source to search in."
  },
  "@roblox/globaltype/SQLite3Statement.finalize": {
    "code_sample": "",
    "documentation": "Closes the statement and frees resources.",
    "returns": [],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/SQLite3Statement.finalize/param/0"
      }
    ]
  },
  "@roblox/globaltype/_zune_serde_json.decode/param/1": {
    "code_sample": "",
    "documentation": "The configuration for the decoding."
  },
  "@roblox/globaltype/_zune_mem.indexOfNonePos/param/1": {
    "code_sample": "",
    "documentation": "The offset to start searching from."
  },
  "@roblox/globaltype/_zune_crypto.aead.isap": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "IsapA128A": "@roblox/globaltype/_zune_crypto.aead.isap.IsapA128A"
    }
  },
  "@roblox/globaltype/_zune_fs.path.isAbsolute": {
    "code_sample": "",
    "documentation": "Checks if the provided path is an absolute path based on OS.\n\n**Parameters**\n- `path`: The path to check if it is absolute.\n",
    "returns": [
      "@roblox/globaltype/_zune_fs.path.isAbsolute/return/0"
    ],
    "params": [
      {
        "name": "path",
        "documentation": "@roblox/globaltype/_zune_fs.path.isAbsolute/param/0"
      }
    ]
  },
  "@roblox/globaltype/_zune_fs_path.basename": {
    "code_sample": "",
    "documentation": "Returns the base name of the provided path.\n- `/lib/main.test.luau` -> `main.test.luau`\n- `/lib/main.luau` -> `main.luau`\n\n**Parameters**\n- `path`: The path to get the base name from.\n",
    "returns": [
      "@roblox/globaltype/_zune_fs_path.basename/return/0"
    ],
    "params": [
      {
        "name": "path",
        "documentation": "@roblox/globaltype/_zune_fs_path.basename/param/0"
      }
    ]
  },
  "@roblox/globaltype/LuauLoadOptions": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "env": "@roblox/globaltype/LuauLoadOptions.env",
      "native_code_gen": "@roblox/globaltype/LuauLoadOptions.native_code_gen",
      "chunk_name": "@roblox/globaltype/LuauLoadOptions.chunk_name"
    }
  },
  "@roblox/globaltype/Thread.receive": {
    "code_sample": "",
    "documentation": "Immediately receive or yields until a value is sent from the thread.\n\n**Throws**\n- Thread Error\n- Memory Error\n",
    "returns": [],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/Thread.receive/param/0"
      }
    ]
  },
  "@roblox/globaltype/_zune_serde.json.encode/param/0": {
    "code_sample": "",
    "documentation": "The value to encode."
  },
  "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis128X4.decrypt": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis128X4.decrypt/return/0"
    ],
    "params": [
      {
        "name": "cipher",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis128X4.decrypt/param/0"
      },
      {
        "name": "tag",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis128X4.decrypt/param/1"
      },
      {
        "name": "key",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis128X4.decrypt/param/2"
      },
      {
        "name": "nonce",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis128X4.decrypt/param/3"
      },
      {
        "name": "ad",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis128X4.decrypt/param/4"
      }
    ]
  },
  "@roblox/globaltype/_zune_process.create": {
    "code_sample": "",
    "documentation": "Creates a new process.\n\n**Parameters**\n- `exec`: The executable to run.\n- `args`: The arguments to pass to the executable.\n- `opts`: The options for the process.\n\n\n**Throws**\n- Process Error\n",
    "returns": [
      "@roblox/globaltype/_zune_process.create/return/0"
    ],
    "params": [
      {
        "name": "exec",
        "documentation": "@roblox/globaltype/_zune_process.create/param/0"
      },
      {
        "name": "args",
        "documentation": "@roblox/globaltype/_zune_process.create/param/1"
      },
      {
        "name": "opts",
        "documentation": "@roblox/globaltype/_zune_process.create/param/2"
      }
    ]
  },
  "@roblox/globaltype/IoReadable.readi16": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/IoReadable.readi16/return/0"
    ],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/IoReadable.readi16/param/0"
      }
    ]
  },
  "@roblox/globaltype/FFICompileOptions.includes": {
    "code_sample": "",
    "documentation": "The include directories to use."
  },
  "@roblox/globaltype/SQLite3Statement.all/param/1": {
    "code_sample": "",
    "documentation": "The arguments to bind to the statement."
  },
  "@roblox/globaltype/HttpServeOptions.reuse_address": {
    "code_sample": "",
    "documentation": "Whether to reuse the address."
  },
  "@roblox/globaltype/_zune_ffi.closure": {
    "code_sample": "",
    "documentation": "\n\n**Parameters**\n- `definition`: The function definition.\n- `handler`: The lua function to call.\n\n\n**Throws**\n- FFI Error\n- Memory Error\n",
    "returns": [
      "@roblox/globaltype/_zune_ffi.closure/return/0"
    ],
    "params": [
      {
        "name": "definition",
        "documentation": "@roblox/globaltype/_zune_ffi.closure/param/0"
      },
      {
        "name": "handler",
        "documentation": "@roblox/globaltype/_zune_ffi.closure/param/1"
      }
    ]
  },
  "@roblox/globaltype/_zune_random.Xoroshiro128": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "new": "@roblox/globaltype/_zune_random.Xoroshiro128.new"
    }
  },
  "@roblox/globaltype/IoWritable": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "writei8": "@roblox/globaltype/IoWritable.writei8",
      "writeu8": "@roblox/globaltype/IoWritable.writeu8",
      "writef32": "@roblox/globaltype/IoWritable.writef32",
      "writei32": "@roblox/globaltype/IoWritable.writei32",
      "writef64": "@roblox/globaltype/IoWritable.writef64",
      "write": "@roblox/globaltype/IoWritable.write",
      "writeu32": "@roblox/globaltype/IoWritable.writeu32",
      "writei16": "@roblox/globaltype/IoWritable.writei16",
      "writeu16": "@roblox/globaltype/IoWritable.writeu16"
    }
  },
  "@roblox/globaltype/DateTime.toIsoDate": {
    "code_sample": "",
    "documentation": "Return the date in ISO8601 format, `YYYY-MM-DDTHH:MM:SSZ`\n\n**Throws**\n- DateTime Error\n",
    "returns": [
      "@roblox/globaltype/DateTime.toIsoDate/return/0"
    ],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/DateTime.toIsoDate/param/0"
      }
    ]
  },
  "@roblox/globaltype/_zune_mem.indexOfMinMax": {
    "code_sample": "",
    "documentation": "Find both the index of the minimum and maximum values in the buffer.\n\nExpects the buffer to be non-empty.\n\n**Parameters**\n- `src`: The source to search in.\n",
    "returns": [
      "@roblox/globaltype/_zune_mem.indexOfMinMax/return/0",
      "@roblox/globaltype/_zune_mem.indexOfMinMax/return/1"
    ],
    "params": [
      {
        "name": "src",
        "documentation": "@roblox/globaltype/_zune_mem.indexOfMinMax/param/0"
      }
    ]
  },
  "@roblox/globaltype/ProcessOptions.env": {
    "code_sample": "",
    "documentation": "The environment variables to set for the process."
  },
  "@roblox/globaltype/_zune_serde_toml.decode/param/0": {
    "code_sample": "",
    "documentation": "The TOML string to decode."
  },
  "@roblox/globaltype/IoReadable.readu32": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/IoReadable.readu32/return/0"
    ],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/IoReadable.readu32/param/0"
      }
    ]
  },
  "@roblox/globaltype/_zune_crypto_tls.keyPairFromFile/param/1": {
    "code_sample": "",
    "documentation": "The key file."
  },
  "@roblox/globaltype/FFIPointer.readi32": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/FFIPointer.readi32/return/0"
    ],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/FFIPointer.readi32/param/0"
      },
      {
        "name": "offset",
        "documentation": "@roblox/globaltype/FFIPointer.readi32/param/1"
      }
    ]
  },
  "@roblox/globaltype/_zune_process.exit/param/0": {
    "code_sample": "",
    "documentation": "The exit code."
  },
  "@roblox/globaltype/NetworkSocket.recv/param/1": {
    "code_sample": "",
    "documentation": "The maximum size of the data to receive."
  },
  "@roblox/globaltype/_zune_fs_path.extension/param/0": {
    "code_sample": "",
    "documentation": "The path to get the extension from."
  },
  "@roblox/globaltype/_zune_fs_path.globMatch": {
    "code_sample": "",
    "documentation": "Checks if the provided path matches the glob pattern.\n\n**Parameters**\n- `path`: The path to check.\n- `pattern`: The glob pattern to match against.\n",
    "returns": [
      "@roblox/globaltype/_zune_fs_path.globMatch/return/0"
    ],
    "params": [
      {
        "name": "path",
        "documentation": "@roblox/globaltype/_zune_fs_path.globMatch/param/0"
      },
      {
        "name": "pattern",
        "documentation": "@roblox/globaltype/_zune_fs_path.globMatch/param/1"
      }
    ]
  },
  "@roblox/globaltype/_zune_fs.path.stem": {
    "code_sample": "",
    "documentation": "Returns the name of file without extension of the provided path.\n- `/lib/main.test.luau` -> `main.test`\n- `/lib/main.luau` -> `main`\n\n**Parameters**\n- `path`: The path to get the stem from.\n",
    "returns": [
      "@roblox/globaltype/_zune_fs.path.stem/return/0"
    ],
    "params": [
      {
        "name": "path",
        "documentation": "@roblox/globaltype/_zune_fs.path.stem/param/0"
      }
    ]
  },
  "@roblox/globaltype/IoReadable": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "readf64": "@roblox/globaltype/IoReadable.readf64",
      "readi32": "@roblox/globaltype/IoReadable.readi32",
      "readi8": "@roblox/globaltype/IoReadable.readi8",
      "readu16": "@roblox/globaltype/IoReadable.readu16",
      "read": "@roblox/globaltype/IoReadable.read",
      "readu8": "@roblox/globaltype/IoReadable.readu8",
      "readu32": "@roblox/globaltype/IoReadable.readu32",
      "readf32": "@roblox/globaltype/IoReadable.readf32",
      "readi16": "@roblox/globaltype/IoReadable.readi16"
    }
  },
  "@roblox/globaltype/FFIPointer.readu64": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/FFIPointer.readu64/return/0"
    ],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/FFIPointer.readu64/param/0"
      },
      {
        "name": "offset",
        "documentation": "@roblox/globaltype/FFIPointer.readu64/param/1"
      }
    ]
  },
  "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis256.encrypt": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis256.encrypt/return/0"
    ],
    "params": [
      {
        "name": "data",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis256.encrypt/param/0"
      },
      {
        "name": "key",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis256.encrypt/param/1"
      },
      {
        "name": "nonce",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis256.encrypt/param/2"
      },
      {
        "name": "ad",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis256.encrypt/param/3"
      }
    ]
  },
  "@roblox/globaltype/FileHandle.getSeekPosition": {
    "code_sample": "",
    "documentation": "Returns the current seek position of the file.\n\n**Throws**\n- IO Error\n",
    "returns": [
      "@roblox/globaltype/FileHandle.getSeekPosition/return/0"
    ],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/FileHandle.getSeekPosition/param/0"
      }
    ]
  },
  "@roblox/globaltype/_zune_ffi.closure/param/1": {
    "code_sample": "",
    "documentation": "The lua function to call.",
    "returns": [
      "@roblox/globaltype/_zune_ffi.closure/param/1/return/0"
    ],
    "params": [
      {
        "name": "...",
        "documentation": "@roblox/globaltype/_zune_ffi.closure/param/1/param/0"
      }
    ]
  },
  "@roblox/globaltype/FFIPointer.writeu32": {
    "code_sample": "",
    "documentation": "",
    "returns": [],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/FFIPointer.writeu32/param/0"
      },
      {
        "name": "offset",
        "documentation": "@roblox/globaltype/FFIPointer.writeu32/param/1"
      },
      {
        "name": "value",
        "documentation": "@roblox/globaltype/FFIPointer.writeu32/param/2"
      }
    ]
  },
  "@roblox/globaltype/Regex.format/param/1": {
    "code_sample": "",
    "documentation": "The string to replace."
  },
  "@roblox/globaltype/_zune_random_Xoroshiro128": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "new": "@roblox/globaltype/_zune_random_Xoroshiro128.new"
    }
  },
  "@roblox/globaltype/_zune_net.createSocket": {
    "code_sample": "",
    "documentation": "Creates a new socket from OS.\n\n**Parameters**\n- `address_family`: The address family to use.\n- `flags`: The socket type to use.\n- `protocol`: The protocol to use.\n\n\n**Throws**\n- IO Error\n- Network Error\n",
    "returns": [
      "@roblox/globaltype/_zune_net.createSocket/return/0"
    ],
    "params": [
      {
        "name": "address_family",
        "documentation": "@roblox/globaltype/_zune_net.createSocket/param/0"
      },
      {
        "name": "flags",
        "documentation": "@roblox/globaltype/_zune_net.createSocket/param/1"
      },
      {
        "name": "protocol",
        "documentation": "@roblox/globaltype/_zune_net.createSocket/param/2"
      }
    ]
  },
  "@roblox/globaltype/_zune_crypto_random.fill/param/1": {
    "code_sample": "",
    "documentation": "The offset to start writing at."
  },
  "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis128X4_256.decrypt": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis128X4_256.decrypt/return/0"
    ],
    "params": [
      {
        "name": "cipher",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis128X4_256.decrypt/param/0"
      },
      {
        "name": "tag",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis128X4_256.decrypt/param/1"
      },
      {
        "name": "key",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis128X4_256.decrypt/param/2"
      },
      {
        "name": "nonce",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis128X4_256.decrypt/param/3"
      },
      {
        "name": "ad",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis128X4_256.decrypt/param/4"
      }
    ]
  },
  "@roblox/globaltype/_zune_mem.lastIndexOfAny": {
    "code_sample": "",
    "documentation": "Find the last index of a byte that is in the given `needle`.\n\n**Parameters**\n- `src`: The source to search in.\n- `needle`: The bytes to search for.\n",
    "returns": [
      "@roblox/globaltype/_zune_mem.lastIndexOfAny/return/0"
    ],
    "params": [
      {
        "name": "src",
        "documentation": "@roblox/globaltype/_zune_mem.lastIndexOfAny/param/0"
      },
      {
        "name": "needle",
        "documentation": "@roblox/globaltype/_zune_mem.lastIndexOfAny/param/1"
      }
    ]
  },
  "@roblox/globaltype/_zune_process.cwd": {
    "code_sample": "",
    "documentation": "Get the current working directory (absolute path).\n\n**Throws**\n- IO Error\n- Memory Error\n",
    "returns": [
      "@roblox/globaltype/_zune_process.cwd/return/0"
    ],
    "params": []
  },
  "@roblox/globaltype/SQLite3Database.close": {
    "code_sample": "",
    "documentation": "",
    "returns": [],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/SQLite3Database.close/param/0"
      }
    ]
  },
  "@roblox/globaltype/SQLite3Database.exec/param/2": {
    "code_sample": "",
    "documentation": "The arguments to bind to the query."
  },
  "@roblox/globaltype/_zune_net.SOCKF": {
    "code_sample": "",
    "documentation": "Table of socket flags.",
    "keys": {
      "DCCP": "@roblox/globaltype/_zune_net.SOCKF.DCCP",
      "RAW": "@roblox/globaltype/_zune_net.SOCKF.RAW",
      "RDM": "@roblox/globaltype/_zune_net.SOCKF.RDM",
      "DGRAM": "@roblox/globaltype/_zune_net.SOCKF.DGRAM",
      "PACKET": "@roblox/globaltype/_zune_net.SOCKF.PACKET",
      "STREAM": "@roblox/globaltype/_zune_net.SOCKF.STREAM",
      "SEQPACKET": "@roblox/globaltype/_zune_net.SOCKF.SEQPACKET",
      "CLOEXEC": "@roblox/globaltype/_zune_net.SOCKF.CLOEXEC",
      "NONBLOCK": "@roblox/globaltype/_zune_net.SOCKF.NONBLOCK"
    }
  },
  "@roblox/globaltype/_zune_fs.createFile": {
    "code_sample": "",
    "documentation": "Creates a file. If the file already exists, the function will throw an error only when `exclusive` is `true`.\n\n**Parameters**\n- `path`: The path to the file to open/create.\n- `opts`: The create options.\n\n\n**Throws**\n- IO Error\n",
    "returns": [
      "@roblox/globaltype/_zune_fs.createFile/return/0"
    ],
    "params": [
      {
        "name": "path",
        "documentation": "@roblox/globaltype/_zune_fs.createFile/param/0"
      },
      {
        "name": "opts",
        "documentation": "@roblox/globaltype/_zune_fs.createFile/param/1"
      }
    ]
  },
  "@roblox/globaltype/_zune_crypto.tls.keyPairFromFile": {
    "code_sample": "",
    "documentation": "\n\n**Parameters**\n- `certFile`: The certificate file.\n- `keyFile`: The key file.\n\n\n**Throws**\n- IO Error\n- Tls Error\n",
    "returns": [
      "@roblox/globaltype/_zune_crypto.tls.keyPairFromFile/return/0"
    ],
    "params": [
      {
        "name": "certFile",
        "documentation": "@roblox/globaltype/_zune_crypto.tls.keyPairFromFile/param/0"
      },
      {
        "name": "keyFile",
        "documentation": "@roblox/globaltype/_zune_crypto.tls.keyPairFromFile/param/1"
      }
    ]
  },
  "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis128L.decrypt": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis128L.decrypt/return/0"
    ],
    "params": [
      {
        "name": "cipher",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis128L.decrypt/param/0"
      },
      {
        "name": "tag",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis128L.decrypt/param/1"
      },
      {
        "name": "key",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis128L.decrypt/param/2"
      },
      {
        "name": "nonce",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis128L.decrypt/param/3"
      },
      {
        "name": "ad",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis128L.decrypt/param/4"
      }
    ]
  },
  "@roblox/globaltype/_zune_datetime": {
    "code_sample": "",
    "documentation": "A library to interact with date and time.",
    "keys": {
      "fromUnixTimestamp": "@roblox/globaltype/_zune_datetime.fromUnixTimestamp",
      "now": "@roblox/globaltype/_zune_datetime.now",
      "parse": "@roblox/globaltype/_zune_datetime.parse",
      "fromUniversalTime": "@roblox/globaltype/_zune_datetime.fromUniversalTime",
      "fromUnixTimestampMillis": "@roblox/globaltype/_zune_datetime.fromUnixTimestampMillis",
      "fromLocalTime": "@roblox/globaltype/_zune_datetime.fromLocalTime",
      "fromIsoDate": "@roblox/globaltype/_zune_datetime.fromIsoDate"
    },
    "learn_more_link": "https://zune.sh/docs/v0.5.0/api/datetime"
  },
  "@roblox/globaltype/_zune_mem.indexOfMax/param/0": {
    "code_sample": "",
    "documentation": "The source to search in."
  },
  "@roblox/globaltype/NetworkSocket.connect/param/1": {
    "code_sample": "",
    "documentation": "The address to connect to."
  },
  "@roblox/globaltype/Metadata.permissions": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "read_only": "@roblox/globaltype/Metadata.permissions.read_only"
    }
  },
  "@roblox/globaltype/_zune_crypto_aead.chacha_poly.ChaCha8Poly1305.encrypt": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/_zune_crypto_aead.chacha_poly.ChaCha8Poly1305.encrypt/return/0"
    ],
    "params": [
      {
        "name": "data",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.chacha_poly.ChaCha8Poly1305.encrypt/param/0"
      },
      {
        "name": "key",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.chacha_poly.ChaCha8Poly1305.encrypt/param/1"
      },
      {
        "name": "nonce",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.chacha_poly.ChaCha8Poly1305.encrypt/param/2"
      },
      {
        "name": "ad",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.chacha_poly.ChaCha8Poly1305.encrypt/param/3"
      }
    ]
  },
  "@roblox/globaltype/_zune_crypto.aead.aes_ocb": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "Aes256Ocb": "@roblox/globaltype/_zune_crypto.aead.aes_ocb.Aes256Ocb",
      "Aes128Ocb": "@roblox/globaltype/_zune_crypto.aead.aes_ocb.Aes128Ocb"
    }
  },
  "@roblox/globaltype/DateTime.toLocalTime": {
    "code_sample": "",
    "documentation": "\n\n**Throws**\n- DateTime Error\n",
    "returns": [
      "@roblox/globaltype/DateTime.toLocalTime/return/0"
    ],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/DateTime.toLocalTime/param/0"
      }
    ]
  },
  "@roblox/globaltype/_zune_mem.lastIndexOfAny/param/1": {
    "code_sample": "",
    "documentation": "The bytes to search for."
  },
  "@roblox/globaltype/SQLite3Database.query/param/1": {
    "code_sample": "",
    "documentation": "The query to prepare."
  },
  "@roblox/globaltype/SQLite3Database.query": {
    "code_sample": "",
    "documentation": "\n\n**Parameters**\n- `query`: The query to prepare.\n\n\n**Throws**\n- SQLite3 Error\n- Memory Error\n",
    "returns": [
      "@roblox/globaltype/SQLite3Database.query/return/0"
    ],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/SQLite3Database.query/param/0"
      },
      {
        "name": "query",
        "documentation": "@roblox/globaltype/SQLite3Database.query/param/1"
      }
    ]
  },
  "@roblox/globaltype/FFIPointer.offset": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/FFIPointer.offset/return/0"
    ],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/FFIPointer.offset/param/0"
      },
      {
        "name": "offset",
        "documentation": "@roblox/globaltype/FFIPointer.offset/param/1"
      }
    ]
  },
  "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis256X2.encrypt": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis256X2.encrypt/return/0"
    ],
    "params": [
      {
        "name": "data",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis256X2.encrypt/param/0"
      },
      {
        "name": "key",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis256X2.encrypt/param/1"
      },
      {
        "name": "nonce",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis256X2.encrypt/param/2"
      },
      {
        "name": "ad",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis256X2.encrypt/param/3"
      }
    ]
  },
  "@roblox/globaltype/_zune_ffi.dlopen": {
    "code_sample": "",
    "documentation": "\n\n**Parameters**\n- `path`: The path to the library.\n- `functions`: The symbols to load from the library.\n\n\n**Throws**\n- FFI Error\n- Memory Error\n",
    "returns": [
      "@roblox/globaltype/_zune_ffi.dlopen/return/0"
    ],
    "params": [
      {
        "name": "path",
        "documentation": "@roblox/globaltype/_zune_ffi.dlopen/param/0"
      },
      {
        "name": "functions",
        "documentation": "@roblox/globaltype/_zune_ffi.dlopen/param/1"
      }
    ]
  },
  "@roblox/globaltype/FileHandle.writeSync/param/1": {
    "code_sample": "",
    "documentation": "The contents to write to the file."
  },
  "@roblox/globaltype/_zune_crypto.aead.aes_ocb.Aes128Ocb.encrypt": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/_zune_crypto.aead.aes_ocb.Aes128Ocb.encrypt/return/0"
    ],
    "params": [
      {
        "name": "data",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aes_ocb.Aes128Ocb.encrypt/param/0"
      },
      {
        "name": "key",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aes_ocb.Aes128Ocb.encrypt/param/1"
      },
      {
        "name": "nonce",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aes_ocb.Aes128Ocb.encrypt/param/2"
      },
      {
        "name": "ad",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aes_ocb.Aes128Ocb.encrypt/param/3"
      }
    ]
  },
  "@roblox/globaltype/_zune_mem.indexOfAny/param/1": {
    "code_sample": "",
    "documentation": "The bytes to search for."
  },
  "@roblox/globaltype/HttpServeOptions.backlog": {
    "code_sample": "",
    "documentation": "The maximum number of connections the server will backlog to the OS."
  },
  "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis256X4_256": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "encrypt": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis256X4_256.encrypt",
      "decrypt": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis256X4_256.decrypt"
    }
  },
  "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis256": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "encrypt": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis256.encrypt",
      "decrypt": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis256.decrypt"
    }
  },
  "@roblox/globaltype/_zune_mem.indexOfAny": {
    "code_sample": "",
    "documentation": "Find the index of the first byte that is in the given `needle`.\n\n**Parameters**\n- `src`: The source to search in.\n- `needle`: The bytes to search for.\n",
    "returns": [
      "@roblox/globaltype/_zune_mem.indexOfAny/return/0"
    ],
    "params": [
      {
        "name": "src",
        "documentation": "@roblox/globaltype/_zune_mem.indexOfAny/param/0"
      },
      {
        "name": "needle",
        "documentation": "@roblox/globaltype/_zune_mem.indexOfAny/param/1"
      }
    ]
  },
  "@roblox/globaltype/_zune_process.os": {
    "code_sample": "",
    "documentation": "The operating system that the process is running on."
  },
  "@roblox/globaltype/SQLite3Database.transaction/param/2": {
    "code_sample": "",
    "documentation": "The transaction mode to use."
  },
  "@roblox/globaltype/_zune_fs.path.basename/param/0": {
    "code_sample": "",
    "documentation": "The path to get the base name from."
  },
  "@roblox/globaltype/_zune_crypto_aead.chacha_poly.XChaCha20Poly1305.decrypt": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/_zune_crypto_aead.chacha_poly.XChaCha20Poly1305.decrypt/return/0"
    ],
    "params": [
      {
        "name": "cipher",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.chacha_poly.XChaCha20Poly1305.decrypt/param/0"
      },
      {
        "name": "tag",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.chacha_poly.XChaCha20Poly1305.decrypt/param/1"
      },
      {
        "name": "key",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.chacha_poly.XChaCha20Poly1305.decrypt/param/2"
      },
      {
        "name": "nonce",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.chacha_poly.XChaCha20Poly1305.decrypt/param/3"
      },
      {
        "name": "ad",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.chacha_poly.XChaCha20Poly1305.decrypt/param/4"
      }
    ]
  },
  "@roblox/globaltype/_zune_fs.stat/param/0": {
    "code_sample": "",
    "documentation": "The path to the file or directory to get stats from."
  },
  "@roblox/globaltype/_zune_fs.path.resolve/param/0": {
    "code_sample": "",
    "documentation": "The paths to resolve."
  },
  "@roblox/globaltype/_zune_crypto.aead.chacha_poly.ChaCha12Poly1305.decrypt": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/_zune_crypto.aead.chacha_poly.ChaCha12Poly1305.decrypt/return/0"
    ],
    "params": [
      {
        "name": "cipher",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.chacha_poly.ChaCha12Poly1305.decrypt/param/0"
      },
      {
        "name": "tag",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.chacha_poly.ChaCha12Poly1305.decrypt/param/1"
      },
      {
        "name": "key",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.chacha_poly.ChaCha12Poly1305.decrypt/param/2"
      },
      {
        "name": "nonce",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.chacha_poly.ChaCha12Poly1305.decrypt/param/3"
      },
      {
        "name": "ad",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.chacha_poly.ChaCha12Poly1305.decrypt/param/4"
      }
    ]
  },
  "@roblox/globaltype/NetworkSocket.sendMsg/param/3": {
    "code_sample": "",
    "documentation": "The data to send."
  },
  "@roblox/globaltype/Thread.start": {
    "code_sample": "",
    "documentation": "Starts the thread.\n\n**Throws**\n- Thread Error\n",
    "returns": [],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/Thread.start/param/0"
      }
    ]
  },
  "@roblox/globaltype/_zune_mem.indexOfMax": {
    "code_sample": "",
    "documentation": "Find the index of the maximum value in the buffer.\n\nExpects the buffer to be non-empty.\n\n**Parameters**\n- `src`: The source to search in.\n",
    "returns": [
      "@roblox/globaltype/_zune_mem.indexOfMax/return/0"
    ],
    "params": [
      {
        "name": "src",
        "documentation": "@roblox/globaltype/_zune_mem.indexOfMax/param/0"
      }
    ]
  },
  "@roblox/globaltype/_zune_mem.indexOfNone/param/1": {
    "code_sample": "",
    "documentation": "The bytes to not search for."
  },
  "@roblox/globaltype/_zune_crypto_tls.setupServer": {
    "code_sample": "",
    "documentation": "\n\n**Parameters**\n- `socket`: The socket to setup the server on.\n- `config`: The configuration for the server.\n\n\n**Throws**\n- Tls Error\n- Memory Error\n",
    "returns": [],
    "params": [
      {
        "name": "socket",
        "documentation": "@roblox/globaltype/_zune_crypto_tls.setupServer/param/0"
      },
      {
        "name": "config",
        "documentation": "@roblox/globaltype/_zune_crypto_tls.setupServer/param/1"
      }
    ]
  },
  "@roblox/globaltype/_zune_luau.load/param/1": {
    "code_sample": "",
    "documentation": "The options for loading the bytecode."
  },
  "@roblox/globaltype/_zune_ffi.alloc/param/1": {
    "code_sample": "",
    "documentation": "The alignment to allocate."
  },
  "@roblox/globaltype/HttpServeOptions.websocket": {
    "code_sample": "",
    "documentation": "The handlers for WebSocket connections."
  },
  "@roblox/globaltype/FileHandle.writeSync": {
    "code_sample": "",
    "documentation": "Write the contents to the file synchronously.\n\n**Parameters**\n- `contents`: The contents to write to the file.\n\n\n**Throws**\n- IO Error\n",
    "returns": [],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/FileHandle.writeSync/param/0"
      },
      {
        "name": "contents",
        "documentation": "@roblox/globaltype/FileHandle.writeSync/param/1"
      }
    ]
  },
  "@roblox/globaltype/_zune_ffi.alloc": {
    "code_sample": "",
    "documentation": "\n\n**Parameters**\n- `size`: The size to allocate.\n- `alignment`: The alignment to allocate.\n  - default: `1`\n\n\n**Throws**\n- FFI Error\n- Memory Error\n",
    "returns": [
      "@roblox/globaltype/_zune_ffi.alloc/return/0"
    ],
    "params": [
      {
        "name": "size",
        "documentation": "@roblox/globaltype/_zune_ffi.alloc/param/0"
      },
      {
        "name": "alignment",
        "documentation": "@roblox/globaltype/_zune_ffi.alloc/param/1"
      }
    ]
  },
  "@roblox/globaltype/_zune_crypto.password.verify/param/0": {
    "code_sample": "",
    "documentation": "The password to verify."
  },
  "@roblox/globaltype/_zune_luau.parse/param/0": {
    "code_sample": "",
    "documentation": "The source code to parse."
  },
  "@roblox/globaltype/_zune_random.Pcg32": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "new": "@roblox/globaltype/_zune_random.Pcg32.new"
    }
  },
  "@roblox/globaltype/_zune_serde_lz4": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "compressFrame": "@roblox/globaltype/_zune_serde_lz4.compressFrame",
      "decompressFrame": "@roblox/globaltype/_zune_serde_lz4.decompressFrame",
      "decompress": "@roblox/globaltype/_zune_serde_lz4.decompress",
      "compress": "@roblox/globaltype/_zune_serde_lz4.compress"
    }
  },
  "@roblox/globaltype/_zune_fs.getExePath": {
    "code_sample": "",
    "documentation": "Get the path to the current executable.\n\n**Throws**\n- IO Error\n",
    "returns": [
      "@roblox/globaltype/_zune_fs.getExePath/return/0"
    ],
    "params": []
  },
  "@roblox/globaltype/_zune_serde_toml": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "encode": "@roblox/globaltype/_zune_serde_toml.encode",
      "decode": "@roblox/globaltype/_zune_serde_toml.decode"
    }
  },
  "@roblox/globaltype/_zune_process.onSignal": {
    "code_sample": "",
    "documentation": "Registers a signal handler.\n\nSupported signals:\n- `INT` - Interrupt signal (SIGINT).\n\n**Parameters**\n- `signal`: The signal to handle.\n- `callback`: The callback to call when the signal is received.\n\n\n**Throws**\n- Process Error\n- Thread Error\n",
    "returns": [],
    "params": [
      {
        "name": "signal",
        "documentation": "@roblox/globaltype/_zune_process.onSignal/param/0"
      },
      {
        "name": "callback",
        "documentation": "@roblox/globaltype/_zune_process.onSignal/param/1"
      }
    ]
  },
  "@roblox/globaltype/_zune_crypto_random.nextInteger": {
    "code_sample": "",
    "documentation": "Generates a random integer.\n\nIf no arguments are provided, the function will generate a number between the limits of a signed 32-bit integer."
  },
  "@roblox/globaltype/_zune_serde.json5": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "encode": "@roblox/globaltype/_zune_serde.json5.encode",
      "values": "@roblox/globaltype/_zune_serde.json5.values",
      "decode": "@roblox/globaltype/_zune_serde.json5.decode",
      "indents": "@roblox/globaltype/_zune_serde.json5.indents"
    }
  },
  "@roblox/globaltype/_zune_thread.fromModule/param/0": {
    "code_sample": "",
    "documentation": "The module to load in the new thread."
  },
  "@roblox/globaltype/_zune_serde.json.decode/param/0": {
    "code_sample": "",
    "documentation": "The JSON string to decode."
  },
  "@roblox/globaltype/_zune_luau.parseExpr": {
    "code_sample": "",
    "documentation": "Parses a `Luau` expression.\n\n**Parameters**\n- `src`: The expression to parse.\n\n\n**Throws**\n- Memory Error\n",
    "returns": [
      "@roblox/globaltype/_zune_luau.parseExpr/return/0"
    ],
    "params": [
      {
        "name": "src",
        "documentation": "@roblox/globaltype/_zune_luau.parseExpr/param/0"
      }
    ]
  },
  "@roblox/globaltype/_zune_crypto_random.fill/param/0": {
    "code_sample": "",
    "documentation": "The buffer to write to."
  },
  "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis256X2_256.encrypt": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis256X2_256.encrypt/return/0"
    ],
    "params": [
      {
        "name": "data",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis256X2_256.encrypt/param/0"
      },
      {
        "name": "key",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis256X2_256.encrypt/param/1"
      },
      {
        "name": "nonce",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis256X2_256.encrypt/param/2"
      },
      {
        "name": "ad",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis256X2_256.encrypt/param/3"
      }
    ]
  },
  "@roblox/globaltype/_zune_crypto_aead.salsa_poly.XSalsa20Poly1305.encrypt": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/_zune_crypto_aead.salsa_poly.XSalsa20Poly1305.encrypt/return/0"
    ],
    "params": [
      {
        "name": "data",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.salsa_poly.XSalsa20Poly1305.encrypt/param/0"
      },
      {
        "name": "key",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.salsa_poly.XSalsa20Poly1305.encrypt/param/1"
      },
      {
        "name": "nonce",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.salsa_poly.XSalsa20Poly1305.encrypt/param/2"
      },
      {
        "name": "ad",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.salsa_poly.XSalsa20Poly1305.encrypt/param/3"
      }
    ]
  },
  "@roblox/globaltype/_zune_fs": {
    "code_sample": "",
    "documentation": "A library that provides access to the file system.",
    "keys": {
      "readDir": "@roblox/globaltype/_zune_fs.readDir",
      "getExePath": "@roblox/globaltype/_zune_fs.getExePath",
      "readFile": "@roblox/globaltype/_zune_fs.readFile",
      "copy": "@roblox/globaltype/_zune_fs.copy",
      "watch": "@roblox/globaltype/_zune_fs.watch",
      "stat": "@roblox/globaltype/_zune_fs.stat",
      "embeddedScripts": "@roblox/globaltype/_zune_fs.embeddedScripts",
      "removeDir": "@roblox/globaltype/_zune_fs.removeDir",
      "move": "@roblox/globaltype/_zune_fs.move",
      "createFile": "@roblox/globaltype/_zune_fs.createFile",
      "writeDir": "@roblox/globaltype/_zune_fs.writeDir",
      "embedFile": "@roblox/globaltype/_zune_fs.embedFile",
      "metadata": "@roblox/globaltype/_zune_fs.metadata",
      "path": "@roblox/globaltype/_zune_fs.path",
      "writeFile": "@roblox/globaltype/_zune_fs.writeFile",
      "embeddedFiles": "@roblox/globaltype/_zune_fs.embeddedFiles",
      "symlink": "@roblox/globaltype/_zune_fs.symlink",
      "removeFile": "@roblox/globaltype/_zune_fs.removeFile",
      "openFile": "@roblox/globaltype/_zune_fs.openFile",
      "realPath": "@roblox/globaltype/_zune_fs.realPath"
    },
    "learn_more_link": "https://zune.sh/docs/v0.5.0/api/fs"
  },
  "@roblox/globaltype/_zune_crypto_tls.setupClient/param/1": {
    "code_sample": "",
    "documentation": "The configuration for the client."
  },
  "@roblox/globaltype/_zune_crypto_password.hash/param/1": {
    "code_sample": "",
    "documentation": "The options for the password hashing."
  },
  "@roblox/globaltype/_zune_mem.min/param/0": {
    "code_sample": "",
    "documentation": "The source to search in."
  },
  "@roblox/globaltype/FFICompileOptions.symbols": {
    "code_sample": "",
    "documentation": "The symbols to define."
  },
  "@roblox/globaltype/_zune_datetime.fromUnixTimestamp/param/0": {
    "code_sample": "",
    "documentation": "The unix timestamp in seconds."
  },
  "@roblox/globaltype/_zune_net.IPPROTO": {
    "code_sample": "",
    "documentation": "Table of IP protocols.",
    "keys": {
      "COMP": "@roblox/globaltype/_zune_net.IPPROTO.COMP",
      "ICMP": "@roblox/globaltype/_zune_net.IPPROTO.ICMP",
      "ESP": "@roblox/globaltype/_zune_net.IPPROTO.ESP",
      "MPLS": "@roblox/globaltype/_zune_net.IPPROTO.MPLS",
      "TCP": "@roblox/globaltype/_zune_net.IPPROTO.TCP",
      "ICMPV6": "@roblox/globaltype/_zune_net.IPPROTO.ICMPV6",
      "MTP": "@roblox/globaltype/_zune_net.IPPROTO.MTP",
      "GRE": "@roblox/globaltype/_zune_net.IPPROTO.GRE",
      "SCTP": "@roblox/globaltype/_zune_net.IPPROTO.SCTP",
      "MAX": "@roblox/globaltype/_zune_net.IPPROTO.MAX",
      "NONE": "@roblox/globaltype/_zune_net.IPPROTO.NONE",
      "RSVP": "@roblox/globaltype/_zune_net.IPPROTO.RSVP",
      "IDP": "@roblox/globaltype/_zune_net.IPPROTO.IDP",
      "UDPLITE": "@roblox/globaltype/_zune_net.IPPROTO.UDPLITE",
      "HOPOPTS": "@roblox/globaltype/_zune_net.IPPROTO.HOPOPTS",
      "MH": "@roblox/globaltype/_zune_net.IPPROTO.MH",
      "BEETPH": "@roblox/globaltype/_zune_net.IPPROTO.BEETPH",
      "AH": "@roblox/globaltype/_zune_net.IPPROTO.AH",
      "IPIP": "@roblox/globaltype/_zune_net.IPPROTO.IPIP",
      "IPV6": "@roblox/globaltype/_zune_net.IPPROTO.IPV6",
      "PIM": "@roblox/globaltype/_zune_net.IPPROTO.PIM",
      "DSTOPTS": "@roblox/globaltype/_zune_net.IPPROTO.DSTOPTS",
      "UDP": "@roblox/globaltype/_zune_net.IPPROTO.UDP",
      "DCCP": "@roblox/globaltype/_zune_net.IPPROTO.DCCP",
      "RAW": "@roblox/globaltype/_zune_net.IPPROTO.RAW",
      "PUP": "@roblox/globaltype/_zune_net.IPPROTO.PUP",
      "IGMP": "@roblox/globaltype/_zune_net.IPPROTO.IGMP",
      "ENCAP": "@roblox/globaltype/_zune_net.IPPROTO.ENCAP",
      "FRAGMENT": "@roblox/globaltype/_zune_net.IPPROTO.FRAGMENT",
      "ROUTING": "@roblox/globaltype/_zune_net.IPPROTO.ROUTING",
      "EGP": "@roblox/globaltype/_zune_net.IPPROTO.EGP",
      "TP": "@roblox/globaltype/_zune_net.IPPROTO.TP",
      "IP": "@roblox/globaltype/_zune_net.IPPROTO.IP"
    }
  },
  "@roblox/globaltype/_zune_crypto_aead.chacha_poly.XChaCha12Poly1305": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "encrypt": "@roblox/globaltype/_zune_crypto_aead.chacha_poly.XChaCha12Poly1305.encrypt",
      "decrypt": "@roblox/globaltype/_zune_crypto_aead.chacha_poly.XChaCha12Poly1305.decrypt"
    }
  },
  "@roblox/globaltype/_zune_crypto_aead.salsa_poly": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "XSalsa20Poly1305": "@roblox/globaltype/_zune_crypto_aead.salsa_poly.XSalsa20Poly1305"
    }
  },
  "@roblox/globaltype/_zune_mem.trimLeft/param/0": {
    "code_sample": "",
    "documentation": "The source to trim."
  },
  "@roblox/globaltype/_zune_crypto.aead.aes_ocb.Aes256Ocb.decrypt": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/_zune_crypto.aead.aes_ocb.Aes256Ocb.decrypt/return/0"
    ],
    "params": [
      {
        "name": "cipher",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aes_ocb.Aes256Ocb.decrypt/param/0"
      },
      {
        "name": "tag",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aes_ocb.Aes256Ocb.decrypt/param/1"
      },
      {
        "name": "key",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aes_ocb.Aes256Ocb.decrypt/param/2"
      },
      {
        "name": "nonce",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aes_ocb.Aes256Ocb.decrypt/param/3"
      },
      {
        "name": "ad",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aes_ocb.Aes256Ocb.decrypt/param/4"
      }
    ]
  },
  "@roblox/globaltype/Thread": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "receive": "@roblox/globaltype/Thread.receive",
      "join": "@roblox/globaltype/Thread.join",
      "status": "@roblox/globaltype/Thread.status",
      "send": "@roblox/globaltype/Thread.send",
      "start": "@roblox/globaltype/Thread.start"
    }
  },
  "@roblox/globaltype/_zune_fs.metadata": {
    "code_sample": "",
    "documentation": "Get metadata of a file or directory at the provided path.\n\n**Parameters**\n- `path`: The path to the file or directory to get metadata from.\n\n\n**Throws**\n- IO Error\n",
    "returns": [
      "@roblox/globaltype/_zune_fs.metadata/return/0"
    ],
    "params": [
      {
        "name": "path",
        "documentation": "@roblox/globaltype/_zune_fs.metadata/param/0"
      }
    ]
  },
  "@roblox/globaltype/FFILibrary": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "getSymbol": "@roblox/globaltype/FFILibrary.getSymbol"
    }
  },
  "@roblox/globaltype/SQLite3Statement.get/param/1": {
    "code_sample": "",
    "documentation": "The arguments to bind to the statement."
  },
  "@roblox/globaltype/FFIPointer.writef32": {
    "code_sample": "",
    "documentation": "",
    "returns": [],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/FFIPointer.writef32/param/0"
      },
      {
        "name": "offset",
        "documentation": "@roblox/globaltype/FFIPointer.writef32/param/1"
      },
      {
        "name": "value",
        "documentation": "@roblox/globaltype/FFIPointer.writef32/param/2"
      }
    ]
  },
  "@roblox/globaltype/_zune_fs.copy/param/1": {
    "code_sample": "",
    "documentation": "The path to copy the file or directory to."
  },
  "@roblox/globaltype/IoWritable.writeu32": {
    "code_sample": "",
    "documentation": "\n\n**Throws**\n- Writer Error\n",
    "returns": [],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/IoWritable.writeu32/param/0"
      },
      {
        "name": "value",
        "documentation": "@roblox/globaltype/IoWritable.writeu32/param/1"
      }
    ]
  },
  "@roblox/globaltype/_zune_crypto.random.fill/param/2": {
    "code_sample": "",
    "documentation": "The number of bytes to write."
  },
  "@roblox/globaltype/_zune_testing.test": {
    "code_sample": "",
    "documentation": "Conducts a test.\n\n*Will be ignored if the testing suite is not running.*\n\n\n**Parameters**\n- `name`: The name of the test.\n- `callback`: The callback to run the test.\n- `timeout`: The timeout on how long a test should last.\n",
    "returns": [],
    "params": [
      {
        "name": "name",
        "documentation": "@roblox/globaltype/_zune_testing.test/param/0"
      },
      {
        "name": "callback",
        "documentation": "@roblox/globaltype/_zune_testing.test/param/1"
      },
      {
        "name": "timeout",
        "documentation": "@roblox/globaltype/_zune_testing.test/param/2"
      }
    ]
  },
  "@roblox/globaltype/Regex.replace/param/2": {
    "code_sample": "",
    "documentation": "The replacement string."
  },
  "@roblox/globaltype/ProcessChild.kill": {
    "code_sample": "",
    "documentation": "Yields until the process exits.\n\n**Throws**\n- Process Error\n",
    "returns": [
      "@roblox/globaltype/ProcessChild.kill/return/0"
    ],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/ProcessChild.kill/param/0"
      }
    ]
  },
  "@roblox/globaltype/_zune_crypto.aead.isap.IsapA128A": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "encrypt": "@roblox/globaltype/_zune_crypto.aead.isap.IsapA128A.encrypt",
      "decrypt": "@roblox/globaltype/_zune_crypto.aead.isap.IsapA128A.decrypt"
    }
  },
  "@roblox/globaltype/_zune_io.terminal.enableRawMode": {
    "code_sample": "",
    "documentation": "Enable raw mode.\n\nOn unix: Will attempt to change terminal mode.\nOn windows: Will attempt to change console mode.\n\nreturns `true` if the operation was successful.",
    "returns": [
      "@roblox/globaltype/_zune_io.terminal.enableRawMode/return/0"
    ],
    "params": []
  },
  "@roblox/globaltype/_zune_fs.writeDir/param/0": {
    "code_sample": "",
    "documentation": "The path to the directory to create."
  },
  "@roblox/globaltype/ServerWebSocketHandlers.open": {
    "code_sample": "",
    "documentation": "The function to call when a WebSocket connection is opened."
  },
  "@roblox/globaltype/IoWritable.writef64": {
    "code_sample": "",
    "documentation": "\n\n**Throws**\n- Writer Error\n",
    "returns": [],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/IoWritable.writef64/param/0"
      },
      {
        "name": "value",
        "documentation": "@roblox/globaltype/IoWritable.writef64/param/1"
      }
    ]
  },
  "@roblox/globaltype/NetworkSocket.getName": {
    "code_sample": "",
    "documentation": "\n\n**Throws**\n- Network Error\n- Memory Error\n",
    "returns": [
      "@roblox/globaltype/NetworkSocket.getName/return/0"
    ],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/NetworkSocket.getName/param/0"
      }
    ]
  },
  "@roblox/globaltype/HttpWebSocketOptions.message": {
    "code_sample": "",
    "documentation": "The function to call when a message is received."
  },
  "@roblox/globaltype/FFIPointer.writeptr": {
    "code_sample": "",
    "documentation": "",
    "returns": [],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/FFIPointer.writeptr/param/0"
      },
      {
        "name": "offset",
        "documentation": "@roblox/globaltype/FFIPointer.writeptr/param/1"
      },
      {
        "name": "value",
        "documentation": "@roblox/globaltype/FFIPointer.writeptr/param/2"
      }
    ]
  },
  "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis256X2_256.encrypt": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis256X2_256.encrypt/return/0"
    ],
    "params": [
      {
        "name": "data",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis256X2_256.encrypt/param/0"
      },
      {
        "name": "key",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis256X2_256.encrypt/param/1"
      },
      {
        "name": "nonce",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis256X2_256.encrypt/param/2"
      },
      {
        "name": "ad",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis256X2_256.encrypt/param/3"
      }
    ]
  },
  "@roblox/globaltype/_zune_fs.realPath": {
    "code_sample": "",
    "documentation": "Get absolute path to the file or directory.\n\n**Parameters**\n- `path`: The path to resolve.\n",
    "returns": [
      "@roblox/globaltype/_zune_fs.realPath/return/0"
    ],
    "params": [
      {
        "name": "path",
        "documentation": "@roblox/globaltype/_zune_fs.realPath/param/0"
      }
    ]
  },
  "@roblox/globaltype/FFIPointer.writei32": {
    "code_sample": "",
    "documentation": "",
    "returns": [],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/FFIPointer.writei32/param/0"
      },
      {
        "name": "offset",
        "documentation": "@roblox/globaltype/FFIPointer.writei32/param/1"
      },
      {
        "name": "value",
        "documentation": "@roblox/globaltype/FFIPointer.writei32/param/2"
      }
    ]
  },
  "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis128X2": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "encrypt": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis128X2.encrypt",
      "decrypt": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis128X2.decrypt"
    }
  },
  "@roblox/globaltype/IoWritable.writei32": {
    "code_sample": "",
    "documentation": "\n\n**Throws**\n- Writer Error\n",
    "returns": [],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/IoWritable.writei32/param/0"
      },
      {
        "name": "value",
        "documentation": "@roblox/globaltype/IoWritable.writei32/param/1"
      }
    ]
  },
  "@roblox/globaltype/_zune_mem.set/param/3": {
    "code_sample": "",
    "documentation": "The number of bytes to write. If not provided, will write until the end of the buffer."
  },
  "@roblox/globaltype/FFIPointer.writef64": {
    "code_sample": "",
    "documentation": "",
    "returns": [],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/FFIPointer.writef64/param/0"
      },
      {
        "name": "offset",
        "documentation": "@roblox/globaltype/FFIPointer.writef64/param/1"
      },
      {
        "name": "value",
        "documentation": "@roblox/globaltype/FFIPointer.writef64/param/2"
      }
    ]
  },
  "@roblox/globaltype/_zune_serde.toml.decode/param/0": {
    "code_sample": "",
    "documentation": "The TOML string to decode."
  },
  "@roblox/globaltype/_zune_mem.indexOfPos/param/2": {
    "code_sample": "",
    "documentation": "The needle to search for."
  },
  "@roblox/globaltype/_zune_serde_json.encode": {
    "code_sample": "",
    "documentation": "Encodes a value to JSON.\n\n**Parameters**\n- `value`: The value to encode.\n- `config`: The configuration for the encoding.\n\n\n**Throws**\n- Memory Error\n",
    "returns": [
      "@roblox/globaltype/_zune_serde_json.encode/return/0"
    ],
    "params": [
      {
        "name": "value",
        "documentation": "@roblox/globaltype/_zune_serde_json.encode/param/0"
      },
      {
        "name": "config",
        "documentation": "@roblox/globaltype/_zune_serde_json.encode/param/1"
      }
    ]
  },
  "@roblox/globaltype/Regex.captures/param/2": {
    "code_sample": "",
    "documentation": "If true, the function will return all captures instead of just the first"
  },
  "@roblox/globaltype/FileWatcher": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "stop": "@roblox/globaltype/FileWatcher.stop"
    }
  },
  "@roblox/globaltype/_zune_mem.indexOfScalar/param/0": {
    "code_sample": "",
    "documentation": "The source to search in."
  },
  "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis128L_256.decrypt": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis128L_256.decrypt/return/0"
    ],
    "params": [
      {
        "name": "cipher",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis128L_256.decrypt/param/0"
      },
      {
        "name": "tag",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis128L_256.decrypt/param/1"
      },
      {
        "name": "key",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis128L_256.decrypt/param/2"
      },
      {
        "name": "nonce",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis128L_256.decrypt/param/3"
      },
      {
        "name": "ad",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis128L_256.decrypt/param/4"
      }
    ]
  },
  "@roblox/globaltype/_zune_ffi_c": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "compile": "@roblox/globaltype/_zune_ffi_c.compile"
    }
  },
  "@roblox/globaltype/_zune_mem.indexOfNonePos": {
    "code_sample": "",
    "documentation": "Find the index of the first byte that is not in the given `needle`, starting from the given `offset`.\n\n**Parameters**\n- `src`: The source to search in.\n- `offset`: The offset to start searching from.\n- `needle`: The bytes to not search for.\n",
    "returns": [
      "@roblox/globaltype/_zune_mem.indexOfNonePos/return/0"
    ],
    "params": [
      {
        "name": "src",
        "documentation": "@roblox/globaltype/_zune_mem.indexOfNonePos/param/0"
      },
      {
        "name": "offset",
        "documentation": "@roblox/globaltype/_zune_mem.indexOfNonePos/param/1"
      },
      {
        "name": "needle",
        "documentation": "@roblox/globaltype/_zune_mem.indexOfNonePos/param/2"
      }
    ]
  },
  "@roblox/globaltype/_zune_datetime.fromUnixTimestamp": {
    "code_sample": "",
    "documentation": "\n\n**Parameters**\n- `timestamp`: The unix timestamp in seconds.\n\n\n**Throws**\n- DateTime Error\n- Memory Error\n",
    "returns": [
      "@roblox/globaltype/_zune_datetime.fromUnixTimestamp/return/0"
    ],
    "params": [
      {
        "name": "timestamp",
        "documentation": "@roblox/globaltype/_zune_datetime.fromUnixTimestamp/param/0"
      }
    ]
  },
  "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis128X2_256.encrypt": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis128X2_256.encrypt/return/0"
    ],
    "params": [
      {
        "name": "data",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis128X2_256.encrypt/param/0"
      },
      {
        "name": "key",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis128X2_256.encrypt/param/1"
      },
      {
        "name": "nonce",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis128X2_256.encrypt/param/2"
      },
      {
        "name": "ad",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis128X2_256.encrypt/param/3"
      }
    ]
  },
  "@roblox/globaltype/FileCreateOptions": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "exclusive": "@roblox/globaltype/FileCreateOptions.exclusive"
    }
  },
  "@roblox/globaltype/_zune_ffi.fn/param/1": {
    "code_sample": "",
    "documentation": "The pointer to the function."
  },
  "@roblox/globaltype/_zune_crypto_tls.keyPairFromFile/param/0": {
    "code_sample": "",
    "documentation": "The certificate file."
  },
  "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis128L.encrypt": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis128L.encrypt/return/0"
    ],
    "params": [
      {
        "name": "data",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis128L.encrypt/param/0"
      },
      {
        "name": "key",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis128L.encrypt/param/1"
      },
      {
        "name": "nonce",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis128L.encrypt/param/2"
      },
      {
        "name": "ad",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis128L.encrypt/param/3"
      }
    ]
  },
  "@roblox/globaltype/_zune_testing.expected/param/0": {
    "code_sample": "",
    "documentation": "The value to expect."
  },
  "@roblox/globaltype/_zune_thread.receive": {
    "code_sample": "",
    "documentation": "Receives a message from the owner thread.\n\nWill error if called from the main thread.\n\n**Throws**\n- Thread Error\n- Memory Error\n",
    "returns": [],
    "params": []
  },
  "@roblox/globaltype/_zune_random_RomuTrio": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "new": "@roblox/globaltype/_zune_random_RomuTrio.new"
    }
  },
  "@roblox/globaltype/_zune_fs_path.isAbsolute": {
    "code_sample": "",
    "documentation": "Checks if the provided path is an absolute path based on OS.\n\n**Parameters**\n- `path`: The path to check if it is absolute.\n",
    "returns": [
      "@roblox/globaltype/_zune_fs_path.isAbsolute/return/0"
    ],
    "params": [
      {
        "name": "path",
        "documentation": "@roblox/globaltype/_zune_fs_path.isAbsolute/param/0"
      }
    ]
  },
  "@roblox/globaltype/_zune_fs.writeDir": {
    "code_sample": "",
    "documentation": "Creates a directory at the provided path.\n\n**Parameters**\n- `path`: The path to the directory to create.\n- `recursive`: If true, the function will create all parent directories if they do not\n  - default: `false`\n\n\n**Throws**\n- IO Error\n",
    "returns": [],
    "params": [
      {
        "name": "path",
        "documentation": "@roblox/globaltype/_zune_fs.writeDir/param/0"
      },
      {
        "name": "recursive",
        "documentation": "@roblox/globaltype/_zune_fs.writeDir/param/1"
      }
    ]
  },
  "@roblox/globaltype/_zune_io_terminal.isTTY": {
    "code_sample": "",
    "documentation": "Whether the terminal is a TTY."
  },
  "@roblox/globaltype/_zune_net.http.websocket/param/1": {
    "code_sample": "",
    "documentation": "The options for the WebSocket."
  },
  "@roblox/globaltype/SerdeJsonEncodeConfig.pretty_indent": {
    "code_sample": "",
    "documentation": "The indentation level for pretty printing"
  },
  "@roblox/globaltype/FileHandle.write": {
    "code_sample": "",
    "documentation": "Write the contents to the file.\n\n**Parameters**\n- `contents`: The contents to write to the file.\n\n\n**Throws**\n- IO Error\n",
    "returns": [],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/FileHandle.write/param/0"
      },
      {
        "name": "contents",
        "documentation": "@roblox/globaltype/FileHandle.write/param/1"
      }
    ]
  },
  "@roblox/globaltype/_zune_crypto.tls.bundleFromFile": {
    "code_sample": "",
    "documentation": "\n\n**Parameters**\n- `file`: The file to load the bundle from.\n\n\n**Throws**\n- IO Error\n",
    "returns": [
      "@roblox/globaltype/_zune_crypto.tls.bundleFromFile/return/0"
    ],
    "params": [
      {
        "name": "file",
        "documentation": "@roblox/globaltype/_zune_crypto.tls.bundleFromFile/param/0"
      }
    ]
  },
  "@roblox/globaltype/_zune_crypto_aead": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "salsa_poly": "@roblox/globaltype/_zune_crypto_aead.salsa_poly",
      "isap": "@roblox/globaltype/_zune_crypto_aead.isap",
      "aes_gcm": "@roblox/globaltype/_zune_crypto_aead.aes_gcm",
      "aegis": "@roblox/globaltype/_zune_crypto_aead.aegis",
      "aes_ocb": "@roblox/globaltype/_zune_crypto_aead.aes_ocb",
      "chacha_poly": "@roblox/globaltype/_zune_crypto_aead.chacha_poly"
    }
  },
  "@roblox/globaltype/HttpServeOptions.address": {
    "code_sample": "",
    "documentation": "The address to bind to."
  },
  "@roblox/globaltype/_zune_crypto.tls.setupServer": {
    "code_sample": "",
    "documentation": "\n\n**Parameters**\n- `socket`: The socket to setup the server on.\n- `config`: The configuration for the server.\n\n\n**Throws**\n- Tls Error\n- Memory Error\n",
    "returns": [],
    "params": [
      {
        "name": "socket",
        "documentation": "@roblox/globaltype/_zune_crypto.tls.setupServer/param/0"
      },
      {
        "name": "config",
        "documentation": "@roblox/globaltype/_zune_crypto.tls.setupServer/param/1"
      }
    ]
  },
  "@roblox/globaltype/NetworkSocket.listen/param/1": {
    "code_sample": "",
    "documentation": "The maximum number of connections to backlog."
  },
  "@roblox/globaltype/NetworkSocket.send/param/1": {
    "code_sample": "",
    "documentation": "The data to send."
  },
  "@roblox/globaltype/FFIPointer.writeu64": {
    "code_sample": "",
    "documentation": "",
    "returns": [],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/FFIPointer.writeu64/param/0"
      },
      {
        "name": "offset",
        "documentation": "@roblox/globaltype/FFIPointer.writeu64/param/1"
      },
      {
        "name": "value",
        "documentation": "@roblox/globaltype/FFIPointer.writeu64/param/2"
      }
    ]
  },
  "@roblox/globaltype/_zune_task.delay/param/1": {
    "code_sample": "",
    "documentation": "The function to run after the delay."
  },
  "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis128L_256": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "encrypt": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis128L_256.encrypt",
      "decrypt": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis128L_256.decrypt"
    }
  },
  "@roblox/globaltype/_zune_process.run/param/0": {
    "code_sample": "",
    "documentation": "The executable to run."
  },
  "@roblox/globaltype/FFIPointer.writei64": {
    "code_sample": "",
    "documentation": "",
    "returns": [],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/FFIPointer.writei64/param/0"
      },
      {
        "name": "offset",
        "documentation": "@roblox/globaltype/FFIPointer.writei64/param/1"
      },
      {
        "name": "value",
        "documentation": "@roblox/globaltype/FFIPointer.writei64/param/2"
      }
    ]
  },
  "@roblox/globaltype/_zune_mem.indexOfNonePos/param/0": {
    "code_sample": "",
    "documentation": "The source to search in."
  },
  "@roblox/globaltype/_zune_crypto.password.verify/param/1": {
    "code_sample": "",
    "documentation": "The hash to verify against."
  },
  "@roblox/globaltype/_zune_crypto.aead.chacha_poly.ChaCha20Poly1305.decrypt": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/_zune_crypto.aead.chacha_poly.ChaCha20Poly1305.decrypt/return/0"
    ],
    "params": [
      {
        "name": "cipher",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.chacha_poly.ChaCha20Poly1305.decrypt/param/0"
      },
      {
        "name": "tag",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.chacha_poly.ChaCha20Poly1305.decrypt/param/1"
      },
      {
        "name": "key",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.chacha_poly.ChaCha20Poly1305.decrypt/param/2"
      },
      {
        "name": "nonce",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.chacha_poly.ChaCha20Poly1305.decrypt/param/3"
      },
      {
        "name": "ad",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.chacha_poly.ChaCha20Poly1305.decrypt/param/4"
      }
    ]
  },
  "@roblox/globaltype/_zune_testing.running": {
    "code_sample": "",
    "documentation": "Whether the testing suite is running."
  },
  "@roblox/globaltype/_zune_ffi.dupe/param/0": {
    "code_sample": "",
    "documentation": "The pointer to duplicate. If the source is a static pointer, it must have a known size."
  },
  "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis128X4": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "encrypt": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis128X4.encrypt",
      "decrypt": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis128X4.decrypt"
    }
  },
  "@roblox/globaltype/_zune_task.count": {
    "code_sample": "",
    "documentation": "Counts the number of current tasks.\n\nOptional kinds parameter to count a specific kind of task.\n\nKinds:\n- `s` to count sleeping tasks.\n- `d` to count deferred tasks.\n- `w` to count awaiting tasks. (zune backend)\n- `t` to count internal tasks. (zune backend)"
  },
  "@roblox/globaltype/_zune_datetime.fromIsoDate": {
    "code_sample": "",
    "documentation": "Parse a string in ISO8601 format, `YYYY-MM-DDTHH:MM:SSZ`.\n\n**Parameters**\n- `date`: The date string to parse.\n\n\n**Throws**\n- DateTime Error\n- Memory Error\n",
    "returns": [
      "@roblox/globaltype/_zune_datetime.fromIsoDate/return/0"
    ],
    "params": [
      {
        "name": "date",
        "documentation": "@roblox/globaltype/_zune_datetime.fromIsoDate/param/0"
      }
    ]
  },
  "@roblox/globaltype/_zune_luau.coverage/param/0": {
    "code_sample": "",
    "documentation": "The function to get the coverage data from.",
    "returns": [],
    "params": [
      {
        "name": "...",
        "documentation": "@roblox/globaltype/_zune_luau.coverage/param/0/param/0"
      }
    ]
  },
  "@roblox/globaltype/Thread.join": {
    "code_sample": "",
    "documentation": "Waits for the thread to finish.\n\n**Throws**\n- Thread Error\n",
    "returns": [],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/Thread.join/param/0"
      }
    ]
  },
  "@roblox/globaltype/_zune_require.getCached": {
    "code_sample": "",
    "documentation": "\n\n**Throws**\n- Require Error\n- Memory Error\n",
    "returns": [
      "@roblox/globaltype/_zune_require.getCached/return/0"
    ],
    "params": [
      {
        "name": "resolvedPath",
        "documentation": "@roblox/globaltype/_zune_require.getCached/param/0"
      }
    ]
  },
  "@roblox/globaltype/_zune_net.http.serve": {
    "code_sample": "",
    "documentation": "Starts a new HTTP server.\n\n**Parameters**\n- `opts`: The options for the server.\n\n\n**Throws**\n- IO Error\n- Network Error\n",
    "returns": [
      "@roblox/globaltype/_zune_net.http.serve/return/0"
    ],
    "params": [
      {
        "name": "opts",
        "documentation": "@roblox/globaltype/_zune_net.http.serve/param/0"
      }
    ]
  },
  "@roblox/globaltype/_zune_crypto.random.fill": {
    "code_sample": "",
    "documentation": "Write random bytes to the buffer.\n\n**Parameters**\n- `buffer`: The buffer to write to.\n- `offset`: The offset to start writing at.\n- `length`: The number of bytes to write.\n\n\n**Throws**\n- Range Error\n- Crypto Error\n- Buffer Error\n",
    "returns": [],
    "params": [
      {
        "name": "buffer",
        "documentation": "@roblox/globaltype/_zune_crypto.random.fill/param/0"
      },
      {
        "name": "offset",
        "documentation": "@roblox/globaltype/_zune_crypto.random.fill/param/1"
      },
      {
        "name": "length",
        "documentation": "@roblox/globaltype/_zune_crypto.random.fill/param/2"
      }
    ]
  },
  "@roblox/globaltype/ProcessChild": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "stderr": "@roblox/globaltype/ProcessChild.stderr",
      "kill": "@roblox/globaltype/ProcessChild.kill",
      "stdout": "@roblox/globaltype/ProcessChild.stdout",
      "stdin": "@roblox/globaltype/ProcessChild.stdin",
      "wait": "@roblox/globaltype/ProcessChild.wait"
    }
  },
  "@roblox/globaltype/_zune_random_Pcg32": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "new": "@roblox/globaltype/_zune_random_Pcg32.new"
    }
  },
  "@roblox/globaltype/_zune_crypto.createHash": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/_zune_crypto.createHash/return/0"
    ],
    "params": [
      {
        "name": "algorithm",
        "documentation": "@roblox/globaltype/_zune_crypto.createHash/param/0"
      },
      {
        "name": "secret",
        "documentation": "@roblox/globaltype/_zune_crypto.createHash/param/1"
      }
    ]
  },
  "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis256_256.decrypt": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis256_256.decrypt/return/0"
    ],
    "params": [
      {
        "name": "cipher",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis256_256.decrypt/param/0"
      },
      {
        "name": "tag",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis256_256.decrypt/param/1"
      },
      {
        "name": "key",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis256_256.decrypt/param/2"
      },
      {
        "name": "nonce",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis256_256.decrypt/param/3"
      },
      {
        "name": "ad",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis256_256.decrypt/param/4"
      }
    ]
  },
  "@roblox/globaltype/_zune_serde.json.decode/param/1": {
    "code_sample": "",
    "documentation": "The configuration for the decoding."
  },
  "@roblox/globaltype/_zune_serde_json5.indents": {
    "code_sample": "",
    "documentation": "Indentation levels for JSON.",
    "keys": {
      "tabs": "@roblox/globaltype/_zune_serde_json5.indents.tabs",
      "four_spaces": "@roblox/globaltype/_zune_serde_json5.indents.four_spaces",
      "two_spaces": "@roblox/globaltype/_zune_serde_json5.indents.two_spaces",
      "none": "@roblox/globaltype/_zune_serde_json5.indents.none"
    }
  },
  "@roblox/globaltype/_zune_serde.json.indents": {
    "code_sample": "",
    "documentation": "Indentation levels for JSON.",
    "keys": {
      "tabs": "@roblox/globaltype/_zune_serde.json.indents.tabs",
      "four_spaces": "@roblox/globaltype/_zune_serde.json.indents.four_spaces",
      "two_spaces": "@roblox/globaltype/_zune_serde.json.indents.two_spaces",
      "none": "@roblox/globaltype/_zune_serde.json.indents.none"
    }
  },
  "@roblox/globaltype/_zune_serde_toml.decode": {
    "code_sample": "",
    "documentation": "Decodes TOML.\n\n**Parameters**\n- `toml`: The TOML string to decode.\n\n\n**Throws**\n- Memory Error\n",
    "returns": [
      "@roblox/globaltype/_zune_serde_toml.decode/return/0"
    ],
    "params": [
      {
        "name": "toml",
        "documentation": "@roblox/globaltype/_zune_serde_toml.decode/param/0"
      }
    ]
  },
  "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis256.decrypt": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis256.decrypt/return/0"
    ],
    "params": [
      {
        "name": "cipher",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis256.decrypt/param/0"
      },
      {
        "name": "tag",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis256.decrypt/param/1"
      },
      {
        "name": "key",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis256.decrypt/param/2"
      },
      {
        "name": "nonce",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis256.decrypt/param/3"
      },
      {
        "name": "ad",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis256.decrypt/param/4"
      }
    ]
  },
  "@roblox/globaltype/_zune_mem.slice/param/0": {
    "code_sample": "",
    "documentation": "The source to slice from."
  },
  "@roblox/globaltype/FFIPointer.readf32": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/FFIPointer.readf32/return/0"
    ],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/FFIPointer.readf32/param/0"
      },
      {
        "name": "offset",
        "documentation": "@roblox/globaltype/FFIPointer.readf32/param/1"
      }
    ]
  },
  "@roblox/globaltype/_zune_serde.json5.decode/param/1": {
    "code_sample": "",
    "documentation": "The configuration for the decoding."
  },
  "@roblox/globaltype/_zune_crypto_random.nextNumber": {
    "code_sample": "",
    "documentation": "Generates a random number (f64).\n\nIf no arguments are provided, the function will generate a number between 0 and 1."
  },
  "@roblox/globaltype/_zune_process.arch": {
    "code_sample": "",
    "documentation": "The cpu architecture that the process is running on.\nThis property can have more possible values (Usually from a custom zune build for another architecture).\nCurrently this is based on the official releases of zune."
  },
  "@roblox/globaltype/NetworkSocket.sendMsg/param/4": {
    "code_sample": "",
    "documentation": "The offset to start sending from."
  },
  "@roblox/globaltype/SQLite3Statement": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "finalize": "@roblox/globaltype/SQLite3Statement.finalize",
      "all": "@roblox/globaltype/SQLite3Statement.all",
      "run": "@roblox/globaltype/SQLite3Statement.run",
      "get": "@roblox/globaltype/SQLite3Statement.get"
    }
  },
  "@roblox/globaltype/_zune_random.Sfc64.new": {
    "code_sample": "",
    "documentation": "\n\n**Throws**\n- Memory Error\n",
    "returns": [
      "@roblox/globaltype/_zune_random.Sfc64.new/return/0"
    ],
    "params": [
      {
        "name": "seed",
        "documentation": "@roblox/globaltype/_zune_random.Sfc64.new/param/0"
      }
    ]
  },
  "@roblox/globaltype/_zune_process.run/param/1": {
    "code_sample": "",
    "documentation": "The arguments to pass to the executable."
  },
  "@roblox/globaltype/FileOpenOptions": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "mode": "@roblox/globaltype/FileOpenOptions.mode"
    }
  },
  "@roblox/globaltype/LuauLoadOptions.env": {
    "code_sample": "",
    "documentation": "The environment to use for the loaded function."
  },
  "@roblox/globaltype/_zune_thread.isThread": {
    "code_sample": "",
    "documentation": "The current context of running program."
  },
  "@roblox/globaltype/_zune_crypto_tls": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "bundleFromSystem": "@roblox/globaltype/_zune_crypto_tls.bundleFromSystem",
      "setupServer": "@roblox/globaltype/_zune_crypto_tls.setupServer",
      "setupClient": "@roblox/globaltype/_zune_crypto_tls.setupClient",
      "keyPairFromFile": "@roblox/globaltype/_zune_crypto_tls.keyPairFromFile",
      "bundleFromFile": "@roblox/globaltype/_zune_crypto_tls.bundleFromFile"
    }
  },
  "@roblox/globaltype/FFIFunctionDefintion.args": {
    "code_sample": "",
    "documentation": "The argument types of the function."
  },
  "@roblox/globaltype/_zune_process.run": {
    "code_sample": "",
    "documentation": "Runs a new process, and yields for the result.\n\n**Parameters**\n- `exec`: The executable to run.\n- `args`: The arguments to pass to the executable.\n- `opts`: The options for the process.\n\n\n**Throws**\n- Process Error\n",
    "returns": [
      "@roblox/globaltype/_zune_process.run/return/0"
    ],
    "params": [
      {
        "name": "exec",
        "documentation": "@roblox/globaltype/_zune_process.run/param/0"
      },
      {
        "name": "args",
        "documentation": "@roblox/globaltype/_zune_process.run/param/1"
      },
      {
        "name": "opts",
        "documentation": "@roblox/globaltype/_zune_process.run/param/2"
      }
    ]
  },
  "@roblox/globaltype/_zune_fs_path": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "dirname": "@roblox/globaltype/_zune_fs_path.dirname",
      "extension": "@roblox/globaltype/_zune_fs_path.extension",
      "isAbsolute": "@roblox/globaltype/_zune_fs_path.isAbsolute",
      "relative": "@roblox/globaltype/_zune_fs_path.relative",
      "join": "@roblox/globaltype/_zune_fs_path.join",
      "stem": "@roblox/globaltype/_zune_fs_path.stem",
      "basename": "@roblox/globaltype/_zune_fs_path.basename",
      "globMatch": "@roblox/globaltype/_zune_fs_path.globMatch",
      "resolve": "@roblox/globaltype/_zune_fs_path.resolve"
    }
  },
  "@roblox/globaltype/SQLite3Statement.run": {
    "code_sample": "",
    "documentation": "\n\n**Parameters**\n- `args`: The arguments to bind to the statement.\n\n\n**Throws**\n- SQLite3 Error\n- Memory Error\n",
    "returns": [
      "@roblox/globaltype/SQLite3Statement.run/return/0"
    ],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/SQLite3Statement.run/param/0"
      },
      {
        "name": "args",
        "documentation": "@roblox/globaltype/SQLite3Statement.run/param/1"
      }
    ]
  },
  "@roblox/globaltype/_zune_luau": {
    "code_sample": "",
    "documentation": "A library to parse, compile and run luau code.",
    "keys": {
      "coverage": "@roblox/globaltype/_zune_luau.coverage",
      "parse": "@roblox/globaltype/_zune_luau.parse",
      "garbagecollect": "@roblox/globaltype/_zune_luau.garbagecollect",
      "compile": "@roblox/globaltype/_zune_luau.compile",
      "load": "@roblox/globaltype/_zune_luau.load",
      "parseExpr": "@roblox/globaltype/_zune_luau.parseExpr"
    },
    "learn_more_link": "https://zune.sh/docs/v0.5.0/api/luau"
  },
  "@roblox/globaltype/_zune_mem.indexOfScalarPos/param/0": {
    "code_sample": "",
    "documentation": "The source to search in."
  },
  "@roblox/globaltype/_zune_mem.indexOfDiff": {
    "code_sample": "",
    "documentation": "Find the index of the first difference between two buffers.\n\n**Parameters**\n- `src`: The source to search in.\n",
    "returns": [
      "@roblox/globaltype/_zune_mem.indexOfDiff/return/0"
    ],
    "params": [
      {
        "name": "src",
        "documentation": "@roblox/globaltype/_zune_mem.indexOfDiff/param/0"
      },
      {
        "name": "needle",
        "documentation": "@roblox/globaltype/_zune_mem.indexOfDiff/param/1"
      }
    ]
  },
  "@roblox/globaltype/_zune_net_http.serve": {
    "code_sample": "",
    "documentation": "Starts a new HTTP server.\n\n**Parameters**\n- `opts`: The options for the server.\n\n\n**Throws**\n- IO Error\n- Network Error\n",
    "returns": [
      "@roblox/globaltype/_zune_net_http.serve/return/0"
    ],
    "params": [
      {
        "name": "opts",
        "documentation": "@roblox/globaltype/_zune_net_http.serve/param/0"
      }
    ]
  },
  "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis256X4_256.encrypt": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis256X4_256.encrypt/return/0"
    ],
    "params": [
      {
        "name": "data",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis256X4_256.encrypt/param/0"
      },
      {
        "name": "key",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis256X4_256.encrypt/param/1"
      },
      {
        "name": "nonce",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis256X4_256.encrypt/param/2"
      },
      {
        "name": "ad",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis256X4_256.encrypt/param/3"
      }
    ]
  },
  "@roblox/globaltype/FileHandle": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "getSize": "@roblox/globaltype/FileHandle.getSize",
      "readonly": "@roblox/globaltype/FileHandle.readonly",
      "write": "@roblox/globaltype/FileHandle.write",
      "close": "@roblox/globaltype/FileHandle.close",
      "seekTo": "@roblox/globaltype/FileHandle.seekTo",
      "writeSync": "@roblox/globaltype/FileHandle.writeSync",
      "unlock": "@roblox/globaltype/FileHandle.unlock",
      "lock": "@roblox/globaltype/FileHandle.lock",
      "seekBy": "@roblox/globaltype/FileHandle.seekBy",
      "read": "@roblox/globaltype/FileHandle.read",
      "sync": "@roblox/globaltype/FileHandle.sync",
      "getSeekPosition": "@roblox/globaltype/FileHandle.getSeekPosition",
      "appendSync": "@roblox/globaltype/FileHandle.appendSync",
      "seekFromEnd": "@roblox/globaltype/FileHandle.seekFromEnd",
      "append": "@roblox/globaltype/FileHandle.append",
      "readSync": "@roblox/globaltype/FileHandle.readSync"
    }
  },
  "@roblox/globaltype/HttpWebSocket.send": {
    "code_sample": "",
    "documentation": "Sends a message to the connected WebSocket.\n\n**Parameters**\n- `message`: The message to send.\n\n\n**Throws**\n- Memory Error\n- WebSocket Error\n",
    "returns": [],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/HttpWebSocket.send/param/0"
      },
      {
        "name": "message",
        "documentation": "@roblox/globaltype/HttpWebSocket.send/param/1"
      }
    ]
  },
  "@roblox/globaltype/_zune_io": {
    "code_sample": "",
    "documentation": "A library to use standard input/output in luau.",
    "keys": {
      "createFixedBufferStream": "@roblox/globaltype/_zune_io.createFixedBufferStream",
      "stderr": "@roblox/globaltype/_zune_io.stderr",
      "createBufferSink": "@roblox/globaltype/_zune_io.createBufferSink",
      "stdout": "@roblox/globaltype/_zune_io.stdout",
      "terminal": "@roblox/globaltype/_zune_io.terminal",
      "stdin": "@roblox/globaltype/_zune_io.stdin",
      "format": "@roblox/globaltype/_zune_io.format"
    },
    "learn_more_link": "https://zune.sh/docs/v0.5.0/api/io"
  },
  "@roblox/globaltype/_zune_random_Sfc64.new": {
    "code_sample": "",
    "documentation": "\n\n**Throws**\n- Memory Error\n",
    "returns": [
      "@roblox/globaltype/_zune_random_Sfc64.new/return/0"
    ],
    "params": [
      {
        "name": "seed",
        "documentation": "@roblox/globaltype/_zune_random_Sfc64.new/param/0"
      }
    ]
  },
  "@roblox/globaltype/FFIPointerType": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "newTag": "@roblox/globaltype/FFIPointerType.newTag",
      "tag": "@roblox/globaltype/FFIPointerType.tag"
    }
  },
  "@roblox/globaltype/DateTime.formatLocalTime": {
    "code_sample": "",
    "documentation": "\n\n**Throws**\n- DateTime Error\n- Memory Error\n",
    "returns": [
      "@roblox/globaltype/DateTime.formatLocalTime/return/0"
    ],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/DateTime.formatLocalTime/param/0"
      },
      {
        "name": "format",
        "documentation": "@roblox/globaltype/DateTime.formatLocalTime/param/1"
      }
    ]
  },
  "@roblox/globaltype/_zune_serde.toml.encode/param/0": {
    "code_sample": "",
    "documentation": "The table to encode.",
    "keys": []
  },
  "@roblox/globaltype/_zune_ffi.alloc/param/0": {
    "code_sample": "",
    "documentation": "The size to allocate."
  },
  "@roblox/globaltype/_zune_crypto_aead.chacha_poly.XChaCha8Poly1305.decrypt": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/_zune_crypto_aead.chacha_poly.XChaCha8Poly1305.decrypt/return/0"
    ],
    "params": [
      {
        "name": "cipher",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.chacha_poly.XChaCha8Poly1305.decrypt/param/0"
      },
      {
        "name": "tag",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.chacha_poly.XChaCha8Poly1305.decrypt/param/1"
      },
      {
        "name": "key",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.chacha_poly.XChaCha8Poly1305.decrypt/param/2"
      },
      {
        "name": "nonce",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.chacha_poly.XChaCha8Poly1305.decrypt/param/3"
      },
      {
        "name": "ad",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.chacha_poly.XChaCha8Poly1305.decrypt/param/4"
      }
    ]
  },
  "@roblox/globaltype/FFICompileOptions.files": {
    "code_sample": "",
    "documentation": "The files to include in the compilation."
  },
  "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis256X4.encrypt": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis256X4.encrypt/return/0"
    ],
    "params": [
      {
        "name": "data",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis256X4.encrypt/param/0"
      },
      {
        "name": "key",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis256X4.encrypt/param/1"
      },
      {
        "name": "nonce",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis256X4.encrypt/param/2"
      },
      {
        "name": "ad",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis256X4.encrypt/param/3"
      }
    ]
  },
  "@roblox/globaltype/_zune_mem.startsWith/param/0": {
    "code_sample": "",
    "documentation": "The slice to check."
  },
  "@roblox/globaltype/Regex": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "replaceAll": "@roblox/globaltype/Regex.replaceAll",
      "search": "@roblox/globaltype/Regex.search",
      "captures": "@roblox/globaltype/Regex.captures",
      "replace": "@roblox/globaltype/Regex.replace",
      "format": "@roblox/globaltype/Regex.format",
      "isMatch": "@roblox/globaltype/Regex.isMatch",
      "match": "@roblox/globaltype/Regex.match"
    }
  },
  "@roblox/globaltype/DateTime": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "timestamp_millis": "@roblox/globaltype/DateTime.timestamp_millis",
      "toIsoDate": "@roblox/globaltype/DateTime.toIsoDate",
      "formatUniversalTime": "@roblox/globaltype/DateTime.formatUniversalTime",
      "toLocalTime": "@roblox/globaltype/DateTime.toLocalTime",
      "toUniversalTime": "@roblox/globaltype/DateTime.toUniversalTime",
      "formatLocalTime": "@roblox/globaltype/DateTime.formatLocalTime",
      "timestamp": "@roblox/globaltype/DateTime.timestamp"
    }
  },
  "@roblox/globaltype/FFICompiled.getSymbol": {
    "code_sample": "",
    "documentation": "\n\n**Parameters**\n- `symbol`: The symbol to get.\n\n\n**Throws**\n- FFI Error\n- Memory Error\n",
    "returns": [
      "@roblox/globaltype/FFICompiled.getSymbol/return/0"
    ],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/FFICompiled.getSymbol/param/0"
      },
      {
        "name": "symbol",
        "documentation": "@roblox/globaltype/FFICompiled.getSymbol/param/1"
      }
    ]
  },
  "@roblox/globaltype/SerdeJsonDecodeConfig": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "preserve_null": "@roblox/globaltype/SerdeJsonDecodeConfig.preserve_null"
    }
  },
  "@roblox/globaltype/_zune_crypto_aead.chacha_poly.ChaCha8Poly1305": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "encrypt": "@roblox/globaltype/_zune_crypto_aead.chacha_poly.ChaCha8Poly1305.encrypt",
      "decrypt": "@roblox/globaltype/_zune_crypto_aead.chacha_poly.ChaCha8Poly1305.decrypt"
    }
  },
  "@roblox/globaltype/_zune_fs.path.globMatch/param/0": {
    "code_sample": "",
    "documentation": "The path to check."
  },
  "@roblox/globaltype/_zune_fs_path.dirname/param/0": {
    "code_sample": "",
    "documentation": "The path to get the directory name from."
  },
  "@roblox/globaltype/_zune_mem.copy/param/2": {
    "code_sample": "",
    "documentation": "The source to copy from."
  },
  "@roblox/globaltype/_zune_crypto.aead.aes_gcm.Aes256Gcm.decrypt": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/_zune_crypto.aead.aes_gcm.Aes256Gcm.decrypt/return/0"
    ],
    "params": [
      {
        "name": "cipher",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aes_gcm.Aes256Gcm.decrypt/param/0"
      },
      {
        "name": "tag",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aes_gcm.Aes256Gcm.decrypt/param/1"
      },
      {
        "name": "key",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aes_gcm.Aes256Gcm.decrypt/param/2"
      },
      {
        "name": "nonce",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aes_gcm.Aes256Gcm.decrypt/param/3"
      },
      {
        "name": "ad",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aes_gcm.Aes256Gcm.decrypt/param/4"
      }
    ]
  },
  "@roblox/globaltype/_zune_crypto.aead.chacha_poly.XChaCha8Poly1305.encrypt": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/_zune_crypto.aead.chacha_poly.XChaCha8Poly1305.encrypt/return/0"
    ],
    "params": [
      {
        "name": "data",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.chacha_poly.XChaCha8Poly1305.encrypt/param/0"
      },
      {
        "name": "key",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.chacha_poly.XChaCha8Poly1305.encrypt/param/1"
      },
      {
        "name": "nonce",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.chacha_poly.XChaCha8Poly1305.encrypt/param/2"
      },
      {
        "name": "ad",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.chacha_poly.XChaCha8Poly1305.encrypt/param/3"
      }
    ]
  },
  "@roblox/globaltype/_zune_mem.startsWith": {
    "code_sample": "",
    "documentation": "Checks if a slice starts with a given needle.\n\n**Parameters**\n- `slice`: The slice to check.\n- `needle`: The needle to check for.\n",
    "returns": [
      "@roblox/globaltype/_zune_mem.startsWith/return/0"
    ],
    "params": [
      {
        "name": "slice",
        "documentation": "@roblox/globaltype/_zune_mem.startsWith/param/0"
      },
      {
        "name": "needle",
        "documentation": "@roblox/globaltype/_zune_mem.startsWith/param/1"
      }
    ]
  },
  "@roblox/globaltype/_zune_task.spawn": {
    "code_sample": "",
    "documentation": "Runs function or thread immediately.\n\n**Parameters**\n- `f`: The function to run immediately.\n",
    "returns": [
      "@roblox/globaltype/_zune_task.spawn/return/0"
    ],
    "params": [
      {
        "name": "f",
        "documentation": "@roblox/globaltype/_zune_task.spawn/param/0"
      },
      {
        "name": "...",
        "documentation": "@roblox/globaltype/_zune_task.spawn/param/1"
      }
    ]
  },
  "@roblox/globaltype/FFIPointer.writeu8": {
    "code_sample": "",
    "documentation": "",
    "returns": [],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/FFIPointer.writeu8/param/0"
      },
      {
        "name": "offset",
        "documentation": "@roblox/globaltype/FFIPointer.writeu8/param/1"
      },
      {
        "name": "value",
        "documentation": "@roblox/globaltype/FFIPointer.writeu8/param/2"
      }
    ]
  },
  "@roblox/globaltype/_zune_net.createSocket/param/0": {
    "code_sample": "",
    "documentation": "The address family to use."
  },
  "@roblox/globaltype/_zune_crypto_aead.aegis": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "Aegis128L_256": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis128L_256",
      "Aegis256": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis256",
      "Aegis128X2_256": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis128X2_256",
      "Aegis128L": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis128L",
      "Aegis256X4": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis256X4",
      "Aegis128X4": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis128X4",
      "Aegis256_256": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis256_256",
      "Aegis256X2": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis256X2",
      "Aegis128X2": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis128X2",
      "Aegis256X4_256": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis256X4_256",
      "Aegis128X4_256": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis128X4_256",
      "Aegis256X2_256": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis256X2_256"
    }
  },
  "@roblox/globaltype/_zune_serde.base64.decode": {
    "code_sample": "",
    "documentation": "Decodes a Base64 string."
  },
  "@roblox/globaltype/HttpServerRequest": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "path": "@roblox/globaltype/HttpServerRequest.path",
      "method": "@roblox/globaltype/HttpServerRequest.method",
      "query": "@roblox/globaltype/HttpServerRequest.query",
      "body": "@roblox/globaltype/HttpServerRequest.body",
      "headers": "@roblox/globaltype/HttpServerRequest.headers"
    }
  },
  "@roblox/globaltype/_zune_process": {
    "code_sample": "",
    "documentation": "A library that interacts with the system process.",
    "keys": {
      "exit": "@roblox/globaltype/_zune_process.exit",
      "arch": "@roblox/globaltype/_zune_process.arch",
      "create": "@roblox/globaltype/_zune_process.create",
      "cwd": "@roblox/globaltype/_zune_process.cwd",
      "os": "@roblox/globaltype/_zune_process.os",
      "args": "@roblox/globaltype/_zune_process.args",
      "env": "@roblox/globaltype/_zune_process.env",
      "loadEnv": "@roblox/globaltype/_zune_process.loadEnv",
      "onSignal": "@roblox/globaltype/_zune_process.onSignal",
      "run": "@roblox/globaltype/_zune_process.run"
    },
    "learn_more_link": "https://zune.sh/docs/v0.5.0/api/process"
  },
  "@roblox/globaltype/_zune_net.http.request": {
    "code_sample": "",
    "documentation": "Makes a request to the specified host.\n\nOptions are optional, defaults to GET request."
  },
  "@roblox/globaltype/_zune_serde.yaml.decode/param/0": {
    "code_sample": "",
    "documentation": "The YAML string to decode."
  },
  "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis256X4_256.encrypt": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis256X4_256.encrypt/return/0"
    ],
    "params": [
      {
        "name": "data",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis256X4_256.encrypt/param/0"
      },
      {
        "name": "key",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis256X4_256.encrypt/param/1"
      },
      {
        "name": "nonce",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis256X4_256.encrypt/param/2"
      },
      {
        "name": "ad",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis256X4_256.encrypt/param/3"
      }
    ]
  },
  "@roblox/globaltype/_zune_mem.indexOf/param/1": {
    "code_sample": "",
    "documentation": "The needle to search for."
  },
  "@roblox/globaltype/IoWritable.writef32": {
    "code_sample": "",
    "documentation": "\n\n**Throws**\n- Writer Error\n",
    "returns": [],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/IoWritable.writef32/param/0"
      },
      {
        "name": "value",
        "documentation": "@roblox/globaltype/IoWritable.writef32/param/1"
      }
    ]
  },
  "@roblox/globaltype/_zune_testing._start": {
    "code_sample": "",
    "documentation": "[Internal]\n\nThe number of tests that have passed."
  },
  "@roblox/globaltype/NetworkSocket.bindIp": {
    "code_sample": "",
    "documentation": "Binds the socket to the specified address and port.\n\n**Parameters**\n- `address`: The address to bind to.\n- `port`: The port to bind to.\n\n\n**Throws**\n- Network Error\n",
    "returns": [],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/NetworkSocket.bindIp/param/0"
      },
      {
        "name": "address",
        "documentation": "@roblox/globaltype/NetworkSocket.bindIp/param/1"
      },
      {
        "name": "port",
        "documentation": "@roblox/globaltype/NetworkSocket.bindIp/param/2"
      }
    ]
  },
  "@roblox/globaltype/_zune_fs.readDir/param/0": {
    "code_sample": "",
    "documentation": "The path to the directory to read."
  },
  "@roblox/globaltype/_zune_serde.json.encode/param/1": {
    "code_sample": "",
    "documentation": "The configuration for the encoding."
  },
  "@roblox/globaltype/_zune_fs_path.join/param/0": {
    "code_sample": "",
    "documentation": "The paths to join. if no arguments are provided, the result will be `nil`."
  },
  "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis256_256.decrypt": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis256_256.decrypt/return/0"
    ],
    "params": [
      {
        "name": "cipher",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis256_256.decrypt/param/0"
      },
      {
        "name": "tag",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis256_256.decrypt/param/1"
      },
      {
        "name": "key",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis256_256.decrypt/param/2"
      },
      {
        "name": "nonce",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis256_256.decrypt/param/3"
      },
      {
        "name": "ad",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis256_256.decrypt/param/4"
      }
    ]
  },
  "@roblox/globaltype/_zune_crypto_tls.bundleFromFile": {
    "code_sample": "",
    "documentation": "\n\n**Parameters**\n- `file`: The file to load the bundle from.\n\n\n**Throws**\n- IO Error\n",
    "returns": [
      "@roblox/globaltype/_zune_crypto_tls.bundleFromFile/return/0"
    ],
    "params": [
      {
        "name": "file",
        "documentation": "@roblox/globaltype/_zune_crypto_tls.bundleFromFile/param/0"
      }
    ]
  },
  "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis128X4.decrypt": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis128X4.decrypt/return/0"
    ],
    "params": [
      {
        "name": "cipher",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis128X4.decrypt/param/0"
      },
      {
        "name": "tag",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis128X4.decrypt/param/1"
      },
      {
        "name": "key",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis128X4.decrypt/param/2"
      },
      {
        "name": "nonce",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis128X4.decrypt/param/3"
      },
      {
        "name": "ad",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis128X4.decrypt/param/4"
      }
    ]
  },
  "@roblox/globaltype/_zune_crypto.aead.chacha_poly.ChaCha8Poly1305": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "encrypt": "@roblox/globaltype/_zune_crypto.aead.chacha_poly.ChaCha8Poly1305.encrypt",
      "decrypt": "@roblox/globaltype/_zune_crypto.aead.chacha_poly.ChaCha8Poly1305.decrypt"
    }
  },
  "@roblox/globaltype/_zune_task.defer/param/0": {
    "code_sample": "",
    "documentation": "The function to defer."
  },
  "@roblox/globaltype/_zune_crypto.aead.aes_gcm.Aes128Gcm.encrypt": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/_zune_crypto.aead.aes_gcm.Aes128Gcm.encrypt/return/0"
    ],
    "params": [
      {
        "name": "data",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aes_gcm.Aes128Gcm.encrypt/param/0"
      },
      {
        "name": "key",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aes_gcm.Aes128Gcm.encrypt/param/1"
      },
      {
        "name": "nonce",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aes_gcm.Aes128Gcm.encrypt/param/2"
      },
      {
        "name": "ad",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aes_gcm.Aes128Gcm.encrypt/param/3"
      }
    ]
  },
  "@roblox/globaltype/_zune_fs.openFile": {
    "code_sample": "",
    "documentation": "Opens a file. If the file does not exists, the function will throw an error.\n\n**Parameters**\n- `path`: The path to the file to open.\n- `opts`: The open options.\n\n\n**Throws**\n- IO Error\n",
    "returns": [
      "@roblox/globaltype/_zune_fs.openFile/return/0"
    ],
    "params": [
      {
        "name": "path",
        "documentation": "@roblox/globaltype/_zune_fs.openFile/param/0"
      },
      {
        "name": "opts",
        "documentation": "@roblox/globaltype/_zune_fs.openFile/param/1"
      }
    ]
  },
  "@roblox/globaltype/_zune_task.spawn/param/1": {
    "code_sample": "",
    "documentation": "The arguments to pass to the function."
  },
  "@roblox/globaltype/FFIPointer.writeu16": {
    "code_sample": "",
    "documentation": "",
    "returns": [],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/FFIPointer.writeu16/param/0"
      },
      {
        "name": "offset",
        "documentation": "@roblox/globaltype/FFIPointer.writeu16/param/1"
      },
      {
        "name": "value",
        "documentation": "@roblox/globaltype/FFIPointer.writeu16/param/2"
      }
    ]
  },
  "@roblox/globaltype/_zune_mem.copy/param/0": {
    "code_sample": "",
    "documentation": "The destination to copy to."
  },
  "@roblox/globaltype/HttpWebSocketOptions.accept": {
    "code_sample": "",
    "documentation": "The function to call to accept the WebSocket connection."
  },
  "@roblox/globaltype/NetworkSocket.isOpen": {
    "code_sample": "",
    "documentation": "Returns if the socket is open.",
    "returns": [
      "@roblox/globaltype/NetworkSocket.isOpen/return/0"
    ],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/NetworkSocket.isOpen/param/0"
      }
    ]
  },
  "@roblox/globaltype/Regex.format": {
    "code_sample": "",
    "documentation": "Format a string.\n\n**Parameters**\n- `str`: The string to replace.\n\n\n**Throws**\n- Regex Error\n- Memory Error\n",
    "returns": [
      "@roblox/globaltype/Regex.format/return/0"
    ],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/Regex.format/param/0"
      },
      {
        "name": "str",
        "documentation": "@roblox/globaltype/Regex.format/param/1"
      },
      {
        "name": "format",
        "documentation": "@roblox/globaltype/Regex.format/param/2"
      }
    ]
  },
  "@roblox/globaltype/_zune_luau.load": {
    "code_sample": "",
    "documentation": "Loads `Luau` bytecode into a function.\n\n**Parameters**\n- `bytecode`: The bytecode to load.\n- `opts`: The options for loading the bytecode.\n\n\n**Throws**\n- Luau Error\n",
    "returns": [
      "@roblox/globaltype/_zune_luau.load/return/0"
    ],
    "params": [
      {
        "name": "bytecode",
        "documentation": "@roblox/globaltype/_zune_luau.load/param/0"
      },
      {
        "name": "opts",
        "documentation": "@roblox/globaltype/_zune_luau.load/param/1"
      }
    ]
  },
  "@roblox/globaltype/FileHandle.seekFromEnd": {
    "code_sample": "",
    "documentation": "Seeks the file from the end.\n\n**Parameters**\n- `amount`: The amount of bytes to seek from the end of the file.\n  - default: `0`\n\n\n**Throws**\n- IO Error\n",
    "returns": [],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/FileHandle.seekFromEnd/param/0"
      },
      {
        "name": "amount",
        "documentation": "@roblox/globaltype/FileHandle.seekFromEnd/param/1"
      }
    ]
  },
  "@roblox/globaltype/_zune_net": {
    "code_sample": "",
    "documentation": "A library to do networking in luau. Provides functions to create sockets, start an HTTP server, make HTTP requests, and handle WebSockets.",
    "keys": {
      "IPPROTO": "@roblox/globaltype/_zune_net.IPPROTO",
      "ADDRF": "@roblox/globaltype/_zune_net.ADDRF",
      "createSocket": "@roblox/globaltype/_zune_net.createSocket",
      "getAddressList": "@roblox/globaltype/_zune_net.getAddressList",
      "SOCKOPTLV": "@roblox/globaltype/_zune_net.SOCKOPTLV",
      "SOCKOPT": "@roblox/globaltype/_zune_net.SOCKOPT",
      "SOCKF": "@roblox/globaltype/_zune_net.SOCKF",
      "http": "@roblox/globaltype/_zune_net.http"
    },
    "learn_more_link": "https://zune.sh/docs/v0.5.0/api/net"
  },
  "@roblox/globaltype/FFIPointer.writei16": {
    "code_sample": "",
    "documentation": "",
    "returns": [],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/FFIPointer.writei16/param/0"
      },
      {
        "name": "offset",
        "documentation": "@roblox/globaltype/FFIPointer.writei16/param/1"
      },
      {
        "name": "value",
        "documentation": "@roblox/globaltype/FFIPointer.writei16/param/2"
      }
    ]
  },
  "@roblox/globaltype/_zune_mem.replaceScalar": {
    "code_sample": "",
    "documentation": "Replaces all occurrences of a scalar in the buffer with another scalar.\n- `[1, 2, 3, 2]` with (`2`, `4`) -> `[1, 4, 3, 4]`\n\n**Parameters**\n- `src`: The source to replace in.\n- `char`: The byte to replace.\n- `replacement`: The byte to replace with.\n",
    "returns": [],
    "params": [
      {
        "name": "src",
        "documentation": "@roblox/globaltype/_zune_mem.replaceScalar/param/0"
      },
      {
        "name": "char",
        "documentation": "@roblox/globaltype/_zune_mem.replaceScalar/param/1"
      },
      {
        "name": "replacement",
        "documentation": "@roblox/globaltype/_zune_mem.replaceScalar/param/2"
      }
    ]
  },
  "@roblox/globaltype/Location.begin": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "column": "@roblox/globaltype/Location.begin.column",
      "line": "@roblox/globaltype/Location.begin.line"
    }
  },
  "@roblox/globaltype/FileHandle.seekTo": {
    "code_sample": "",
    "documentation": "Seeks the file to a specific position.\n\n**Parameters**\n- `amount`: The amount of bytes to seek from the beginning of the file.\n  - default: `0`\n\n\n**Throws**\n- IO Error\n",
    "returns": [],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/FileHandle.seekTo/param/0"
      },
      {
        "name": "amount",
        "documentation": "@roblox/globaltype/FileHandle.seekTo/param/1"
      }
    ]
  },
  "@roblox/globaltype/_zune_crypto_aead.chacha_poly.ChaCha20Poly1305": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "encrypt": "@roblox/globaltype/_zune_crypto_aead.chacha_poly.ChaCha20Poly1305.encrypt",
      "decrypt": "@roblox/globaltype/_zune_crypto_aead.chacha_poly.ChaCha20Poly1305.decrypt"
    }
  },
  "@roblox/globaltype/_zune_process_env": {
    "code_sample": "",
    "documentation": "The process enviroment table.\n\n(Loaded from top to bottom)\n- Includes `.env` file in the current working directory.\n- Includes `.env.production` file in the current working directory. When `LUAU_ENV` is set to `PRODUCTION`.\n- Includes `.env.development` file in the current working directory. When `LUAU_ENV` is set to `DEVELOPMENT`.\n- Includes `.env.test` file in the current working directory. When `LUAU_ENV` is set to `TEST`.\n- Includes `.env.local` file in the current working directory.",
    "keys": []
  },
  "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis128X4.encrypt": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis128X4.encrypt/return/0"
    ],
    "params": [
      {
        "name": "data",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis128X4.encrypt/param/0"
      },
      {
        "name": "key",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis128X4.encrypt/param/1"
      },
      {
        "name": "nonce",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis128X4.encrypt/param/2"
      },
      {
        "name": "ad",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis128X4.encrypt/param/3"
      }
    ]
  },
  "@roblox/globaltype/_zune_mem.set/param/0": {
    "code_sample": "",
    "documentation": "The source to write in."
  },
  "@roblox/globaltype/_zune_serde_json.indents": {
    "code_sample": "",
    "documentation": "Indentation levels for JSON.",
    "keys": {
      "tabs": "@roblox/globaltype/_zune_serde_json.indents.tabs",
      "four_spaces": "@roblox/globaltype/_zune_serde_json.indents.four_spaces",
      "two_spaces": "@roblox/globaltype/_zune_serde_json.indents.two_spaces",
      "none": "@roblox/globaltype/_zune_serde_json.indents.none"
    }
  },
  "@roblox/globaltype/LuauCompileOptions.debug_level": {
    "code_sample": "",
    "documentation": "The debug level for the compilation."
  },
  "@roblox/globaltype/_zune_mem.indexOfAnyPos": {
    "code_sample": "",
    "documentation": "Find the index of the first byte that is in the given `needle`, starting from the given `offset`.\n\n**Parameters**\n- `src`: The source to search in.\n- `offset`: The offset to start searching from.\n- `needle`: The bytes to search for.\n",
    "returns": [
      "@roblox/globaltype/_zune_mem.indexOfAnyPos/return/0"
    ],
    "params": [
      {
        "name": "src",
        "documentation": "@roblox/globaltype/_zune_mem.indexOfAnyPos/param/0"
      },
      {
        "name": "offset",
        "documentation": "@roblox/globaltype/_zune_mem.indexOfAnyPos/param/1"
      },
      {
        "name": "needle",
        "documentation": "@roblox/globaltype/_zune_mem.indexOfAnyPos/param/2"
      }
    ]
  },
  "@roblox/globaltype/_zune_task.defer": {
    "code_sample": "",
    "documentation": "Runs function or thread on end of scheduler frame.\n\n**Parameters**\n- `f`: The function to defer.\n",
    "returns": [
      "@roblox/globaltype/_zune_task.defer/return/0"
    ],
    "params": [
      {
        "name": "f",
        "documentation": "@roblox/globaltype/_zune_task.defer/param/0"
      },
      {
        "name": "...",
        "documentation": "@roblox/globaltype/_zune_task.defer/param/1"
      }
    ]
  },
  "@roblox/globaltype/FileHandle.readonly": {
    "code_sample": "",
    "documentation": "Get readonly state or set the file to readonly."
  },
  "@roblox/globaltype/_zune_fs.embeddedFiles": {
    "code_sample": "",
    "documentation": "Will return the list of all embedded files, the table will always be empty when called from an unbundled context.\n\n**Throws**\n- Memory Error\n",
    "returns": [
      "@roblox/globaltype/_zune_fs.embeddedFiles/return/0"
    ],
    "params": []
  },
  "@roblox/globaltype/HttpResponse.headers": {
    "code_sample": "",
    "documentation": "",
    "keys": []
  },
  "@roblox/globaltype/FFIPointer.readu32": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/FFIPointer.readu32/return/0"
    ],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/FFIPointer.readu32/param/0"
      },
      {
        "name": "offset",
        "documentation": "@roblox/globaltype/FFIPointer.readu32/param/1"
      }
    ]
  },
  "@roblox/globaltype/HttpRequestOptions": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "allow_redirects": "@roblox/globaltype/HttpRequestOptions.allow_redirects",
      "body": "@roblox/globaltype/HttpRequestOptions.body",
      "method": "@roblox/globaltype/HttpRequestOptions.method",
      "headers": "@roblox/globaltype/HttpRequestOptions.headers"
    }
  },
  "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis256X4.decrypt": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis256X4.decrypt/return/0"
    ],
    "params": [
      {
        "name": "cipher",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis256X4.decrypt/param/0"
      },
      {
        "name": "tag",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis256X4.decrypt/param/1"
      },
      {
        "name": "key",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis256X4.decrypt/param/2"
      },
      {
        "name": "nonce",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis256X4.decrypt/param/3"
      },
      {
        "name": "ad",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis256X4.decrypt/param/4"
      }
    ]
  },
  "@roblox/globaltype/_zune_ffi": {
    "code_sample": "",
    "documentation": "A library to interact with foreign functions and libraries.",
    "keys": {
      "dlopen": "@roblox/globaltype/_zune_ffi.dlopen",
      "closure": "@roblox/globaltype/_zune_ffi.closure",
      "c": "@roblox/globaltype/_zune_ffi.c",
      "free": "@roblox/globaltype/_zune_ffi.free",
      "fn": "@roblox/globaltype/_zune_ffi.fn",
      "ptr": "@roblox/globaltype/_zune_ffi.ptr",
      "tagName": "@roblox/globaltype/_zune_ffi.tagName",
      "getLuaState": "@roblox/globaltype/_zune_ffi.getLuaState",
      "dupe": "@roblox/globaltype/_zune_ffi.dupe",
      "ptrFromAddress": "@roblox/globaltype/_zune_ffi.ptrFromAddress",
      "prefix": "@roblox/globaltype/_zune_ffi.prefix",
      "suffix": "@roblox/globaltype/_zune_ffi.suffix",
      "alloc": "@roblox/globaltype/_zune_ffi.alloc",
      "struct": "@roblox/globaltype/_zune_ffi.struct",
      "null": "@roblox/globaltype/_zune_ffi.null",
      "types": "@roblox/globaltype/_zune_ffi.types"
    },
    "learn_more_link": "https://zune.sh/docs/v0.5.0/api/ffi"
  },
  "@roblox/globaltype/_zune_crypto_aead.aes_ocb.Aes256Ocb": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "encrypt": "@roblox/globaltype/_zune_crypto_aead.aes_ocb.Aes256Ocb.encrypt",
      "decrypt": "@roblox/globaltype/_zune_crypto_aead.aes_ocb.Aes256Ocb.decrypt"
    }
  },
  "@roblox/globaltype/_zune_crypto.aead.chacha_poly.XChaCha8Poly1305.decrypt": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/_zune_crypto.aead.chacha_poly.XChaCha8Poly1305.decrypt/return/0"
    ],
    "params": [
      {
        "name": "cipher",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.chacha_poly.XChaCha8Poly1305.decrypt/param/0"
      },
      {
        "name": "tag",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.chacha_poly.XChaCha8Poly1305.decrypt/param/1"
      },
      {
        "name": "key",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.chacha_poly.XChaCha8Poly1305.decrypt/param/2"
      },
      {
        "name": "nonce",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.chacha_poly.XChaCha8Poly1305.decrypt/param/3"
      },
      {
        "name": "ad",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.chacha_poly.XChaCha8Poly1305.decrypt/param/4"
      }
    ]
  },
  "@roblox/globaltype/_zune_serde.base64.encode": {
    "code_sample": "",
    "documentation": "Encodes a string to Base64."
  },
  "@roblox/globaltype/FileOpenOptions.mode": {
    "code_sample": "",
    "documentation": "If provided, the file will be opened in the specified mode."
  },
  "@roblox/globaltype/_zune_serde.zstd": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "decompress": "@roblox/globaltype/_zune_serde.zstd.decompress",
      "compress": "@roblox/globaltype/_zune_serde.zstd.compress"
    }
  },
  "@roblox/globaltype/_zune_random.Xoshiro256.new": {
    "code_sample": "",
    "documentation": "\n\n**Throws**\n- Memory Error\n",
    "returns": [
      "@roblox/globaltype/_zune_random.Xoshiro256.new/return/0"
    ],
    "params": [
      {
        "name": "seed",
        "documentation": "@roblox/globaltype/_zune_random.Xoshiro256.new/param/0"
      }
    ]
  },
  "@roblox/globaltype/_zune_crypto.password.hash": {
    "code_sample": "",
    "documentation": "\n\n**Parameters**\n- `password`: The password to hash.\n- `opts`: The options for the password hashing.\n\n\n**Throws**\n- Crypto Error\n- Memory Error\n",
    "returns": [
      "@roblox/globaltype/_zune_crypto.password.hash/return/0"
    ],
    "params": [
      {
        "name": "password",
        "documentation": "@roblox/globaltype/_zune_crypto.password.hash/param/0"
      },
      {
        "name": "opts",
        "documentation": "@roblox/globaltype/_zune_crypto.password.hash/param/1"
      }
    ]
  },
  "@roblox/globaltype/CryptoTlsServerConfig.auth": {
    "code_sample": "",
    "documentation": "The certificate and key pair to use for the server."
  },
  "@roblox/globaltype/_zune_serde_base64.decode": {
    "code_sample": "",
    "documentation": "Decodes a Base64 string."
  },
  "@roblox/globaltype/_zune_crypto_aead.chacha_poly": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "XChaCha12Poly1305": "@roblox/globaltype/_zune_crypto_aead.chacha_poly.XChaCha12Poly1305",
      "XChaCha20Poly1305": "@roblox/globaltype/_zune_crypto_aead.chacha_poly.XChaCha20Poly1305",
      "ChaCha12Poly1305": "@roblox/globaltype/_zune_crypto_aead.chacha_poly.ChaCha12Poly1305",
      "XChaCha8Poly1305": "@roblox/globaltype/_zune_crypto_aead.chacha_poly.XChaCha8Poly1305",
      "ChaCha20Poly1305": "@roblox/globaltype/_zune_crypto_aead.chacha_poly.ChaCha20Poly1305",
      "ChaCha8Poly1305": "@roblox/globaltype/_zune_crypto_aead.chacha_poly.ChaCha8Poly1305"
    }
  },
  "@roblox/globaltype/_zune_serde_zlib": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "decompress": "@roblox/globaltype/_zune_serde_zlib.decompress",
      "compress": "@roblox/globaltype/_zune_serde_zlib.compress"
    }
  },
  "@roblox/globaltype/_zune_random_RomuTrio.new": {
    "code_sample": "",
    "documentation": "\n\n**Throws**\n- Memory Error\n",
    "returns": [
      "@roblox/globaltype/_zune_random_RomuTrio.new/return/0"
    ],
    "params": [
      {
        "name": "seed",
        "documentation": "@roblox/globaltype/_zune_random_RomuTrio.new/param/0"
      }
    ]
  },
  "@roblox/globaltype/_zune_mem.indexOfPos": {
    "code_sample": "",
    "documentation": "Find the index of a needle in the buffer, starting from the given offset.\n\n**Parameters**\n- `src`: The source to search in.\n- `offset`: The offset to start searching from.\n- `needle`: The needle to search for.\n",
    "returns": [
      "@roblox/globaltype/_zune_mem.indexOfPos/return/0"
    ],
    "params": [
      {
        "name": "src",
        "documentation": "@roblox/globaltype/_zune_mem.indexOfPos/param/0"
      },
      {
        "name": "offset",
        "documentation": "@roblox/globaltype/_zune_mem.indexOfPos/param/1"
      },
      {
        "name": "needle",
        "documentation": "@roblox/globaltype/_zune_mem.indexOfPos/param/2"
      }
    ]
  },
  "@roblox/globaltype/FFIPointer.readptr": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/FFIPointer.readptr/return/0"
    ],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/FFIPointer.readptr/param/0"
      },
      {
        "name": "offset",
        "documentation": "@roblox/globaltype/FFIPointer.readptr/param/1"
      }
    ]
  },
  "@roblox/globaltype/_zune_net.getAddressList/param/0": {
    "code_sample": "",
    "documentation": "The name to resolve."
  },
  "@roblox/globaltype/NetworkSocket.close": {
    "code_sample": "",
    "documentation": "Closes the socket.\n\n**Throws**\n- IO Error\n- Network Error\n",
    "returns": [],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/NetworkSocket.close/param/0"
      }
    ]
  },
  "@roblox/globaltype/_zune_random.Xoshiro256": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "new": "@roblox/globaltype/_zune_random.Xoshiro256.new"
    }
  },
  "@roblox/globaltype/_zune_crypto_tls.setupClient/param/0": {
    "code_sample": "",
    "documentation": "The socket to setup the client on."
  },
  "@roblox/globaltype/_zune_serde_yaml": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "encode": "@roblox/globaltype/_zune_serde_yaml.encode",
      "decode": "@roblox/globaltype/_zune_serde_yaml.decode"
    }
  },
  "@roblox/globaltype/_zune_mem.indexOfPos/param/0": {
    "code_sample": "",
    "documentation": "The source to search in."
  },
  "@roblox/globaltype/FFIPointer.readf64": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/FFIPointer.readf64/return/0"
    ],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/FFIPointer.readf64/param/0"
      },
      {
        "name": "offset",
        "documentation": "@roblox/globaltype/FFIPointer.readf64/param/1"
      }
    ]
  },
  "@roblox/globaltype/IoReadable.readi32": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/IoReadable.readi32/return/0"
    ],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/IoReadable.readi32/param/0"
      }
    ]
  },
  "@roblox/globaltype/DateTime.formatUniversalTime": {
    "code_sample": "",
    "documentation": "\n\n**Throws**\n- DateTime Error\n- Memory Error\n",
    "returns": [
      "@roblox/globaltype/DateTime.formatUniversalTime/return/0"
    ],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/DateTime.formatUniversalTime/param/0"
      },
      {
        "name": "format",
        "documentation": "@roblox/globaltype/DateTime.formatUniversalTime/param/1"
      }
    ]
  },
  "@roblox/globaltype/_zune_ffi.struct/param/0": {
    "code_sample": "",
    "documentation": "The fields of the structure."
  },
  "@roblox/globaltype/_zune_datetime.fromUniversalTime": {
    "code_sample": "",
    "documentation": "\n\n**Throws**\n- DateTime Error\n- Memory Error\n",
    "returns": [
      "@roblox/globaltype/_zune_datetime.fromUniversalTime/return/0"
    ],
    "params": [
      {
        "name": "year",
        "documentation": "@roblox/globaltype/_zune_datetime.fromUniversalTime/param/0"
      },
      {
        "name": "month",
        "documentation": "@roblox/globaltype/_zune_datetime.fromUniversalTime/param/1"
      },
      {
        "name": "day",
        "documentation": "@roblox/globaltype/_zune_datetime.fromUniversalTime/param/2"
      },
      {
        "name": "hour",
        "documentation": "@roblox/globaltype/_zune_datetime.fromUniversalTime/param/3"
      },
      {
        "name": "minute",
        "documentation": "@roblox/globaltype/_zune_datetime.fromUniversalTime/param/4"
      },
      {
        "name": "second",
        "documentation": "@roblox/globaltype/_zune_datetime.fromUniversalTime/param/5"
      },
      {
        "name": "millisecond",
        "documentation": "@roblox/globaltype/_zune_datetime.fromUniversalTime/param/6"
      }
    ]
  },
  "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis256X2": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "encrypt": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis256X2.encrypt",
      "decrypt": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis256X2.decrypt"
    }
  },
  "@roblox/globaltype/_zune_net.SOCKOPT": {
    "code_sample": "",
    "documentation": "Table of socket options.",
    "keys": {
      "ATTACH_FILTER": "@roblox/globaltype/_zune_net.SOCKOPT.ATTACH_FILTER",
      "CNX_ADVICE": "@roblox/globaltype/_zune_net.SOCKOPT.CNX_ADVICE",
      "PEERCRED": "@roblox/globaltype/_zune_net.SOCKOPT.PEERCRED",
      "LINGER": "@roblox/globaltype/_zune_net.SOCKOPT.LINGER",
      "DEBUG": "@roblox/globaltype/_zune_net.SOCKOPT.DEBUG",
      "RXQ_OVFL": "@roblox/globaltype/_zune_net.SOCKOPT.RXQ_OVFL",
      "SNDBUF": "@roblox/globaltype/_zune_net.SOCKOPT.SNDBUF",
      "DONTROUTE": "@roblox/globaltype/_zune_net.SOCKOPT.DONTROUTE",
      "ZEROCOPY": "@roblox/globaltype/_zune_net.SOCKOPT.ZEROCOPY",
      "PASSCRED": "@roblox/globaltype/_zune_net.SOCKOPT.PASSCRED",
      "DETACH_REUSEPORT_BPF": "@roblox/globaltype/_zune_net.SOCKOPT.DETACH_REUSEPORT_BPF",
      "ATTACH_REUSEPORT_EBPF": "@roblox/globaltype/_zune_net.SOCKOPT.ATTACH_REUSEPORT_EBPF",
      "TIMESTAMPING_NEW": "@roblox/globaltype/_zune_net.SOCKOPT.TIMESTAMPING_NEW",
      "COOKIE": "@roblox/globaltype/_zune_net.SOCKOPT.COOKIE",
      "SNDBUFFORCE": "@roblox/globaltype/_zune_net.SOCKOPT.SNDBUFFORCE",
      "BINDTOIFINDEX": "@roblox/globaltype/_zune_net.SOCKOPT.BINDTOIFINDEX",
      "LOCK_FILTER": "@roblox/globaltype/_zune_net.SOCKOPT.LOCK_FILTER",
      "SNDTIMEO": "@roblox/globaltype/_zune_net.SOCKOPT.SNDTIMEO",
      "BINDTODEVICE": "@roblox/globaltype/_zune_net.SOCKOPT.BINDTODEVICE",
      "OOBINLINE": "@roblox/globaltype/_zune_net.SOCKOPT.OOBINLINE",
      "BPF_EXTENSIONS": "@roblox/globaltype/_zune_net.SOCKOPT.BPF_EXTENSIONS",
      "TIMESTAMP_NEW": "@roblox/globaltype/_zune_net.SOCKOPT.TIMESTAMP_NEW",
      "NO_CHECK": "@roblox/globaltype/_zune_net.SOCKOPT.NO_CHECK",
      "WIFI_STATUS": "@roblox/globaltype/_zune_net.SOCKOPT.WIFI_STATUS",
      "PEERGROUPS": "@roblox/globaltype/_zune_net.SOCKOPT.PEERGROUPS",
      "TYPE": "@roblox/globaltype/_zune_net.SOCKOPT.TYPE",
      "NOFCS": "@roblox/globaltype/_zune_net.SOCKOPT.NOFCS",
      "DOMAIN": "@roblox/globaltype/_zune_net.SOCKOPT.DOMAIN",
      "TIMESTAMPNS_NEW": "@roblox/globaltype/_zune_net.SOCKOPT.TIMESTAMPNS_NEW",
      "SNDLOWAT": "@roblox/globaltype/_zune_net.SOCKOPT.SNDLOWAT",
      "KEEPALIVE": "@roblox/globaltype/_zune_net.SOCKOPT.KEEPALIVE",
      "PEEK_OFF": "@roblox/globaltype/_zune_net.SOCKOPT.PEEK_OFF",
      "PEERSEC": "@roblox/globaltype/_zune_net.SOCKOPT.PEERSEC",
      "PEERNAME": "@roblox/globaltype/_zune_net.SOCKOPT.PEERNAME",
      "RCVTIMEO_NEW": "@roblox/globaltype/_zune_net.SOCKOPT.RCVTIMEO_NEW",
      "SECURITY_ENCRYPTION_NETWORK": "@roblox/globaltype/_zune_net.SOCKOPT.SECURITY_ENCRYPTION_NETWORK",
      "INCOMING_NAPI_ID": "@roblox/globaltype/_zune_net.SOCKOPT.INCOMING_NAPI_ID",
      "TIMESTAMPING_OLD": "@roblox/globaltype/_zune_net.SOCKOPT.TIMESTAMPING_OLD",
      "RCVBUFFORCE": "@roblox/globaltype/_zune_net.SOCKOPT.RCVBUFFORCE",
      "REUSEADDR": "@roblox/globaltype/_zune_net.SOCKOPT.REUSEADDR",
      "MAX_PACING_RATE": "@roblox/globaltype/_zune_net.SOCKOPT.MAX_PACING_RATE",
      "RCVTIMEO": "@roblox/globaltype/_zune_net.SOCKOPT.RCVTIMEO",
      "ACCEPTCONN": "@roblox/globaltype/_zune_net.SOCKOPT.ACCEPTCONN",
      "BUSY_POLL": "@roblox/globaltype/_zune_net.SOCKOPT.BUSY_POLL",
      "PROTOCOL": "@roblox/globaltype/_zune_net.SOCKOPT.PROTOCOL",
      "SECURITY_AUTHENTICATION": "@roblox/globaltype/_zune_net.SOCKOPT.SECURITY_AUTHENTICATION",
      "BROADCAST": "@roblox/globaltype/_zune_net.SOCKOPT.BROADCAST",
      "INCOMING_CPU": "@roblox/globaltype/_zune_net.SOCKOPT.INCOMING_CPU",
      "DETACH_FILTER": "@roblox/globaltype/_zune_net.SOCKOPT.DETACH_FILTER",
      "RCVLOWAT": "@roblox/globaltype/_zune_net.SOCKOPT.RCVLOWAT",
      "SECURITY_ENCRYPTION_TRANSPORT": "@roblox/globaltype/_zune_net.SOCKOPT.SECURITY_ENCRYPTION_TRANSPORT",
      "GET_FILTER": "@roblox/globaltype/_zune_net.SOCKOPT.GET_FILTER",
      "TIMESTAMP_OLD": "@roblox/globaltype/_zune_net.SOCKOPT.TIMESTAMP_OLD",
      "TXTIME": "@roblox/globaltype/_zune_net.SOCKOPT.TXTIME",
      "SELECT_ERR_QUEUE": "@roblox/globaltype/_zune_net.SOCKOPT.SELECT_ERR_QUEUE",
      "DETACH_BPF": "@roblox/globaltype/_zune_net.SOCKOPT.DETACH_BPF",
      "SNDTIMEO_NEW": "@roblox/globaltype/_zune_net.SOCKOPT.SNDTIMEO_NEW",
      "PASSSEC": "@roblox/globaltype/_zune_net.SOCKOPT.PASSSEC",
      "RCVBUF": "@roblox/globaltype/_zune_net.SOCKOPT.RCVBUF",
      "TIMESTAMPNS_OLD": "@roblox/globaltype/_zune_net.SOCKOPT.TIMESTAMPNS_OLD",
      "REUSEPORT": "@roblox/globaltype/_zune_net.SOCKOPT.REUSEPORT",
      "ERROR": "@roblox/globaltype/_zune_net.SOCKOPT.ERROR",
      "ATTACH_REUSEPORT_CBPF": "@roblox/globaltype/_zune_net.SOCKOPT.ATTACH_REUSEPORT_CBPF",
      "MARK": "@roblox/globaltype/_zune_net.SOCKOPT.MARK",
      "MEMINFO": "@roblox/globaltype/_zune_net.SOCKOPT.MEMINFO",
      "ATTACH_BPF": "@roblox/globaltype/_zune_net.SOCKOPT.ATTACH_BPF",
      "PRIORITY": "@roblox/globaltype/_zune_net.SOCKOPT.PRIORITY",
      "BSDCOMPAT": "@roblox/globaltype/_zune_net.SOCKOPT.BSDCOMPAT"
    }
  },
  "@roblox/globaltype/_zune_testing._failed": {
    "code_sample": "",
    "documentation": "[Internal]\n\nThe number of tests that have failed."
  },
  "@roblox/globaltype/_zune_crypto.aead.chacha_poly.XChaCha20Poly1305.encrypt": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/_zune_crypto.aead.chacha_poly.XChaCha20Poly1305.encrypt/return/0"
    ],
    "params": [
      {
        "name": "data",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.chacha_poly.XChaCha20Poly1305.encrypt/param/0"
      },
      {
        "name": "key",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.chacha_poly.XChaCha20Poly1305.encrypt/param/1"
      },
      {
        "name": "nonce",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.chacha_poly.XChaCha20Poly1305.encrypt/param/2"
      },
      {
        "name": "ad",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.chacha_poly.XChaCha20Poly1305.encrypt/param/3"
      }
    ]
  },
  "@roblox/globaltype/_zune_serde_yaml.encode": {
    "code_sample": "",
    "documentation": "Encodes a value to YAML.\n\n**Parameters**\n- `object`: The value to encode.\n\n\n**Throws**\n- Memory Error\n",
    "returns": [
      "@roblox/globaltype/_zune_serde_yaml.encode/return/0"
    ],
    "params": [
      {
        "name": "object",
        "documentation": "@roblox/globaltype/_zune_serde_yaml.encode/param/0"
      }
    ]
  },
  "@roblox/globaltype/_zune_mem.min": {
    "code_sample": "",
    "documentation": "Finds the minimum value in the buffer.\n\nExpects the buffer to be non-empty.\n\n**Parameters**\n- `src`: The source to search in.\n",
    "returns": [
      "@roblox/globaltype/_zune_mem.min/return/0"
    ],
    "params": [
      {
        "name": "src",
        "documentation": "@roblox/globaltype/_zune_mem.min/param/0"
      }
    ]
  },
  "@roblox/globaltype/_zune_crypto.aead.salsa_poly.XSalsa20Poly1305.encrypt": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/_zune_crypto.aead.salsa_poly.XSalsa20Poly1305.encrypt/return/0"
    ],
    "params": [
      {
        "name": "data",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.salsa_poly.XSalsa20Poly1305.encrypt/param/0"
      },
      {
        "name": "key",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.salsa_poly.XSalsa20Poly1305.encrypt/param/1"
      },
      {
        "name": "nonce",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.salsa_poly.XSalsa20Poly1305.encrypt/param/2"
      },
      {
        "name": "ad",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.salsa_poly.XSalsa20Poly1305.encrypt/param/3"
      }
    ]
  },
  "@roblox/globaltype/_zune_serde_toml.encode/param/0": {
    "code_sample": "",
    "documentation": "The table to encode.",
    "keys": []
  },
  "@roblox/globaltype/_zune_task.cancel": {
    "code_sample": "",
    "documentation": "Cancels a task, and resets thread.\n\n**Parameters**\n- `thread`: The thread to cancel.\n",
    "returns": [],
    "params": [
      {
        "name": "thread",
        "documentation": "@roblox/globaltype/_zune_task.cancel/param/0"
      }
    ]
  },
  "@roblox/globaltype/_zune_crypto_password.verify": {
    "code_sample": "",
    "documentation": "\n\n**Parameters**\n- `password`: The password to verify.\n- `hash`: The hash to verify against.\n\n\n**Throws**\n- Crypto Error\n",
    "returns": [
      "@roblox/globaltype/_zune_crypto_password.verify/return/0"
    ],
    "params": [
      {
        "name": "password",
        "documentation": "@roblox/globaltype/_zune_crypto_password.verify/param/0"
      },
      {
        "name": "hash",
        "documentation": "@roblox/globaltype/_zune_crypto_password.verify/param/1"
      }
    ]
  },
  "@roblox/globaltype/SerdeGenericCompressionOptions": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "level": "@roblox/globaltype/SerdeGenericCompressionOptions.level"
    }
  },
  "@roblox/globaltype/_zune_io.terminal.isTTY": {
    "code_sample": "",
    "documentation": "Whether the terminal is a TTY."
  },
  "@roblox/globaltype/ServerWebSocketHandlers.message": {
    "code_sample": "",
    "documentation": "The function to call when a message is received on a WebSocket connection."
  },
  "@roblox/globaltype/_zune_io_terminal.restoreMode": {
    "code_sample": "",
    "documentation": "Restores the terminal to the original mode.\n\nOn unix: Will attempt to restore the original terminal mode.\nOn windows: Will attempt to restore the original console mode.\n\nreturns `true` if the operation was successful.",
    "returns": [
      "@roblox/globaltype/_zune_io_terminal.restoreMode/return/0"
    ],
    "params": []
  },
  "@roblox/globaltype/_zune_crypto.aead.aes_gcm.Aes256Gcm.encrypt": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/_zune_crypto.aead.aes_gcm.Aes256Gcm.encrypt/return/0"
    ],
    "params": [
      {
        "name": "data",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aes_gcm.Aes256Gcm.encrypt/param/0"
      },
      {
        "name": "key",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aes_gcm.Aes256Gcm.encrypt/param/1"
      },
      {
        "name": "nonce",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aes_gcm.Aes256Gcm.encrypt/param/2"
      },
      {
        "name": "ad",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aes_gcm.Aes256Gcm.encrypt/param/3"
      }
    ]
  },
  "@roblox/globaltype/_zune_ffi.prefix": {
    "code_sample": "",
    "documentation": "The recommended prefix for the library file.\n\nPlatforms:\n- Windows: none\n- Linux: `lib`\n- macOS: `lib`"
  },
  "@roblox/globaltype/_zune_fs_path.isAbsolute/param/0": {
    "code_sample": "",
    "documentation": "The path to check if it is absolute."
  },
  "@roblox/globaltype/Location": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "begin": "@roblox/globaltype/Location.begin"
    }
  },
  "@roblox/globaltype/_zune_net_SOCKOPT": {
    "code_sample": "",
    "documentation": "Table of socket options.",
    "keys": {
      "ATTACH_FILTER": "@roblox/globaltype/_zune_net_SOCKOPT.ATTACH_FILTER",
      "CNX_ADVICE": "@roblox/globaltype/_zune_net_SOCKOPT.CNX_ADVICE",
      "PEERCRED": "@roblox/globaltype/_zune_net_SOCKOPT.PEERCRED",
      "LINGER": "@roblox/globaltype/_zune_net_SOCKOPT.LINGER",
      "DEBUG": "@roblox/globaltype/_zune_net_SOCKOPT.DEBUG",
      "RXQ_OVFL": "@roblox/globaltype/_zune_net_SOCKOPT.RXQ_OVFL",
      "SNDBUF": "@roblox/globaltype/_zune_net_SOCKOPT.SNDBUF",
      "DONTROUTE": "@roblox/globaltype/_zune_net_SOCKOPT.DONTROUTE",
      "ZEROCOPY": "@roblox/globaltype/_zune_net_SOCKOPT.ZEROCOPY",
      "PASSCRED": "@roblox/globaltype/_zune_net_SOCKOPT.PASSCRED",
      "DETACH_REUSEPORT_BPF": "@roblox/globaltype/_zune_net_SOCKOPT.DETACH_REUSEPORT_BPF",
      "ATTACH_REUSEPORT_EBPF": "@roblox/globaltype/_zune_net_SOCKOPT.ATTACH_REUSEPORT_EBPF",
      "TIMESTAMPING_NEW": "@roblox/globaltype/_zune_net_SOCKOPT.TIMESTAMPING_NEW",
      "COOKIE": "@roblox/globaltype/_zune_net_SOCKOPT.COOKIE",
      "SNDBUFFORCE": "@roblox/globaltype/_zune_net_SOCKOPT.SNDBUFFORCE",
      "BINDTOIFINDEX": "@roblox/globaltype/_zune_net_SOCKOPT.BINDTOIFINDEX",
      "LOCK_FILTER": "@roblox/globaltype/_zune_net_SOCKOPT.LOCK_FILTER",
      "SNDTIMEO": "@roblox/globaltype/_zune_net_SOCKOPT.SNDTIMEO",
      "BINDTODEVICE": "@roblox/globaltype/_zune_net_SOCKOPT.BINDTODEVICE",
      "OOBINLINE": "@roblox/globaltype/_zune_net_SOCKOPT.OOBINLINE",
      "BPF_EXTENSIONS": "@roblox/globaltype/_zune_net_SOCKOPT.BPF_EXTENSIONS",
      "TIMESTAMP_NEW": "@roblox/globaltype/_zune_net_SOCKOPT.TIMESTAMP_NEW",
      "NO_CHECK": "@roblox/globaltype/_zune_net_SOCKOPT.NO_CHECK",
      "WIFI_STATUS": "@roblox/globaltype/_zune_net_SOCKOPT.WIFI_STATUS",
      "PEERGROUPS": "@roblox/globaltype/_zune_net_SOCKOPT.PEERGROUPS",
      "TYPE": "@roblox/globaltype/_zune_net_SOCKOPT.TYPE",
      "NOFCS": "@roblox/globaltype/_zune_net_SOCKOPT.NOFCS",
      "DOMAIN": "@roblox/globaltype/_zune_net_SOCKOPT.DOMAIN",
      "TIMESTAMPNS_NEW": "@roblox/globaltype/_zune_net_SOCKOPT.TIMESTAMPNS_NEW",
      "SNDLOWAT": "@roblox/globaltype/_zune_net_SOCKOPT.SNDLOWAT",
      "KEEPALIVE": "@roblox/globaltype/_zune_net_SOCKOPT.KEEPALIVE",
      "PEEK_OFF": "@roblox/globaltype/_zune_net_SOCKOPT.PEEK_OFF",
      "PEERSEC": "@roblox/globaltype/_zune_net_SOCKOPT.PEERSEC",
      "PEERNAME": "@roblox/globaltype/_zune_net_SOCKOPT.PEERNAME",
      "RCVTIMEO_NEW": "@roblox/globaltype/_zune_net_SOCKOPT.RCVTIMEO_NEW",
      "SECURITY_ENCRYPTION_NETWORK": "@roblox/globaltype/_zune_net_SOCKOPT.SECURITY_ENCRYPTION_NETWORK",
      "INCOMING_NAPI_ID": "@roblox/globaltype/_zune_net_SOCKOPT.INCOMING_NAPI_ID",
      "TIMESTAMPING_OLD": "@roblox/globaltype/_zune_net_SOCKOPT.TIMESTAMPING_OLD",
      "RCVBUFFORCE": "@roblox/globaltype/_zune_net_SOCKOPT.RCVBUFFORCE",
      "REUSEADDR": "@roblox/globaltype/_zune_net_SOCKOPT.REUSEADDR",
      "MAX_PACING_RATE": "@roblox/globaltype/_zune_net_SOCKOPT.MAX_PACING_RATE",
      "RCVTIMEO": "@roblox/globaltype/_zune_net_SOCKOPT.RCVTIMEO",
      "ACCEPTCONN": "@roblox/globaltype/_zune_net_SOCKOPT.ACCEPTCONN",
      "BUSY_POLL": "@roblox/globaltype/_zune_net_SOCKOPT.BUSY_POLL",
      "PROTOCOL": "@roblox/globaltype/_zune_net_SOCKOPT.PROTOCOL",
      "SECURITY_AUTHENTICATION": "@roblox/globaltype/_zune_net_SOCKOPT.SECURITY_AUTHENTICATION",
      "BROADCAST": "@roblox/globaltype/_zune_net_SOCKOPT.BROADCAST",
      "INCOMING_CPU": "@roblox/globaltype/_zune_net_SOCKOPT.INCOMING_CPU",
      "DETACH_FILTER": "@roblox/globaltype/_zune_net_SOCKOPT.DETACH_FILTER",
      "RCVLOWAT": "@roblox/globaltype/_zune_net_SOCKOPT.RCVLOWAT",
      "SECURITY_ENCRYPTION_TRANSPORT": "@roblox/globaltype/_zune_net_SOCKOPT.SECURITY_ENCRYPTION_TRANSPORT",
      "GET_FILTER": "@roblox/globaltype/_zune_net_SOCKOPT.GET_FILTER",
      "TIMESTAMP_OLD": "@roblox/globaltype/_zune_net_SOCKOPT.TIMESTAMP_OLD",
      "TXTIME": "@roblox/globaltype/_zune_net_SOCKOPT.TXTIME",
      "SELECT_ERR_QUEUE": "@roblox/globaltype/_zune_net_SOCKOPT.SELECT_ERR_QUEUE",
      "DETACH_BPF": "@roblox/globaltype/_zune_net_SOCKOPT.DETACH_BPF",
      "SNDTIMEO_NEW": "@roblox/globaltype/_zune_net_SOCKOPT.SNDTIMEO_NEW",
      "PASSSEC": "@roblox/globaltype/_zune_net_SOCKOPT.PASSSEC",
      "RCVBUF": "@roblox/globaltype/_zune_net_SOCKOPT.RCVBUF",
      "TIMESTAMPNS_OLD": "@roblox/globaltype/_zune_net_SOCKOPT.TIMESTAMPNS_OLD",
      "REUSEPORT": "@roblox/globaltype/_zune_net_SOCKOPT.REUSEPORT",
      "ERROR": "@roblox/globaltype/_zune_net_SOCKOPT.ERROR",
      "ATTACH_REUSEPORT_CBPF": "@roblox/globaltype/_zune_net_SOCKOPT.ATTACH_REUSEPORT_CBPF",
      "MARK": "@roblox/globaltype/_zune_net_SOCKOPT.MARK",
      "MEMINFO": "@roblox/globaltype/_zune_net_SOCKOPT.MEMINFO",
      "ATTACH_BPF": "@roblox/globaltype/_zune_net_SOCKOPT.ATTACH_BPF",
      "PRIORITY": "@roblox/globaltype/_zune_net_SOCKOPT.PRIORITY",
      "BSDCOMPAT": "@roblox/globaltype/_zune_net_SOCKOPT.BSDCOMPAT"
    }
  },
  "@roblox/globaltype/_zune_serde_json5.encode/param/1": {
    "code_sample": "",
    "documentation": "The configuration for the encoding."
  },
  "@roblox/globaltype/_zune_crypto_aead.chacha_poly.ChaCha12Poly1305": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "encrypt": "@roblox/globaltype/_zune_crypto_aead.chacha_poly.ChaCha12Poly1305.encrypt",
      "decrypt": "@roblox/globaltype/_zune_crypto_aead.chacha_poly.ChaCha12Poly1305.decrypt"
    }
  },
  "@roblox/globaltype/Metadata": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "accessed_at": "@roblox/globaltype/Metadata.accessed_at",
      "permissions": "@roblox/globaltype/Metadata.permissions",
      "symlink": "@roblox/globaltype/Metadata.symlink",
      "modified_at": "@roblox/globaltype/Metadata.modified_at",
      "kind": "@roblox/globaltype/Metadata.kind",
      "created_at": "@roblox/globaltype/Metadata.created_at",
      "size": "@roblox/globaltype/Metadata.size"
    }
  },
  "@roblox/globaltype/TimeDictionary": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "minute": "@roblox/globaltype/TimeDictionary.minute",
      "year": "@roblox/globaltype/TimeDictionary.year",
      "month": "@roblox/globaltype/TimeDictionary.month",
      "day": "@roblox/globaltype/TimeDictionary.day",
      "millisecond": "@roblox/globaltype/TimeDictionary.millisecond",
      "hour": "@roblox/globaltype/TimeDictionary.hour",
      "second": "@roblox/globaltype/TimeDictionary.second"
    }
  },
  "@roblox/globaltype/_zune_crypto.random.nextBoolean": {
    "code_sample": "",
    "documentation": "Generates a random boolean.",
    "returns": [
      "@roblox/globaltype/_zune_crypto.random.nextBoolean/return/0"
    ],
    "params": []
  },
  "@roblox/globaltype/_zune_datetime.fromLocalTime": {
    "code_sample": "",
    "documentation": "\n\n**Throws**\n- DateTime Error\n- Memory Error\n",
    "returns": [
      "@roblox/globaltype/_zune_datetime.fromLocalTime/return/0"
    ],
    "params": [
      {
        "name": "year",
        "documentation": "@roblox/globaltype/_zune_datetime.fromLocalTime/param/0"
      },
      {
        "name": "month",
        "documentation": "@roblox/globaltype/_zune_datetime.fromLocalTime/param/1"
      },
      {
        "name": "day",
        "documentation": "@roblox/globaltype/_zune_datetime.fromLocalTime/param/2"
      },
      {
        "name": "hour",
        "documentation": "@roblox/globaltype/_zune_datetime.fromLocalTime/param/3"
      },
      {
        "name": "minute",
        "documentation": "@roblox/globaltype/_zune_datetime.fromLocalTime/param/4"
      },
      {
        "name": "second",
        "documentation": "@roblox/globaltype/_zune_datetime.fromLocalTime/param/5"
      },
      {
        "name": "millisecond",
        "documentation": "@roblox/globaltype/_zune_datetime.fromLocalTime/param/6"
      }
    ]
  },
  "@roblox/globaltype/_zune_mem.reverse/param/0": {
    "code_sample": "",
    "documentation": "The source to reverse in."
  },
  "@roblox/globaltype/FFIPointer.readu8": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/FFIPointer.readu8/return/0"
    ],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/FFIPointer.readu8/param/0"
      },
      {
        "name": "offset",
        "documentation": "@roblox/globaltype/FFIPointer.readu8/param/1"
      }
    ]
  },
  "@roblox/globaltype/_zune_mem.len": {
    "code_sample": "",
    "documentation": "Gets the length of a slice.\nThis is similar to `buffer.len` but this supports strings and FFI pointers as well.\n\n**Parameters**\n- `src`: The source to get the length of.\n",
    "returns": [
      "@roblox/globaltype/_zune_mem.len/return/0"
    ],
    "params": [
      {
        "name": "src",
        "documentation": "@roblox/globaltype/_zune_mem.len/param/0"
      }
    ]
  },
  "@roblox/globaltype/IoWritable.write": {
    "code_sample": "",
    "documentation": "\n\n**Parameters**\n- `data`: The data to write to the stream.\n\n\n**Throws**\n- Writer Error\n",
    "returns": [],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/IoWritable.write/param/0"
      },
      {
        "name": "data",
        "documentation": "@roblox/globaltype/IoWritable.write/param/1"
      }
    ]
  },
  "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis256_256.encrypt": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis256_256.encrypt/return/0"
    ],
    "params": [
      {
        "name": "data",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis256_256.encrypt/param/0"
      },
      {
        "name": "key",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis256_256.encrypt/param/1"
      },
      {
        "name": "nonce",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis256_256.encrypt/param/2"
      },
      {
        "name": "ad",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis256_256.encrypt/param/3"
      }
    ]
  },
  "@roblox/globaltype/_zune_serde_json.encode/param/1": {
    "code_sample": "",
    "documentation": "The configuration for the encoding."
  },
  "@roblox/globaltype/HttpWebSocket": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "send": "@roblox/globaltype/HttpWebSocket.send",
      "isConnected": "@roblox/globaltype/HttpWebSocket.isConnected",
      "close": "@roblox/globaltype/HttpWebSocket.close"
    }
  },
  "@roblox/globaltype/_zune_mem.eql/param/0": {
    "code_sample": "",
    "documentation": "The first slice to compare."
  },
  "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis256X4_256.decrypt": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis256X4_256.decrypt/return/0"
    ],
    "params": [
      {
        "name": "cipher",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis256X4_256.decrypt/param/0"
      },
      {
        "name": "tag",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis256X4_256.decrypt/param/1"
      },
      {
        "name": "key",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis256X4_256.decrypt/param/2"
      },
      {
        "name": "nonce",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis256X4_256.decrypt/param/3"
      },
      {
        "name": "ad",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis256X4_256.decrypt/param/4"
      }
    ]
  },
  "@roblox/globaltype/_zune_fs_path.relative": {
    "code_sample": "",
    "documentation": "Gets the relative path from one path to another.\n```luau\n- (`lib`, `lib/main.luau`) -> `main.luau`\n- (`lib`, `main.luau`) -> `../main.luau`\n```\n\n\n**Parameters**\n- `from`: The path to resolve from.\n- `to`: The path to resolve to.\n",
    "returns": [
      "@roblox/globaltype/_zune_fs_path.relative/return/0"
    ],
    "params": [
      {
        "name": "from",
        "documentation": "@roblox/globaltype/_zune_fs_path.relative/param/0"
      },
      {
        "name": "to",
        "documentation": "@roblox/globaltype/_zune_fs_path.relative/param/1"
      }
    ]
  },
  "@roblox/globaltype/_zune_crypto.aead.chacha_poly.ChaCha12Poly1305": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "encrypt": "@roblox/globaltype/_zune_crypto.aead.chacha_poly.ChaCha12Poly1305.encrypt",
      "decrypt": "@roblox/globaltype/_zune_crypto.aead.chacha_poly.ChaCha12Poly1305.decrypt"
    }
  },
  "@roblox/globaltype/_zune_fs.copy/param/0": {
    "code_sample": "",
    "documentation": "The path to the file or directory to copy."
  },
  "@roblox/globaltype/FFIPointer.readi64": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/FFIPointer.readi64/return/0"
    ],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/FFIPointer.readi64/param/0"
      },
      {
        "name": "offset",
        "documentation": "@roblox/globaltype/FFIPointer.readi64/param/1"
      }
    ]
  },
  "@roblox/globaltype/_zune_luau.garbagecollect": {
    "code_sample": "",
    "documentation": "Runs a full garbage collection cycle.",
    "returns": [],
    "params": []
  },
  "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis256X2_256.decrypt": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis256X2_256.decrypt/return/0"
    ],
    "params": [
      {
        "name": "cipher",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis256X2_256.decrypt/param/0"
      },
      {
        "name": "tag",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis256X2_256.decrypt/param/1"
      },
      {
        "name": "key",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis256X2_256.decrypt/param/2"
      },
      {
        "name": "nonce",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis256X2_256.decrypt/param/3"
      },
      {
        "name": "ad",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis256X2_256.decrypt/param/4"
      }
    ]
  },
  "@roblox/globaltype/_zune_crypto_aead.isap.IsapA128A.decrypt": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/_zune_crypto_aead.isap.IsapA128A.decrypt/return/0"
    ],
    "params": [
      {
        "name": "cipher",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.isap.IsapA128A.decrypt/param/0"
      },
      {
        "name": "tag",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.isap.IsapA128A.decrypt/param/1"
      },
      {
        "name": "key",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.isap.IsapA128A.decrypt/param/2"
      },
      {
        "name": "nonce",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.isap.IsapA128A.decrypt/param/3"
      },
      {
        "name": "ad",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.isap.IsapA128A.decrypt/param/4"
      }
    ]
  },
  "@roblox/globaltype/HttpWebSocket.close": {
    "code_sample": "",
    "documentation": "Closes the WebSocket connection.\n\n**Parameters**\n- `code`: The close code to send.\n  - default: `1000`\n\n\n**Throws**\n- Memory Error\n- WebSocket Error\n",
    "returns": [],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/HttpWebSocket.close/param/0"
      },
      {
        "name": "code",
        "documentation": "@roblox/globaltype/HttpWebSocket.close/param/1"
      }
    ]
  },
  "@roblox/globaltype/_zune_fs.writeFile/param/1": {
    "code_sample": "",
    "documentation": "The contents to write to the file. (This may be limited to the max luau `string`)."
  },
  "@roblox/globaltype/_zune_mem.eql/param/1": {
    "code_sample": "",
    "documentation": "The second slice to compare."
  },
  "@roblox/globaltype/_zune_ffi.struct": {
    "code_sample": "",
    "documentation": "Creates a structure data type.\n- The order of the fields is the number index of the field table.\n-- There cannot be multiple fields in the same field table.\n-- Multiple fields with the same field name is not allowed.```lua\nffi.struct {\n{ age = ffi.types.u8 },\n{ height = ffi.types.f32 },\n}\n```\n\n**Parameters**\n- `fields`: The fields of the structure.\n\n\n**Throws**\n- FFI Error\n- Memory Error\n",
    "returns": [
      "@roblox/globaltype/_zune_ffi.struct/return/0"
    ],
    "params": [
      {
        "name": "fields",
        "documentation": "@roblox/globaltype/_zune_ffi.struct/param/0"
      }
    ]
  },
  "@roblox/globaltype/_zune_mem.set/param/2": {
    "code_sample": "",
    "documentation": "The offset to start writing at."
  },
  "@roblox/globaltype/_zune_mem.slice": {
    "code_sample": "",
    "documentation": "Slices a portion of a source and returns it as a new buffer.\n\nThis does allocate memory for the new buffer.\n\n**Parameters**\n- `src`: The source to slice from.\n- `offset`: The offset to start the slice from.\n- `count`: The number of bytes to include in the slice. If not provided,\n\n\n**Throws**\n- Memory Error\n",
    "returns": [
      "@roblox/globaltype/_zune_mem.slice/return/0"
    ],
    "params": [
      {
        "name": "src",
        "documentation": "@roblox/globaltype/_zune_mem.slice/param/0"
      },
      {
        "name": "offset",
        "documentation": "@roblox/globaltype/_zune_mem.slice/param/1"
      },
      {
        "name": "count",
        "documentation": "@roblox/globaltype/_zune_mem.slice/param/2"
      }
    ]
  },
  "@roblox/globaltype/_zune_mem.trimRight/param/0": {
    "code_sample": "",
    "documentation": "The source to trim."
  },
  "@roblox/globaltype/_zune_mem.trimRight/param/1": {
    "code_sample": "",
    "documentation": "The values to trim from the source."
  },
  "@roblox/globaltype/Regex.isMatch": {
    "code_sample": "",
    "documentation": "Returns if a string matches the pattern.\n\n**Throws**\n- Regex Error\n",
    "returns": [
      "@roblox/globaltype/Regex.isMatch/return/0"
    ],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/Regex.isMatch/param/0"
      },
      {
        "name": "input",
        "documentation": "@roblox/globaltype/Regex.isMatch/param/1"
      }
    ]
  },
  "@roblox/globaltype/_zune_crypto.aead.chacha_poly.XChaCha8Poly1305": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "encrypt": "@roblox/globaltype/_zune_crypto.aead.chacha_poly.XChaCha8Poly1305.encrypt",
      "decrypt": "@roblox/globaltype/_zune_crypto.aead.chacha_poly.XChaCha8Poly1305.decrypt"
    }
  },
  "@roblox/globaltype/_zune_serde_gzip": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "decompress": "@roblox/globaltype/_zune_serde_gzip.decompress",
      "compress": "@roblox/globaltype/_zune_serde_gzip.compress"
    }
  },
  "@roblox/globaltype/_zune_serde.json5.encode/param/1": {
    "code_sample": "",
    "documentation": "The configuration for the encoding."
  },
  "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis256.encrypt": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis256.encrypt/return/0"
    ],
    "params": [
      {
        "name": "data",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis256.encrypt/param/0"
      },
      {
        "name": "key",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis256.encrypt/param/1"
      },
      {
        "name": "nonce",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis256.encrypt/param/2"
      },
      {
        "name": "ad",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis256.encrypt/param/3"
      }
    ]
  },
  "@roblox/globaltype/_zune_crypto.aead.aes_gcm.Aes128Gcm": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "encrypt": "@roblox/globaltype/_zune_crypto.aead.aes_gcm.Aes128Gcm.encrypt",
      "decrypt": "@roblox/globaltype/_zune_crypto.aead.aes_gcm.Aes128Gcm.decrypt"
    }
  },
  "@roblox/globaltype/FileHandle.sync": {
    "code_sample": "",
    "documentation": "Flushes the file. Writes the contents to the disk. This does not yield, it would block the process until the file is flushed.\n\n**Throws**\n- IO Error\n",
    "returns": [],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/FileHandle.sync/param/0"
      }
    ]
  },
  "@roblox/globaltype/ServerWebSocketHandlers.upgrade": {
    "code_sample": "",
    "documentation": "The function to call when a WebSocket upgrade request is received.\n- If `true` is returned, the upgrade will be accepted.\n- If `false` is returned, the upgrade will be rejected."
  },
  "@roblox/globaltype/NetworkSocket.send/param/2": {
    "code_sample": "",
    "documentation": "The offset to start sending from."
  },
  "@roblox/globaltype/_zune_serde_json5.encode": {
    "code_sample": "",
    "documentation": "Encodes a value to JSON.\n\n**Parameters**\n- `value`: The value to encode.\n- `config`: The configuration for the encoding.\n\n\n**Throws**\n- Memory Error\n",
    "returns": [
      "@roblox/globaltype/_zune_serde_json5.encode/return/0"
    ],
    "params": [
      {
        "name": "value",
        "documentation": "@roblox/globaltype/_zune_serde_json5.encode/param/0"
      },
      {
        "name": "config",
        "documentation": "@roblox/globaltype/_zune_serde_json5.encode/param/1"
      }
    ]
  },
  "@roblox/globaltype/_zune_serde.json5.encode": {
    "code_sample": "",
    "documentation": "Encodes a value to JSON.\n\n**Parameters**\n- `value`: The value to encode.\n- `config`: The configuration for the encoding.\n\n\n**Throws**\n- Memory Error\n",
    "returns": [
      "@roblox/globaltype/_zune_serde.json5.encode/return/0"
    ],
    "params": [
      {
        "name": "value",
        "documentation": "@roblox/globaltype/_zune_serde.json5.encode/param/0"
      },
      {
        "name": "config",
        "documentation": "@roblox/globaltype/_zune_serde.json5.encode/param/1"
      }
    ]
  },
  "@roblox/globaltype/_zune_fs_path.dirname": {
    "code_sample": "",
    "documentation": "Returns the directory name of the provided path, will return nil if there are no more directories.\n- `lib/main.luau` -> `lib`\n- `lib` -> nil\n\n**Parameters**\n- `path`: The path to get the directory name from.\n",
    "returns": [
      "@roblox/globaltype/_zune_fs_path.dirname/return/0"
    ],
    "params": [
      {
        "name": "path",
        "documentation": "@roblox/globaltype/_zune_fs_path.dirname/param/0"
      }
    ]
  },
  "@roblox/globaltype/FFIStructureType.offset": {
    "code_sample": "",
    "documentation": "Get the offset of a field in the structure.\n\n**Parameters**\n- `field`: The field to get the offset of.\n",
    "returns": [
      "@roblox/globaltype/FFIStructureType.offset/return/0"
    ],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/FFIStructureType.offset/param/0"
      },
      {
        "name": "field",
        "documentation": "@roblox/globaltype/FFIStructureType.offset/param/1"
      }
    ]
  },
  "@roblox/globaltype/ProcessOptions.cwd": {
    "code_sample": "",
    "documentation": "The current working directory of the process."
  },
  "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis128X2.encrypt": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis128X2.encrypt/return/0"
    ],
    "params": [
      {
        "name": "data",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis128X2.encrypt/param/0"
      },
      {
        "name": "key",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis128X2.encrypt/param/1"
      },
      {
        "name": "nonce",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis128X2.encrypt/param/2"
      },
      {
        "name": "ad",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis128X2.encrypt/param/3"
      }
    ]
  },
  "@roblox/globaltype/CryptoTlsClientConfig.host": {
    "code_sample": "",
    "documentation": "The host."
  },
  "@roblox/globaltype/ProcessResult": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "ok": "@roblox/globaltype/ProcessResult.ok",
      "code": "@roblox/globaltype/ProcessResult.code"
    }
  },
  "@roblox/globaltype/SQLite3Database.exec/param/1": {
    "code_sample": "",
    "documentation": "The query to execute."
  },
  "@roblox/globaltype/LuauLoadOptions.native_code_gen": {
    "code_sample": "",
    "documentation": "Whether to enable native code generation."
  },
  "@roblox/globaltype/_zune_mem.indexOfNonePos/param/2": {
    "code_sample": "",
    "documentation": "The bytes to not search for."
  },
  "@roblox/globaltype/NetworkSocket.bindIp/param/2": {
    "code_sample": "",
    "documentation": "The port to bind to."
  },
  "@roblox/globaltype/_zune_crypto.password": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "hash": "@roblox/globaltype/_zune_crypto.password.hash",
      "verify": "@roblox/globaltype/_zune_crypto.password.verify"
    }
  },
  "@roblox/globaltype/_zune_net.getAddressList": {
    "code_sample": "",
    "documentation": "Gets a list of addresses for the provided name and port.\n\n**Parameters**\n- `name`: The name to resolve.\n- `port`: The port to resolve.\n\n\n**Throws**\n- IO Error\n",
    "returns": [
      "@roblox/globaltype/_zune_net.getAddressList/return/0"
    ],
    "params": [
      {
        "name": "name",
        "documentation": "@roblox/globaltype/_zune_net.getAddressList/param/0"
      },
      {
        "name": "port",
        "documentation": "@roblox/globaltype/_zune_net.getAddressList/param/1"
      }
    ]
  },
  "@roblox/globaltype/NetworkSocket.sendMsg/param/1": {
    "code_sample": "",
    "documentation": "The port to send the message to."
  },
  "@roblox/globaltype/_zune_testing.test/param/0": {
    "code_sample": "",
    "documentation": "The name of the test."
  },
  "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis128X4.encrypt": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis128X4.encrypt/return/0"
    ],
    "params": [
      {
        "name": "data",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis128X4.encrypt/param/0"
      },
      {
        "name": "key",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis128X4.encrypt/param/1"
      },
      {
        "name": "nonce",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis128X4.encrypt/param/2"
      },
      {
        "name": "ad",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis128X4.encrypt/param/3"
      }
    ]
  },
  "@roblox/globaltype/_zune_thread.fromBytecode/param/1": {
    "code_sample": "",
    "documentation": "The options for loading the bytecode."
  },
  "@roblox/globaltype/BufferStream.seekBy": {
    "code_sample": "",
    "documentation": "\n\n**Parameters**\n- `offset`: The offset to seek by.\n",
    "returns": [],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/BufferStream.seekBy/param/0"
      },
      {
        "name": "offset",
        "documentation": "@roblox/globaltype/BufferStream.seekBy/param/1"
      }
    ]
  },
  "@roblox/globaltype/_zune_crypto.aead.chacha_poly.ChaCha8Poly1305.decrypt": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/_zune_crypto.aead.chacha_poly.ChaCha8Poly1305.decrypt/return/0"
    ],
    "params": [
      {
        "name": "cipher",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.chacha_poly.ChaCha8Poly1305.decrypt/param/0"
      },
      {
        "name": "tag",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.chacha_poly.ChaCha8Poly1305.decrypt/param/1"
      },
      {
        "name": "key",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.chacha_poly.ChaCha8Poly1305.decrypt/param/2"
      },
      {
        "name": "nonce",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.chacha_poly.ChaCha8Poly1305.decrypt/param/3"
      },
      {
        "name": "ad",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.chacha_poly.ChaCha8Poly1305.decrypt/param/4"
      }
    ]
  },
  "@roblox/globaltype/SQLite3Statement.get": {
    "code_sample": "",
    "documentation": "\n\n**Parameters**\n- `args`: The arguments to bind to the statement.\n\n\n**Throws**\n- SQLite3 Error\n- Memory Error\n",
    "returns": [
      "@roblox/globaltype/SQLite3Statement.get/return/0"
    ],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/SQLite3Statement.get/param/0"
      },
      {
        "name": "args",
        "documentation": "@roblox/globaltype/SQLite3Statement.get/param/1"
      }
    ]
  },
  "@roblox/globaltype/_zune_serde.json5.indents": {
    "code_sample": "",
    "documentation": "Indentation levels for JSON.",
    "keys": {
      "tabs": "@roblox/globaltype/_zune_serde.json5.indents.tabs",
      "four_spaces": "@roblox/globaltype/_zune_serde.json5.indents.four_spaces",
      "two_spaces": "@roblox/globaltype/_zune_serde.json5.indents.two_spaces",
      "none": "@roblox/globaltype/_zune_serde.json5.indents.none"
    }
  },
  "@roblox/globaltype/_zune_net.SOCKOPTLV": {
    "code_sample": "",
    "documentation": "Table of socket option levels.",
    "keys": {
      "PPPOL2TP": "@roblox/globaltype/_zune_net.SOCKOPTLV.PPPOL2TP",
      "RDS": "@roblox/globaltype/_zune_net.SOCKOPTLV.RDS",
      "TIPC": "@roblox/globaltype/_zune_net.SOCKOPTLV.TIPC",
      "ALG": "@roblox/globaltype/_zune_net.SOCKOPTLV.ALG",
      "PNPIPE": "@roblox/globaltype/_zune_net.SOCKOPTLV.PNPIPE",
      "BLUETOOTH": "@roblox/globaltype/_zune_net.SOCKOPTLV.BLUETOOTH",
      "PACKET": "@roblox/globaltype/_zune_net.SOCKOPTLV.PACKET",
      "KCM": "@roblox/globaltype/_zune_net.SOCKOPTLV.KCM",
      "IP": "@roblox/globaltype/_zune_net.SOCKOPTLV.IP",
      "RXRPC": "@roblox/globaltype/_zune_net.SOCKOPTLV.RXRPC",
      "NETBEUI": "@roblox/globaltype/_zune_net.SOCKOPTLV.NETBEUI",
      "DECNET": "@roblox/globaltype/_zune_net.SOCKOPTLV.DECNET",
      "ATM": "@roblox/globaltype/_zune_net.SOCKOPTLV.ATM",
      "ICMPV6": "@roblox/globaltype/_zune_net.SOCKOPTLV.ICMPV6",
      "RAW": "@roblox/globaltype/_zune_net.SOCKOPTLV.RAW",
      "XDP": "@roblox/globaltype/_zune_net.SOCKOPTLV.XDP",
      "SOCKET": "@roblox/globaltype/_zune_net.SOCKOPTLV.SOCKET",
      "LLC": "@roblox/globaltype/_zune_net.SOCKOPTLV.LLC",
      "NFC": "@roblox/globaltype/_zune_net.SOCKOPTLV.NFC",
      "CAIF": "@roblox/globaltype/_zune_net.SOCKOPTLV.CAIF",
      "DCCP": "@roblox/globaltype/_zune_net.SOCKOPTLV.DCCP",
      "X25": "@roblox/globaltype/_zune_net.SOCKOPTLV.X25",
      "AAL": "@roblox/globaltype/_zune_net.SOCKOPTLV.AAL",
      "IPV6": "@roblox/globaltype/_zune_net.SOCKOPTLV.IPV6",
      "IUCV": "@roblox/globaltype/_zune_net.SOCKOPTLV.IUCV",
      "IRDA": "@roblox/globaltype/_zune_net.SOCKOPTLV.IRDA",
      "TLS": "@roblox/globaltype/_zune_net.SOCKOPTLV.TLS",
      "NETLINK": "@roblox/globaltype/_zune_net.SOCKOPTLV.NETLINK"
    }
  },
  "@roblox/globaltype/_zune_crypto_random": {
    "code_sample": "",
    "documentation": "Cryptographically secure random number generator.",
    "keys": {
      "nextInteger": "@roblox/globaltype/_zune_crypto_random.nextInteger",
      "nextNumber": "@roblox/globaltype/_zune_crypto_random.nextNumber",
      "nextBoolean": "@roblox/globaltype/_zune_crypto_random.nextBoolean",
      "fill": "@roblox/globaltype/_zune_crypto_random.fill"
    }
  },
  "@roblox/globaltype/_zune_crypto_aead.aes_gcm": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "Aes128Gcm": "@roblox/globaltype/_zune_crypto_aead.aes_gcm.Aes128Gcm",
      "Aes256Gcm": "@roblox/globaltype/_zune_crypto_aead.aes_gcm.Aes256Gcm"
    }
  },
  "@roblox/globaltype/_zune_testing.expect": {
    "code_sample": "",
    "documentation": "Expects a value.\n"
  },
  "@roblox/globaltype/_zune_regex.create/param/1": {
    "code_sample": "",
    "documentation": "The flags to use."
  },
  "@roblox/globaltype/_zune_fs.path.globMatch": {
    "code_sample": "",
    "documentation": "Checks if the provided path matches the glob pattern.\n\n**Parameters**\n- `path`: The path to check.\n- `pattern`: The glob pattern to match against.\n",
    "returns": [
      "@roblox/globaltype/_zune_fs.path.globMatch/return/0"
    ],
    "params": [
      {
        "name": "path",
        "documentation": "@roblox/globaltype/_zune_fs.path.globMatch/param/0"
      },
      {
        "name": "pattern",
        "documentation": "@roblox/globaltype/_zune_fs.path.globMatch/param/1"
      }
    ]
  },
  "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis128X2.encrypt": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis128X2.encrypt/return/0"
    ],
    "params": [
      {
        "name": "data",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis128X2.encrypt/param/0"
      },
      {
        "name": "key",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis128X2.encrypt/param/1"
      },
      {
        "name": "nonce",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis128X2.encrypt/param/2"
      },
      {
        "name": "ad",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis128X2.encrypt/param/3"
      }
    ]
  },
  "@roblox/globaltype/_zune_io.terminal.getSize": {
    "code_sample": "",
    "documentation": "Gets the terminal size.\n\nReturns a tuple of `(width, height)`. Otherwise returns `(nil, nil)` if current terminal is not a TTY.\n\n**Throws**\n- Terminal Error\n",
    "returns": [
      "@roblox/globaltype/_zune_io.terminal.getSize/return/0",
      "@roblox/globaltype/_zune_io.terminal.getSize/return/1"
    ],
    "params": []
  },
  "@roblox/globaltype/_zune_fs.removeDir/param/1": {
    "code_sample": "",
    "documentation": "If true, the function will remove all files and directories inside the directory."
  },
  "@roblox/globaltype/_zune_luau.parse": {
    "code_sample": "",
    "documentation": "Parses `Luau` source code.\n\n**Parameters**\n- `src`: The source code to parse.\n\n\n**Throws**\n- Memory Error\n",
    "returns": [
      "@roblox/globaltype/_zune_luau.parse/return/0"
    ],
    "params": [
      {
        "name": "src",
        "documentation": "@roblox/globaltype/_zune_luau.parse/param/0"
      }
    ]
  },
  "@roblox/globaltype/_zune_fs.copy/param/2": {
    "code_sample": "",
    "documentation": "If true, the function will overwrite the file if it exists."
  },
  "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis128L.decrypt": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis128L.decrypt/return/0"
    ],
    "params": [
      {
        "name": "cipher",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis128L.decrypt/param/0"
      },
      {
        "name": "tag",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis128L.decrypt/param/1"
      },
      {
        "name": "key",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis128L.decrypt/param/2"
      },
      {
        "name": "nonce",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis128L.decrypt/param/3"
      },
      {
        "name": "ad",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis128L.decrypt/param/4"
      }
    ]
  },
  "@roblox/globaltype/ProcessOptions": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "env": "@roblox/globaltype/ProcessOptions.env",
      "cwd": "@roblox/globaltype/ProcessOptions.cwd",
      "stdio": "@roblox/globaltype/ProcessOptions.stdio",
      "shell": "@roblox/globaltype/ProcessOptions.shell"
    }
  },
  "@roblox/globaltype/_zune_random_Pcg32.new": {
    "code_sample": "",
    "documentation": "\n\n**Throws**\n- Memory Error\n",
    "returns": [
      "@roblox/globaltype/_zune_random_Pcg32.new/return/0"
    ],
    "params": [
      {
        "name": "seed",
        "documentation": "@roblox/globaltype/_zune_random_Pcg32.new/param/0"
      }
    ]
  },
  "@roblox/globaltype/_zune_mem.indexOfNone": {
    "code_sample": "",
    "documentation": "Find the index of the first byte that is not in the given `needle`.\n\n**Parameters**\n- `src`: The source to search in.\n- `needle`: The bytes to not search for.\n",
    "returns": [
      "@roblox/globaltype/_zune_mem.indexOfNone/return/0"
    ],
    "params": [
      {
        "name": "src",
        "documentation": "@roblox/globaltype/_zune_mem.indexOfNone/param/0"
      },
      {
        "name": "needle",
        "documentation": "@roblox/globaltype/_zune_mem.indexOfNone/param/1"
      }
    ]
  },
  "@roblox/globaltype/_zune_crypto.aead.chacha_poly.XChaCha12Poly1305.decrypt": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/_zune_crypto.aead.chacha_poly.XChaCha12Poly1305.decrypt/return/0"
    ],
    "params": [
      {
        "name": "cipher",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.chacha_poly.XChaCha12Poly1305.decrypt/param/0"
      },
      {
        "name": "tag",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.chacha_poly.XChaCha12Poly1305.decrypt/param/1"
      },
      {
        "name": "key",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.chacha_poly.XChaCha12Poly1305.decrypt/param/2"
      },
      {
        "name": "nonce",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.chacha_poly.XChaCha12Poly1305.decrypt/param/3"
      },
      {
        "name": "ad",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.chacha_poly.XChaCha12Poly1305.decrypt/param/4"
      }
    ]
  },
  "@roblox/globaltype/LuauLoadOptions.chunk_name": {
    "code_sample": "",
    "documentation": "The name of the chunk, used for debugging."
  },
  "@roblox/globaltype/_zune_crypto_aead.chacha_poly.XChaCha8Poly1305.encrypt": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/_zune_crypto_aead.chacha_poly.XChaCha8Poly1305.encrypt/return/0"
    ],
    "params": [
      {
        "name": "data",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.chacha_poly.XChaCha8Poly1305.encrypt/param/0"
      },
      {
        "name": "key",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.chacha_poly.XChaCha8Poly1305.encrypt/param/1"
      },
      {
        "name": "nonce",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.chacha_poly.XChaCha8Poly1305.encrypt/param/2"
      },
      {
        "name": "ad",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.chacha_poly.XChaCha8Poly1305.encrypt/param/3"
      }
    ]
  },
  "@roblox/globaltype/_zune_net_http.websocket": {
    "code_sample": "",
    "documentation": "\n\n**Parameters**\n- `host`: The host to connect to.\n- `opts`: The options for the WebSocket.\n\n\n**Throws**\n- WebSocket Error\n- Network Error\n",
    "returns": [
      "@roblox/globaltype/_zune_net_http.websocket/return/0"
    ],
    "params": [
      {
        "name": "host",
        "documentation": "@roblox/globaltype/_zune_net_http.websocket/param/0"
      },
      {
        "name": "opts",
        "documentation": "@roblox/globaltype/_zune_net_http.websocket/param/1"
      }
    ]
  },
  "@roblox/globaltype/_zune_ffi.dlopen/param/0": {
    "code_sample": "",
    "documentation": "The path to the library."
  },
  "@roblox/globaltype/_zune_mem.indexOfDiff/param/0": {
    "code_sample": "",
    "documentation": "The source to search in."
  },
  "@roblox/globaltype/_zune_regex.create/param/0": {
    "code_sample": "",
    "documentation": "The pattern to compile."
  },
  "@roblox/globaltype/_zune_task.defer/param/1": {
    "code_sample": "",
    "documentation": "The arguments to pass to the function."
  },
  "@roblox/globaltype/_zune_crypto_random.nextBoolean": {
    "code_sample": "",
    "documentation": "Generates a random boolean.",
    "returns": [
      "@roblox/globaltype/_zune_crypto_random.nextBoolean/return/0"
    ],
    "params": []
  },
  "@roblox/globaltype/Random": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "nextInteger": "@roblox/globaltype/Random.nextInteger",
      "nextNumber": "@roblox/globaltype/Random.nextNumber",
      "clone": "@roblox/globaltype/Random.clone",
      "nextBoolean": "@roblox/globaltype/Random.nextBoolean"
    }
  },
  "@roblox/globaltype/Thread.status": {
    "code_sample": "",
    "documentation": "Returns the status of the thread.\n\n**Throws**\n- Memory Error\n",
    "returns": [
      "@roblox/globaltype/Thread.status/return/0"
    ],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/Thread.status/param/0"
      }
    ]
  },
  "@roblox/globaltype/FileHandle.write/param/1": {
    "code_sample": "",
    "documentation": "The contents to write to the file."
  },
  "@roblox/globaltype/_zune_sqlite": {
    "code_sample": "",
    "documentation": "A library to interact with SQLite3 databases.",
    "keys": {
      "open": "@roblox/globaltype/_zune_sqlite.open"
    },
    "learn_more_link": "https://zune.sh/docs/v0.5.0/api/sqlite"
  },
  "@roblox/globaltype/_zune_serde_json.decode/param/0": {
    "code_sample": "",
    "documentation": "The JSON string to decode."
  },
  "@roblox/globaltype/_zune_fs.path.relative/param/0": {
    "code_sample": "",
    "documentation": "The path to resolve from."
  },
  "@roblox/globaltype/FileHandle.append/param/1": {
    "code_sample": "",
    "documentation": "The contents to append to the file."
  },
  "@roblox/globaltype/_zune_random.LuauPcg32.new": {
    "code_sample": "",
    "documentation": "\n\n**Throws**\n- Memory Error\n",
    "returns": [
      "@roblox/globaltype/_zune_random.LuauPcg32.new/return/0"
    ],
    "params": [
      {
        "name": "seed",
        "documentation": "@roblox/globaltype/_zune_random.LuauPcg32.new/param/0"
      }
    ]
  },
  "@roblox/globaltype/_zune_testing.describe/param/0": {
    "code_sample": "",
    "documentation": "The name of the suite."
  },
  "@roblox/globaltype/_zune_crypto.aead.aes_ocb.Aes256Ocb.encrypt": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/_zune_crypto.aead.aes_ocb.Aes256Ocb.encrypt/return/0"
    ],
    "params": [
      {
        "name": "data",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aes_ocb.Aes256Ocb.encrypt/param/0"
      },
      {
        "name": "key",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aes_ocb.Aes256Ocb.encrypt/param/1"
      },
      {
        "name": "nonce",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aes_ocb.Aes256Ocb.encrypt/param/2"
      },
      {
        "name": "ad",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aes_ocb.Aes256Ocb.encrypt/param/3"
      }
    ]
  },
  "@roblox/globaltype/_zune_testing.test/param/2": {
    "code_sample": "",
    "documentation": "The timeout on how long a test should last."
  },
  "@roblox/globaltype/_zune_crypto_tls.setupServer/param/0": {
    "code_sample": "",
    "documentation": "The socket to setup the server on."
  },
  "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis256X4": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "encrypt": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis256X4.encrypt",
      "decrypt": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis256X4.decrypt"
    }
  },
  "@roblox/globaltype/FFIPointer.read": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/FFIPointer.read/return/0"
    ],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/FFIPointer.read/param/0"
      },
      {
        "name": "srcOffset",
        "documentation": "@roblox/globaltype/FFIPointer.read/param/1"
      },
      {
        "name": "dest",
        "documentation": "@roblox/globaltype/FFIPointer.read/param/2"
      },
      {
        "name": "destOffset",
        "documentation": "@roblox/globaltype/FFIPointer.read/param/3"
      },
      {
        "name": "count",
        "documentation": "@roblox/globaltype/FFIPointer.read/param/4"
      }
    ]
  },
  "@roblox/globaltype/FileHandle.appendSync": {
    "code_sample": "",
    "documentation": "Append the contents to the file synchronously.\n\n**Parameters**\n- `contents`: The contents to append to the file.\n\n\n**Throws**\n- IO Error\n",
    "returns": [],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/FileHandle.appendSync/param/0"
      },
      {
        "name": "contents",
        "documentation": "@roblox/globaltype/FileHandle.appendSync/param/1"
      }
    ]
  },
  "@roblox/globaltype/_zune_mem.indexOfAnyPos/param/2": {
    "code_sample": "",
    "documentation": "The bytes to search for."
  },
  "@roblox/globaltype/_zune_crypto_aead.chacha_poly.XChaCha20Poly1305.encrypt": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/_zune_crypto_aead.chacha_poly.XChaCha20Poly1305.encrypt/return/0"
    ],
    "params": [
      {
        "name": "data",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.chacha_poly.XChaCha20Poly1305.encrypt/param/0"
      },
      {
        "name": "key",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.chacha_poly.XChaCha20Poly1305.encrypt/param/1"
      },
      {
        "name": "nonce",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.chacha_poly.XChaCha20Poly1305.encrypt/param/2"
      },
      {
        "name": "ad",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.chacha_poly.XChaCha20Poly1305.encrypt/param/3"
      }
    ]
  },
  "@roblox/globaltype/_zune_ffi.ptr": {
    "code_sample": "",
    "documentation": "\n\n**Parameters**\n- `src`: The pointer to reference.\n\n\n**Throws**\n- Memory Error\n",
    "returns": [
      "@roblox/globaltype/_zune_ffi.ptr/return/0"
    ],
    "params": [
      {
        "name": "src",
        "documentation": "@roblox/globaltype/_zune_ffi.ptr/param/0"
      }
    ]
  },
  "@roblox/globaltype/_zune_mem.max/param/0": {
    "code_sample": "",
    "documentation": "The source to search in."
  },
  "@roblox/globaltype/TlsCertKeyPair": {
    "code_sample": "",
    "documentation": "",
    "keys": []
  },
  "@roblox/globaltype/_zune_crypto_aead.chacha_poly.XChaCha8Poly1305": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "encrypt": "@roblox/globaltype/_zune_crypto_aead.chacha_poly.XChaCha8Poly1305.encrypt",
      "decrypt": "@roblox/globaltype/_zune_crypto_aead.chacha_poly.XChaCha8Poly1305.decrypt"
    }
  },
  "@roblox/globaltype/FFIPointer.drop": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/FFIPointer.drop/return/0"
    ],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/FFIPointer.drop/param/0"
      }
    ]
  },
  "@roblox/globaltype/HttpWebSocketOptions": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "protocols": "@roblox/globaltype/HttpWebSocketOptions.protocols",
      "timeout": "@roblox/globaltype/HttpWebSocketOptions.timeout",
      "accept": "@roblox/globaltype/HttpWebSocketOptions.accept",
      "message": "@roblox/globaltype/HttpWebSocketOptions.message",
      "open": "@roblox/globaltype/HttpWebSocketOptions.open",
      "close": "@roblox/globaltype/HttpWebSocketOptions.close"
    }
  },
  "@roblox/globaltype/_zune_ffi.getLuaState/param/0": {
    "code_sample": "",
    "documentation": "Whether to get the main thread or the current thread."
  },
  "@roblox/globaltype/_zune_thread.fromModule": {
    "code_sample": "",
    "documentation": "Creates a new thread from a module. Resolves relative to the calling module.\n\n**Parameters**\n- `module`: The module to load in the new thread.\n\n\n**Throws**\n- Luau Error\n- Require Error\n- Memory Error\n",
    "returns": [
      "@roblox/globaltype/_zune_thread.fromModule/return/0"
    ],
    "params": [
      {
        "name": "module",
        "documentation": "@roblox/globaltype/_zune_thread.fromModule/param/0"
      }
    ]
  },
  "@roblox/globaltype/BufferSinkOptions": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "limit": "@roblox/globaltype/BufferSinkOptions.limit"
    }
  },
  "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis128L_256": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "encrypt": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis128L_256.encrypt",
      "decrypt": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis128L_256.decrypt"
    }
  },
  "@roblox/globaltype/_zune_crypto_aead.chacha_poly.XChaCha12Poly1305.encrypt": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/_zune_crypto_aead.chacha_poly.XChaCha12Poly1305.encrypt/return/0"
    ],
    "params": [
      {
        "name": "data",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.chacha_poly.XChaCha12Poly1305.encrypt/param/0"
      },
      {
        "name": "key",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.chacha_poly.XChaCha12Poly1305.encrypt/param/1"
      },
      {
        "name": "nonce",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.chacha_poly.XChaCha12Poly1305.encrypt/param/2"
      },
      {
        "name": "ad",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.chacha_poly.XChaCha12Poly1305.encrypt/param/3"
      }
    ]
  },
  "@roblox/globaltype/_zune_io.terminal.getCurrentMode": {
    "code_sample": "",
    "documentation": "Get current saved mode.",
    "returns": [
      "@roblox/globaltype/_zune_io.terminal.getCurrentMode/return/0"
    ],
    "params": []
  },
  "@roblox/globaltype/_zune_io_terminal": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "getSize": "@roblox/globaltype/_zune_io_terminal.getSize",
      "isTTY": "@roblox/globaltype/_zune_io_terminal.isTTY",
      "restoreMode": "@roblox/globaltype/_zune_io_terminal.restoreMode",
      "enableRawMode": "@roblox/globaltype/_zune_io_terminal.enableRawMode",
      "getCurrentMode": "@roblox/globaltype/_zune_io_terminal.getCurrentMode"
    }
  },
  "@roblox/globaltype/_zune_mem.eqlSlice/param/3": {
    "code_sample": "",
    "documentation": "The offset to start the comparison from in the second slice."
  },
  "@roblox/globaltype/_zune_fs.removeDir/param/0": {
    "code_sample": "",
    "documentation": "The path to the directory to remove."
  },
  "@roblox/globaltype/_zune_crypto_aead.chacha_poly.ChaCha20Poly1305.encrypt": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/_zune_crypto_aead.chacha_poly.ChaCha20Poly1305.encrypt/return/0"
    ],
    "params": [
      {
        "name": "data",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.chacha_poly.ChaCha20Poly1305.encrypt/param/0"
      },
      {
        "name": "key",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.chacha_poly.ChaCha20Poly1305.encrypt/param/1"
      },
      {
        "name": "nonce",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.chacha_poly.ChaCha20Poly1305.encrypt/param/2"
      },
      {
        "name": "ad",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.chacha_poly.ChaCha20Poly1305.encrypt/param/3"
      }
    ]
  },
  "@roblox/globaltype/HttpServerRequest.query": {
    "code_sample": "",
    "documentation": "",
    "keys": []
  },
  "@roblox/globaltype/FFIPointer": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "readptr": "@roblox/globaltype/FFIPointer.readptr",
      "readu64": "@roblox/globaltype/FFIPointer.readu64",
      "readu32": "@roblox/globaltype/FFIPointer.readu32",
      "alignment": "@roblox/globaltype/FFIPointer.alignment",
      "size": "@roblox/globaltype/FFIPointer.size",
      "writeu32": "@roblox/globaltype/FFIPointer.writeu32",
      "readf64": "@roblox/globaltype/FFIPointer.readf64",
      "readi8": "@roblox/globaltype/FFIPointer.readi8",
      "readu16": "@roblox/globaltype/FFIPointer.readu16",
      "writeptr": "@roblox/globaltype/FFIPointer.writeptr",
      "readu8": "@roblox/globaltype/FFIPointer.readu8",
      "drop": "@roblox/globaltype/FFIPointer.drop",
      "writei32": "@roblox/globaltype/FFIPointer.writei32",
      "writeu64": "@roblox/globaltype/FFIPointer.writeu64",
      "writei16": "@roblox/globaltype/FFIPointer.writei16",
      "retain": "@roblox/globaltype/FFIPointer.retain",
      "offset": "@roblox/globaltype/FFIPointer.offset",
      "writei64": "@roblox/globaltype/FFIPointer.writei64",
      "readi32": "@roblox/globaltype/FFIPointer.readi32",
      "writeu16": "@roblox/globaltype/FFIPointer.writeu16",
      "writeu8": "@roblox/globaltype/FFIPointer.writeu8",
      "readi64": "@roblox/globaltype/FFIPointer.readi64",
      "writef32": "@roblox/globaltype/FFIPointer.writef32",
      "writei8": "@roblox/globaltype/FFIPointer.writei8",
      "span": "@roblox/globaltype/FFIPointer.span",
      "read": "@roblox/globaltype/FFIPointer.read",
      "readi16": "@roblox/globaltype/FFIPointer.readi16",
      "writef64": "@roblox/globaltype/FFIPointer.writef64",
      "release": "@roblox/globaltype/FFIPointer.release",
      "write": "@roblox/globaltype/FFIPointer.write",
      "readf32": "@roblox/globaltype/FFIPointer.readf32",
      "tag": "@roblox/globaltype/FFIPointer.tag"
    }
  },
  "@roblox/globaltype/_zune_crypto_aead.aes_ocb.Aes256Ocb.decrypt": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/_zune_crypto_aead.aes_ocb.Aes256Ocb.decrypt/return/0"
    ],
    "params": [
      {
        "name": "cipher",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aes_ocb.Aes256Ocb.decrypt/param/0"
      },
      {
        "name": "tag",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aes_ocb.Aes256Ocb.decrypt/param/1"
      },
      {
        "name": "key",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aes_ocb.Aes256Ocb.decrypt/param/2"
      },
      {
        "name": "nonce",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aes_ocb.Aes256Ocb.decrypt/param/3"
      },
      {
        "name": "ad",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aes_ocb.Aes256Ocb.decrypt/param/4"
      }
    ]
  },
  "@roblox/globaltype/FileHandle.seekFromEnd/param/1": {
    "code_sample": "",
    "documentation": "The amount of bytes to seek from the end of the file."
  },
  "@roblox/globaltype/ServerWebSocketHandlers": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "message": "@roblox/globaltype/ServerWebSocketHandlers.message",
      "close": "@roblox/globaltype/ServerWebSocketHandlers.close",
      "open": "@roblox/globaltype/ServerWebSocketHandlers.open",
      "upgrade": "@roblox/globaltype/ServerWebSocketHandlers.upgrade"
    }
  },
  "@roblox/globaltype/FileCreateOptions.exclusive": {
    "code_sample": "",
    "documentation": "If true, the function will fail if the file already exists."
  },
  "@roblox/globaltype/_zune_random.Xoroshiro128.new": {
    "code_sample": "",
    "documentation": "\n\n**Throws**\n- Memory Error\n",
    "returns": [
      "@roblox/globaltype/_zune_random.Xoroshiro128.new/return/0"
    ],
    "params": [
      {
        "name": "seed",
        "documentation": "@roblox/globaltype/_zune_random.Xoroshiro128.new/param/0"
      }
    ]
  },
  "@roblox/globaltype/_zune_io_terminal.getSize": {
    "code_sample": "",
    "documentation": "Gets the terminal size.\n\nReturns a tuple of `(width, height)`. Otherwise returns `(nil, nil)` if current terminal is not a TTY.\n\n**Throws**\n- Terminal Error\n",
    "returns": [
      "@roblox/globaltype/_zune_io_terminal.getSize/return/0",
      "@roblox/globaltype/_zune_io_terminal.getSize/return/1"
    ],
    "params": []
  },
  "@roblox/globaltype/NetworkSocket.sendMsg/param/2": {
    "code_sample": "",
    "documentation": "The address to send the message to."
  },
  "@roblox/globaltype/_zune_datetime.fromIsoDate/param/0": {
    "code_sample": "",
    "documentation": "The date string to parse."
  },
  "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis128L_256.decrypt": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis128L_256.decrypt/return/0"
    ],
    "params": [
      {
        "name": "cipher",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis128L_256.decrypt/param/0"
      },
      {
        "name": "tag",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis128L_256.decrypt/param/1"
      },
      {
        "name": "key",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis128L_256.decrypt/param/2"
      },
      {
        "name": "nonce",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis128L_256.decrypt/param/3"
      },
      {
        "name": "ad",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis128L_256.decrypt/param/4"
      }
    ]
  },
  "@roblox/globaltype/_zune_ffi.c.compile/param/0": {
    "code_sample": "",
    "documentation": "The C source code to compile."
  },
  "@roblox/globaltype/_zune_mem.copy/param/1": {
    "code_sample": "",
    "documentation": "The offset to start copying to in the destination."
  },
  "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis128X2_256": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "encrypt": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis128X2_256.encrypt",
      "decrypt": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis128X2_256.decrypt"
    }
  },
  "@roblox/globaltype/_zune_ffi.fn/param/0": {
    "code_sample": "",
    "documentation": "The function definition."
  },
  "@roblox/globaltype/FFIDataType.size": {
    "code_sample": "",
    "documentation": "Get the size of the data type.",
    "returns": [
      "@roblox/globaltype/FFIDataType.size/return/0"
    ],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/FFIDataType.size/param/0"
      }
    ]
  },
  "@roblox/globaltype/NetworkAddress": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "family": "@roblox/globaltype/NetworkAddress.family",
      "port": "@roblox/globaltype/NetworkAddress.port",
      "address": "@roblox/globaltype/NetworkAddress.address"
    }
  },
  "@roblox/globaltype/HttpServeOptions.max_body_size": {
    "code_sample": "",
    "documentation": "The maximum size of the request body."
  },
  "@roblox/globaltype/_zune_fs.path.resolve": {
    "code_sample": "",
    "documentation": "Resolves relatives and parent paths combined.\n```luau\n- (`lib`, `main.luau`) -> `lib/main.luau`\n- (`lib`, `../main.luau`) -> `main.luau`\n```\n",
    "returns": [
      "@roblox/globaltype/_zune_fs.path.resolve/return/0"
    ],
    "params": [
      {
        "name": "...",
        "documentation": "@roblox/globaltype/_zune_fs.path.resolve/param/0"
      }
    ]
  },
  "@roblox/globaltype/_zune_fs.path.relative": {
    "code_sample": "",
    "documentation": "Gets the relative path from one path to another.\n```luau\n- (`lib`, `lib/main.luau`) -> `main.luau`\n- (`lib`, `main.luau`) -> `../main.luau`\n```\n\n\n**Parameters**\n- `from`: The path to resolve from.\n- `to`: The path to resolve to.\n",
    "returns": [
      "@roblox/globaltype/_zune_fs.path.relative/return/0"
    ],
    "params": [
      {
        "name": "from",
        "documentation": "@roblox/globaltype/_zune_fs.path.relative/param/0"
      },
      {
        "name": "to",
        "documentation": "@roblox/globaltype/_zune_fs.path.relative/param/1"
      }
    ]
  },
  "@roblox/globaltype/_zune_fs.openFile/param/0": {
    "code_sample": "",
    "documentation": "The path to the file to open."
  },
  "@roblox/globaltype/_zune_serde.toml.encode": {
    "code_sample": "",
    "documentation": "Encodes a table to TOML.\n\n**Parameters**\n- `object`: The table to encode.\n\n\n**Throws**\n- Memory Error\n",
    "returns": [
      "@roblox/globaltype/_zune_serde.toml.encode/return/0"
    ],
    "params": [
      {
        "name": "object",
        "documentation": "@roblox/globaltype/_zune_serde.toml.encode/param/0"
      }
    ]
  },
  "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis128X4_256": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "encrypt": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis128X4_256.encrypt",
      "decrypt": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis128X4_256.decrypt"
    }
  },
  "@roblox/globaltype/_zune_fs.path.isAbsolute/param/0": {
    "code_sample": "",
    "documentation": "The path to check if it is absolute."
  },
  "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis256_256": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "encrypt": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis256_256.encrypt",
      "decrypt": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis256_256.decrypt"
    }
  },
  "@roblox/globaltype/_zune_net.getAddressList/param/1": {
    "code_sample": "",
    "documentation": "The port to resolve."
  },
  "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis128X2_256": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "encrypt": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis128X2_256.encrypt",
      "decrypt": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis128X2_256.decrypt"
    }
  },
  "@roblox/globaltype/Regex.replace": {
    "code_sample": "",
    "documentation": "Replace the first occurrence of a string.\n\n**Parameters**\n- `str`: The string to replace.\n- `replacement`: The replacement string.\n\n\n**Throws**\n- Regex Error\n- Memory Error\n",
    "returns": [
      "@roblox/globaltype/Regex.replace/return/0"
    ],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/Regex.replace/param/0"
      },
      {
        "name": "str",
        "documentation": "@roblox/globaltype/Regex.replace/param/1"
      },
      {
        "name": "replacement",
        "documentation": "@roblox/globaltype/Regex.replace/param/2"
      }
    ]
  },
  "@roblox/globaltype/IoReadable.readi8": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/IoReadable.readi8/return/0"
    ],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/IoReadable.readi8/param/0"
      }
    ]
  },
  "@roblox/globaltype/_zune_testing.defer/param/0": {
    "code_sample": "",
    "documentation": "",
    "returns": [],
    "params": []
  },
  "@roblox/globaltype/_zune_thread.send/param/0": {
    "code_sample": "",
    "documentation": "The values to send to the owner thread."
  },
  "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis128L": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "encrypt": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis128L.encrypt",
      "decrypt": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis128L.decrypt"
    }
  },
  "@roblox/globaltype/_zune_mem.endsWith/param/0": {
    "code_sample": "",
    "documentation": "The slice to check."
  },
  "@roblox/globaltype/_zune_crypto_aead.chacha_poly.ChaCha12Poly1305.encrypt": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/_zune_crypto_aead.chacha_poly.ChaCha12Poly1305.encrypt/return/0"
    ],
    "params": [
      {
        "name": "data",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.chacha_poly.ChaCha12Poly1305.encrypt/param/0"
      },
      {
        "name": "key",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.chacha_poly.ChaCha12Poly1305.encrypt/param/1"
      },
      {
        "name": "nonce",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.chacha_poly.ChaCha12Poly1305.encrypt/param/2"
      },
      {
        "name": "ad",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.chacha_poly.ChaCha12Poly1305.encrypt/param/3"
      }
    ]
  },
  "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis128X4_256.decrypt": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis128X4_256.decrypt/return/0"
    ],
    "params": [
      {
        "name": "cipher",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis128X4_256.decrypt/param/0"
      },
      {
        "name": "tag",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis128X4_256.decrypt/param/1"
      },
      {
        "name": "key",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis128X4_256.decrypt/param/2"
      },
      {
        "name": "nonce",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis128X4_256.decrypt/param/3"
      },
      {
        "name": "ad",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis128X4_256.decrypt/param/4"
      }
    ]
  },
  "@roblox/globaltype/_zune_crypto.aead.chacha_poly.ChaCha8Poly1305.encrypt": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/_zune_crypto.aead.chacha_poly.ChaCha8Poly1305.encrypt/return/0"
    ],
    "params": [
      {
        "name": "data",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.chacha_poly.ChaCha8Poly1305.encrypt/param/0"
      },
      {
        "name": "key",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.chacha_poly.ChaCha8Poly1305.encrypt/param/1"
      },
      {
        "name": "nonce",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.chacha_poly.ChaCha8Poly1305.encrypt/param/2"
      },
      {
        "name": "ad",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.chacha_poly.ChaCha8Poly1305.encrypt/param/3"
      }
    ]
  },
  "@roblox/globaltype/_zune_mem.lastIndexOf/param/1": {
    "code_sample": "",
    "documentation": "The needle to search for."
  },
  "@roblox/globaltype/_zune_task.cancel/param/0": {
    "code_sample": "",
    "documentation": "The thread to cancel."
  },
  "@roblox/globaltype/_zune_serde_json.values": {
    "code_sample": "",
    "documentation": "Special values for JSON.",
    "keys": {
      "null": "@roblox/globaltype/_zune_serde_json.values.null"
    }
  },
  "@roblox/globaltype/_zune_crypto_aead.aes_ocb.Aes128Ocb": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "encrypt": "@roblox/globaltype/_zune_crypto_aead.aes_ocb.Aes128Ocb.encrypt",
      "decrypt": "@roblox/globaltype/_zune_crypto_aead.aes_ocb.Aes128Ocb.decrypt"
    }
  },
  "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis128L_256.encrypt": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis128L_256.encrypt/return/0"
    ],
    "params": [
      {
        "name": "data",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis128L_256.encrypt/param/0"
      },
      {
        "name": "key",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis128L_256.encrypt/param/1"
      },
      {
        "name": "nonce",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis128L_256.encrypt/param/2"
      },
      {
        "name": "ad",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis128L_256.encrypt/param/3"
      }
    ]
  },
  "@roblox/globaltype/_zune_crypto.random": {
    "code_sample": "",
    "documentation": "Cryptographically secure random number generator.",
    "keys": {
      "nextInteger": "@roblox/globaltype/_zune_crypto.random.nextInteger",
      "nextNumber": "@roblox/globaltype/_zune_crypto.random.nextNumber",
      "nextBoolean": "@roblox/globaltype/_zune_crypto.random.nextBoolean",
      "fill": "@roblox/globaltype/_zune_crypto.random.fill"
    }
  },
  "@roblox/globaltype/_zune_mem.indexOfMin/param/0": {
    "code_sample": "",
    "documentation": "The source to search in."
  },
  "@roblox/globaltype/_zune_serde.json5.encode/param/0": {
    "code_sample": "",
    "documentation": "The value to encode."
  },
  "@roblox/globaltype/_zune_fs_path.stem/param/0": {
    "code_sample": "",
    "documentation": "The path to get the stem from."
  },
  "@roblox/globaltype/Regex.replaceAll": {
    "code_sample": "",
    "documentation": "Replace all occurrences of a string.\n\n**Parameters**\n- `str`: The string to replace.\n- `replacement`: The replacement string.\n\n\n**Throws**\n- Regex Error\n- Memory Error\n",
    "returns": [
      "@roblox/globaltype/Regex.replaceAll/return/0"
    ],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/Regex.replaceAll/param/0"
      },
      {
        "name": "str",
        "documentation": "@roblox/globaltype/Regex.replaceAll/param/1"
      },
      {
        "name": "replacement",
        "documentation": "@roblox/globaltype/Regex.replaceAll/param/2"
      }
    ]
  },
  "@roblox/globaltype/SQLite3Values": {
    "code_sample": "",
    "documentation": "",
    "keys": []
  },
  "@roblox/globaltype/ThreadLoadOptions": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "native_code_gen": "@roblox/globaltype/ThreadLoadOptions.native_code_gen",
      "chunk_name": "@roblox/globaltype/ThreadLoadOptions.chunk_name"
    }
  },
  "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis256X2.decrypt": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis256X2.decrypt/return/0"
    ],
    "params": [
      {
        "name": "cipher",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis256X2.decrypt/param/0"
      },
      {
        "name": "tag",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis256X2.decrypt/param/1"
      },
      {
        "name": "key",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis256X2.decrypt/param/2"
      },
      {
        "name": "nonce",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis256X2.decrypt/param/3"
      },
      {
        "name": "ad",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis256X2.decrypt/param/4"
      }
    ]
  },
  "@roblox/globaltype/_zune_serde_toml.decode/return/0": {
    "code_sample": "",
    "documentation": "",
    "keys": []
  },
  "@roblox/globaltype/_zune_serde.json.decode": {
    "code_sample": "",
    "documentation": "Decodes JSON.\n\n**Parameters**\n- `json`: The JSON string to decode.\n- `config`: The configuration for the decoding.\n\n\n**Throws**\n- Memory Error\n",
    "returns": [
      "@roblox/globaltype/_zune_serde.json.decode/return/0"
    ],
    "params": [
      {
        "name": "json",
        "documentation": "@roblox/globaltype/_zune_serde.json.decode/param/0"
      },
      {
        "name": "config",
        "documentation": "@roblox/globaltype/_zune_serde.json.decode/param/1"
      }
    ]
  },
  "@roblox/globaltype/_zune_serde_toml.encode": {
    "code_sample": "",
    "documentation": "Encodes a table to TOML.\n\n**Parameters**\n- `object`: The table to encode.\n\n\n**Throws**\n- Memory Error\n",
    "returns": [
      "@roblox/globaltype/_zune_serde_toml.encode/return/0"
    ],
    "params": [
      {
        "name": "object",
        "documentation": "@roblox/globaltype/_zune_serde_toml.encode/param/0"
      }
    ]
  },
  "@roblox/globaltype/FFICompileOptions": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "libraries": "@roblox/globaltype/FFICompileOptions.libraries",
      "options": "@roblox/globaltype/FFICompileOptions.options",
      "sysincludes": "@roblox/globaltype/FFICompileOptions.sysincludes",
      "library_paths": "@roblox/globaltype/FFICompileOptions.library_paths",
      "symbols": "@roblox/globaltype/FFICompileOptions.symbols",
      "includes": "@roblox/globaltype/FFICompileOptions.includes",
      "files": "@roblox/globaltype/FFICompileOptions.files"
    }
  },
  "@roblox/globaltype/_zune_io.terminal.restoreMode": {
    "code_sample": "",
    "documentation": "Restores the terminal to the original mode.\n\nOn unix: Will attempt to restore the original terminal mode.\nOn windows: Will attempt to restore the original console mode.\n\nreturns `true` if the operation was successful.",
    "returns": [
      "@roblox/globaltype/_zune_io.terminal.restoreMode/return/0"
    ],
    "params": []
  },
  "@roblox/globaltype/_zune_net_http.websocket/param/1": {
    "code_sample": "",
    "documentation": "The options for the WebSocket."
  },
  "@roblox/globaltype/_zune_fs.writeFile/param/0": {
    "code_sample": "",
    "documentation": "The path to the file to write."
  },
  "@roblox/globaltype/_zune_thread.getCpuCount": {
    "code_sample": "",
    "documentation": "Gets the number of CPU cores available.\nIf the number cannot be determined, it will return 1.",
    "returns": [
      "@roblox/globaltype/_zune_thread.getCpuCount/return/0"
    ],
    "params": []
  },
  "@roblox/globaltype/_zune_serde_json.decode": {
    "code_sample": "",
    "documentation": "Decodes JSON.\n\n**Parameters**\n- `json`: The JSON string to decode.\n- `config`: The configuration for the decoding.\n\n\n**Throws**\n- Memory Error\n",
    "returns": [
      "@roblox/globaltype/_zune_serde_json.decode/return/0"
    ],
    "params": [
      {
        "name": "json",
        "documentation": "@roblox/globaltype/_zune_serde_json.decode/param/0"
      },
      {
        "name": "config",
        "documentation": "@roblox/globaltype/_zune_serde_json.decode/param/1"
      }
    ]
  },
  "@roblox/globaltype/_zune_fs.path.basename": {
    "code_sample": "",
    "documentation": "Returns the base name of the provided path.\n- `/lib/main.test.luau` -> `main.test.luau`\n- `/lib/main.luau` -> `main.luau`\n\n**Parameters**\n- `path`: The path to get the base name from.\n",
    "returns": [
      "@roblox/globaltype/_zune_fs.path.basename/return/0"
    ],
    "params": [
      {
        "name": "path",
        "documentation": "@roblox/globaltype/_zune_fs.path.basename/param/0"
      }
    ]
  },
  "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis128X2_256.encrypt": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis128X2_256.encrypt/return/0"
    ],
    "params": [
      {
        "name": "data",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis128X2_256.encrypt/param/0"
      },
      {
        "name": "key",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis128X2_256.encrypt/param/1"
      },
      {
        "name": "nonce",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis128X2_256.encrypt/param/2"
      },
      {
        "name": "ad",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis128X2_256.encrypt/param/3"
      }
    ]
  },
  "@roblox/globaltype/_zune_task": {
    "code_sample": "",
    "documentation": "A library to interact with the task scheduler.",
    "keys": {
      "defer": "@roblox/globaltype/_zune_task.defer",
      "cancel": "@roblox/globaltype/_zune_task.cancel",
      "count": "@roblox/globaltype/_zune_task.count",
      "wait": "@roblox/globaltype/_zune_task.wait",
      "delay": "@roblox/globaltype/_zune_task.delay",
      "spawn": "@roblox/globaltype/_zune_task.spawn"
    },
    "learn_more_link": "https://zune.sh/docs/v0.5.0/api/task"
  },
  "@roblox/globaltype/_zune_crypto_aead.chacha_poly.XChaCha20Poly1305": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "encrypt": "@roblox/globaltype/_zune_crypto_aead.chacha_poly.XChaCha20Poly1305.encrypt",
      "decrypt": "@roblox/globaltype/_zune_crypto_aead.chacha_poly.XChaCha20Poly1305.decrypt"
    }
  },
  "@roblox/globaltype/_zune_mem.len/param/0": {
    "code_sample": "",
    "documentation": "The source to get the length of."
  },
  "@roblox/globaltype/_zune_ffi_c.compile/param/0": {
    "code_sample": "",
    "documentation": "The C source code to compile."
  },
  "@roblox/globaltype/_zune_luau.compile/param/1": {
    "code_sample": "",
    "documentation": "The options for the compiler."
  },
  "@roblox/globaltype/_zune_io.createFixedBufferStream/param/0": {
    "code_sample": "",
    "documentation": "The buffer to create the stream with."
  },
  "@roblox/globaltype/IoReadable.readf64": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/IoReadable.readf64/return/0"
    ],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/IoReadable.readf64/param/0"
      }
    ]
  },
  "@roblox/globaltype/_zune_ffi.tagName/param/0": {
    "code_sample": "",
    "documentation": "The tag id to get the name of."
  },
  "@roblox/globaltype/BufferSink.writer": {
    "code_sample": "",
    "documentation": "\n\n**Throws**\n- Memory Error\n",
    "returns": [
      "@roblox/globaltype/BufferSink.writer/return/0"
    ],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/BufferSink.writer/param/0"
      }
    ]
  },
  "@roblox/globaltype/_zune_io_terminal.enableRawMode": {
    "code_sample": "",
    "documentation": "Enable raw mode.\n\nOn unix: Will attempt to change terminal mode.\nOn windows: Will attempt to change console mode.\n\nreturns `true` if the operation was successful.",
    "returns": [
      "@roblox/globaltype/_zune_io_terminal.enableRawMode/return/0"
    ],
    "params": []
  },
  "@roblox/globaltype/_zune_thread.send": {
    "code_sample": "",
    "documentation": "Sends a message to the owner thread.\n\nWill error if called from the main thread.\n\n**Throws**\n- Thread Error\n- Memory Error\n",
    "returns": [],
    "params": [
      {
        "name": "...",
        "documentation": "@roblox/globaltype/_zune_thread.send/param/0"
      }
    ]
  },
  "@roblox/globaltype/_zune_crypto.aead.aegis": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "Aegis128L_256": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis128L_256",
      "Aegis256": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis256",
      "Aegis128X2_256": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis128X2_256",
      "Aegis128L": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis128L",
      "Aegis256X4": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis256X4",
      "Aegis128X4": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis128X4",
      "Aegis256_256": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis256_256",
      "Aegis256X2": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis256X2",
      "Aegis128X2": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis128X2",
      "Aegis256X4_256": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis256X4_256",
      "Aegis128X4_256": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis128X4_256",
      "Aegis256X2_256": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis256X2_256"
    }
  },
  "@roblox/globaltype/_zune_serde.json.encode": {
    "code_sample": "",
    "documentation": "Encodes a value to JSON.\n\n**Parameters**\n- `value`: The value to encode.\n- `config`: The configuration for the encoding.\n\n\n**Throws**\n- Memory Error\n",
    "returns": [
      "@roblox/globaltype/_zune_serde.json.encode/return/0"
    ],
    "params": [
      {
        "name": "value",
        "documentation": "@roblox/globaltype/_zune_serde.json.encode/param/0"
      },
      {
        "name": "config",
        "documentation": "@roblox/globaltype/_zune_serde.json.encode/param/1"
      }
    ]
  },
  "@roblox/globaltype/IoWritable.writeu8": {
    "code_sample": "",
    "documentation": "\n\n**Throws**\n- Writer Error\n",
    "returns": [],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/IoWritable.writeu8/param/0"
      },
      {
        "name": "value",
        "documentation": "@roblox/globaltype/IoWritable.writeu8/param/1"
      }
    ]
  },
  "@roblox/globaltype/CryptoTlsServerConfig": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "auth": "@roblox/globaltype/CryptoTlsServerConfig.auth"
    }
  },
  "@roblox/globaltype/FileHandle.seekTo/param/1": {
    "code_sample": "",
    "documentation": "The amount of bytes to seek from the beginning of the file."
  },
  "@roblox/globaltype/_zune_random_Xoshiro256": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "new": "@roblox/globaltype/_zune_random_Xoshiro256.new"
    }
  },
  "@roblox/globaltype/_zune_serde.base64": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "encode": "@roblox/globaltype/_zune_serde.base64.encode",
      "decode": "@roblox/globaltype/_zune_serde.base64.decode"
    }
  },
  "@roblox/globaltype/_zune_mem.indexOfAnyPos/param/1": {
    "code_sample": "",
    "documentation": "The offset to start searching from."
  },
  "@roblox/globaltype/_zune_fs.move": {
    "code_sample": "",
    "documentation": "Moves a file or directory from one path to another path.\n\n**Parameters**\n- `from`: The path to the file or directory to move.\n- `to`: The path to move the file or directory to.\n- `overwrite`: If true, the function will overwrite the file if `to` exists.\n  - default: `false`\n\n\n**Throws**\n- IO Error\n",
    "returns": [],
    "params": [
      {
        "name": "from",
        "documentation": "@roblox/globaltype/_zune_fs.move/param/0"
      },
      {
        "name": "to",
        "documentation": "@roblox/globaltype/_zune_fs.move/param/1"
      },
      {
        "name": "overwrite",
        "documentation": "@roblox/globaltype/_zune_fs.move/param/2"
      }
    ]
  },
  "@roblox/globaltype/HttpServer.isRunning": {
    "code_sample": "",
    "documentation": "Returns if the server is running.",
    "returns": [
      "@roblox/globaltype/HttpServer.isRunning/return/0"
    ],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/HttpServer.isRunning/param/0"
      }
    ]
  },
  "@roblox/globaltype/_zune_mem.indexOfScalarPos": {
    "code_sample": "",
    "documentation": "Find the index of a scalar/char in the buffer, starting from the given offset.\n\n**Parameters**\n- `src`: The source to search in.\n- `offset`: The offset to start searching from.\n- `char`: The byte to search for.\n",
    "returns": [
      "@roblox/globaltype/_zune_mem.indexOfScalarPos/return/0"
    ],
    "params": [
      {
        "name": "src",
        "documentation": "@roblox/globaltype/_zune_mem.indexOfScalarPos/param/0"
      },
      {
        "name": "offset",
        "documentation": "@roblox/globaltype/_zune_mem.indexOfScalarPos/param/1"
      },
      {
        "name": "char",
        "documentation": "@roblox/globaltype/_zune_mem.indexOfScalarPos/param/2"
      }
    ]
  },
  "@roblox/globaltype/_zune_serde.toml.decode": {
    "code_sample": "",
    "documentation": "Decodes TOML.\n\n**Parameters**\n- `toml`: The TOML string to decode.\n\n\n**Throws**\n- Memory Error\n",
    "returns": [
      "@roblox/globaltype/_zune_serde.toml.decode/return/0"
    ],
    "params": [
      {
        "name": "toml",
        "documentation": "@roblox/globaltype/_zune_serde.toml.decode/param/0"
      }
    ]
  },
  "@roblox/globaltype/_zune_fs.stat": {
    "code_sample": "",
    "documentation": "Get stats of the provided path.\nThis should not error, as if a path does not exist, it will always return\na `FileStat` with `kind` set to `\"none\"`.\n\n**Parameters**\n- `path`: The path to the file or directory to get stats from.\n",
    "returns": [
      "@roblox/globaltype/_zune_fs.stat/return/0"
    ],
    "params": [
      {
        "name": "path",
        "documentation": "@roblox/globaltype/_zune_fs.stat/param/0"
      }
    ]
  },
  "@roblox/globaltype/_zune_io.format": {
    "code_sample": "",
    "documentation": "Formats input to a readable string.\n\n**Throws**\n- Memory Error\n",
    "returns": [
      "@roblox/globaltype/_zune_io.format/return/0"
    ],
    "params": [
      {
        "name": "...",
        "documentation": "@roblox/globaltype/_zune_io.format/param/0"
      }
    ]
  },
  "@roblox/globaltype/Regex.captures": {
    "code_sample": "",
    "documentation": "\n\n**Parameters**\n- `global`: If true, the function will return all captures instead of just the first\n  - default: `false`\n\n\n**Throws**\n- Regex Error\n- Memory Error\n",
    "returns": [
      "@roblox/globaltype/Regex.captures/return/0"
    ],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/Regex.captures/param/0"
      },
      {
        "name": "input",
        "documentation": "@roblox/globaltype/Regex.captures/param/1"
      },
      {
        "name": "global",
        "documentation": "@roblox/globaltype/Regex.captures/param/2"
      }
    ]
  },
  "@roblox/globaltype/Random.nextBoolean": {
    "code_sample": "",
    "documentation": "Generates a random boolean.",
    "returns": [
      "@roblox/globaltype/Random.nextBoolean/return/0"
    ],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/Random.nextBoolean/param/0"
      }
    ]
  },
  "@roblox/globaltype/Thread.send/param/1": {
    "code_sample": "",
    "documentation": "The values to send to the thread."
  },
  "@roblox/globaltype/_zune_crypto_random.fill": {
    "code_sample": "",
    "documentation": "Write random bytes to the buffer.\n\n**Parameters**\n- `buffer`: The buffer to write to.\n- `offset`: The offset to start writing at.\n- `length`: The number of bytes to write.\n\n\n**Throws**\n- Range Error\n- Crypto Error\n- Buffer Error\n",
    "returns": [],
    "params": [
      {
        "name": "buffer",
        "documentation": "@roblox/globaltype/_zune_crypto_random.fill/param/0"
      },
      {
        "name": "offset",
        "documentation": "@roblox/globaltype/_zune_crypto_random.fill/param/1"
      },
      {
        "name": "length",
        "documentation": "@roblox/globaltype/_zune_crypto_random.fill/param/2"
      }
    ]
  },
  "@roblox/globaltype/HttpServer.getPort": {
    "code_sample": "",
    "documentation": "Returns the port the server is bound to.",
    "returns": [
      "@roblox/globaltype/HttpServer.getPort/return/0"
    ],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/HttpServer.getPort/param/0"
      }
    ]
  },
  "@roblox/globaltype/SerdeJsonDecodeConfig.preserve_null": {
    "code_sample": "",
    "documentation": "Whether to preserve null values"
  },
  "@roblox/globaltype/_zune_testing._count": {
    "code_sample": "",
    "documentation": "[Internal]\n\nThe number of tests conducted."
  },
  "@roblox/globaltype/IoWritable.writei16": {
    "code_sample": "",
    "documentation": "\n\n**Throws**\n- Writer Error\n",
    "returns": [],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/IoWritable.writei16/param/0"
      },
      {
        "name": "value",
        "documentation": "@roblox/globaltype/IoWritable.writei16/param/1"
      }
    ]
  },
  "@roblox/globaltype/_zune_fs.readDir": {
    "code_sample": "",
    "documentation": "Get directory entries from the provided path.\n\n**Parameters**\n- `path`: The path to the directory to read.\n\n\n**Throws**\n- IO Error\n",
    "returns": [
      "@roblox/globaltype/_zune_fs.readDir/return/0"
    ],
    "params": [
      {
        "name": "path",
        "documentation": "@roblox/globaltype/_zune_fs.readDir/param/0"
      }
    ]
  },
  "@roblox/globaltype/FFIFunctionDefintion.returns": {
    "code_sample": "",
    "documentation": "The return type of the function."
  },
  "@roblox/globaltype/_zune_mem.indexOfScalar": {
    "code_sample": "",
    "documentation": "Find the index of a scalar/char in the buffer.\n\n**Parameters**\n- `src`: The source to search in.\n- `char`: The byte to search for.\n",
    "returns": [
      "@roblox/globaltype/_zune_mem.indexOfScalar/return/0"
    ],
    "params": [
      {
        "name": "src",
        "documentation": "@roblox/globaltype/_zune_mem.indexOfScalar/param/0"
      },
      {
        "name": "char",
        "documentation": "@roblox/globaltype/_zune_mem.indexOfScalar/param/1"
      }
    ]
  },
  "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis256X2_256.decrypt": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis256X2_256.decrypt/return/0"
    ],
    "params": [
      {
        "name": "cipher",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis256X2_256.decrypt/param/0"
      },
      {
        "name": "tag",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis256X2_256.decrypt/param/1"
      },
      {
        "name": "key",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis256X2_256.decrypt/param/2"
      },
      {
        "name": "nonce",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis256X2_256.decrypt/param/3"
      },
      {
        "name": "ad",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis256X2_256.decrypt/param/4"
      }
    ]
  },
  "@roblox/globaltype/SQLite3Result": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "last_insert_row_id": "@roblox/globaltype/SQLite3Result.last_insert_row_id",
      "changes": "@roblox/globaltype/SQLite3Result.changes"
    }
  },
  "@roblox/globaltype/_zune_io.createBufferSink/param/0": {
    "code_sample": "",
    "documentation": "The options for the buffer sink."
  },
  "@roblox/globaltype/_zune_crypto_aead.aes_gcm.Aes128Gcm.encrypt": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/_zune_crypto_aead.aes_gcm.Aes128Gcm.encrypt/return/0"
    ],
    "params": [
      {
        "name": "data",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aes_gcm.Aes128Gcm.encrypt/param/0"
      },
      {
        "name": "key",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aes_gcm.Aes128Gcm.encrypt/param/1"
      },
      {
        "name": "nonce",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aes_gcm.Aes128Gcm.encrypt/param/2"
      },
      {
        "name": "ad",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aes_gcm.Aes128Gcm.encrypt/param/3"
      }
    ]
  },
  "@roblox/globaltype/_zune_crypto_aead.aes_ocb": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "Aes256Ocb": "@roblox/globaltype/_zune_crypto_aead.aes_ocb.Aes256Ocb",
      "Aes128Ocb": "@roblox/globaltype/_zune_crypto_aead.aes_ocb.Aes128Ocb"
    }
  },
  "@roblox/globaltype/NetworkSocket.listen": {
    "code_sample": "",
    "documentation": "Starts listening for incoming connections on the socket.\n\n**Parameters**\n- `backlog`: The maximum number of connections to backlog.\n  - default: `128`\n\n\n**Throws**\n- IO Error\n",
    "returns": [],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/NetworkSocket.listen/param/0"
      },
      {
        "name": "backlog",
        "documentation": "@roblox/globaltype/NetworkSocket.listen/param/1"
      }
    ]
  },
  "@roblox/globaltype/_zune_ffi.ptrFromAddress": {
    "code_sample": "",
    "documentation": "\n\n**Parameters**\n- `src`: The address of the pointer.\n\n\n**Throws**\n- Memory Error\n",
    "returns": [
      "@roblox/globaltype/_zune_ffi.ptrFromAddress/return/0"
    ],
    "params": [
      {
        "name": "src",
        "documentation": "@roblox/globaltype/_zune_ffi.ptrFromAddress/param/0"
      }
    ]
  },
  "@roblox/globaltype/_zune_crypto_aead.aes_gcm.Aes256Gcm.decrypt": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/_zune_crypto_aead.aes_gcm.Aes256Gcm.decrypt/return/0"
    ],
    "params": [
      {
        "name": "cipher",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aes_gcm.Aes256Gcm.decrypt/param/0"
      },
      {
        "name": "tag",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aes_gcm.Aes256Gcm.decrypt/param/1"
      },
      {
        "name": "key",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aes_gcm.Aes256Gcm.decrypt/param/2"
      },
      {
        "name": "nonce",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aes_gcm.Aes256Gcm.decrypt/param/3"
      },
      {
        "name": "ad",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aes_gcm.Aes256Gcm.decrypt/param/4"
      }
    ]
  },
  "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis256X4.encrypt": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis256X4.encrypt/return/0"
    ],
    "params": [
      {
        "name": "data",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis256X4.encrypt/param/0"
      },
      {
        "name": "key",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis256X4.encrypt/param/1"
      },
      {
        "name": "nonce",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis256X4.encrypt/param/2"
      },
      {
        "name": "ad",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis256X4.encrypt/param/3"
      }
    ]
  },
  "@roblox/globaltype/_zune_crypto_password.hash/param/0": {
    "code_sample": "",
    "documentation": "The password to hash."
  },
  "@roblox/globaltype/_zune_crypto.aead.salsa_poly.XSalsa20Poly1305.decrypt": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/_zune_crypto.aead.salsa_poly.XSalsa20Poly1305.decrypt/return/0"
    ],
    "params": [
      {
        "name": "cipher",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.salsa_poly.XSalsa20Poly1305.decrypt/param/0"
      },
      {
        "name": "tag",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.salsa_poly.XSalsa20Poly1305.decrypt/param/1"
      },
      {
        "name": "key",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.salsa_poly.XSalsa20Poly1305.decrypt/param/2"
      },
      {
        "name": "nonce",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.salsa_poly.XSalsa20Poly1305.decrypt/param/3"
      },
      {
        "name": "ad",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.salsa_poly.XSalsa20Poly1305.decrypt/param/4"
      }
    ]
  },
  "@roblox/globaltype/_zune_fs_path.resolve": {
    "code_sample": "",
    "documentation": "Resolves relatives and parent paths combined.\n```luau\n- (`lib`, `main.luau`) -> `lib/main.luau`\n- (`lib`, `../main.luau`) -> `main.luau`\n```\n",
    "returns": [
      "@roblox/globaltype/_zune_fs_path.resolve/return/0"
    ],
    "params": [
      {
        "name": "...",
        "documentation": "@roblox/globaltype/_zune_fs_path.resolve/param/0"
      }
    ]
  },
  "@roblox/globaltype/_zune_crypto.tls.bundleFromFile/param/0": {
    "code_sample": "",
    "documentation": "The file to load the bundle from."
  },
  "@roblox/globaltype/_zune_process.args": {
    "code_sample": "",
    "documentation": "The arguments passed to the process."
  },
  "@roblox/globaltype/_zune_fs.move/param/0": {
    "code_sample": "",
    "documentation": "The path to the file or directory to move."
  },
  "@roblox/globaltype/_zune_mem.rotate/param/1": {
    "code_sample": "",
    "documentation": "The amount to rotate by."
  },
  "@roblox/globaltype/_zune_crypto.aead.chacha_poly.XChaCha20Poly1305.decrypt": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/_zune_crypto.aead.chacha_poly.XChaCha20Poly1305.decrypt/return/0"
    ],
    "params": [
      {
        "name": "cipher",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.chacha_poly.XChaCha20Poly1305.decrypt/param/0"
      },
      {
        "name": "tag",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.chacha_poly.XChaCha20Poly1305.decrypt/param/1"
      },
      {
        "name": "key",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.chacha_poly.XChaCha20Poly1305.decrypt/param/2"
      },
      {
        "name": "nonce",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.chacha_poly.XChaCha20Poly1305.decrypt/param/3"
      },
      {
        "name": "ad",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.chacha_poly.XChaCha20Poly1305.decrypt/param/4"
      }
    ]
  },
  "@roblox/globaltype/HttpServeOptions.client_timeout": {
    "code_sample": "",
    "documentation": "The timeout for the client."
  },
  "@roblox/globaltype/_zune_fs_path.join": {
    "code_sample": "",
    "documentation": "Joins multiple paths into a single path with OS specific separator.\n```luau\n- (`lib`, `main.luau`) -> `lib/main.luau`\n- (`lib`, `lib/main.luau`) -> `lib/lib/main.luau`\n```\n",
    "returns": [
      "@roblox/globaltype/_zune_fs_path.join/return/0"
    ],
    "params": [
      {
        "name": "...",
        "documentation": "@roblox/globaltype/_zune_fs_path.join/param/0"
      }
    ]
  },
  "@roblox/globaltype/FileHandle.lock": {
    "code_sample": "",
    "documentation": "Locks the file for reading or writing.\n\n**Parameters**\n- `lockMode`: The mode to lock the file.\n  - default: `\"exclusive\"`\n\n\n**Throws**\n- IO Error\n",
    "returns": [
      "@roblox/globaltype/FileHandle.lock/return/0"
    ],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/FileHandle.lock/param/0"
      },
      {
        "name": "lockMode",
        "documentation": "@roblox/globaltype/FileHandle.lock/param/1"
      }
    ]
  },
  "@roblox/globaltype/CryptoTlsClientConfig.ca": {
    "code_sample": "",
    "documentation": "The CA bundle to use for verification."
  },
  "@roblox/globaltype/_zune_fs.watch/param/0": {
    "code_sample": "",
    "documentation": "The path to the directory to watch."
  },
  "@roblox/globaltype/_zune_process.onSignal/param/1": {
    "code_sample": "",
    "documentation": "The callback to call when the signal is received.",
    "returns": [],
    "params": []
  },
  "@roblox/globaltype/BufferStream.seekBy/param/1": {
    "code_sample": "",
    "documentation": "The offset to seek by."
  },
  "@roblox/globaltype/NetworkSocket.connect": {
    "code_sample": "",
    "documentation": "Connects the socket to the specified address and port.\n\n**Parameters**\n- `address`: The address to connect to.\n- `port`: The port to connect to.\n\n\n**Throws**\n- Network Error\n",
    "returns": [],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/NetworkSocket.connect/param/0"
      },
      {
        "name": "address",
        "documentation": "@roblox/globaltype/NetworkSocket.connect/param/1"
      },
      {
        "name": "port",
        "documentation": "@roblox/globaltype/NetworkSocket.connect/param/2"
      }
    ]
  },
  "@roblox/globaltype/NetworkSocket": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "isOpen": "@roblox/globaltype/NetworkSocket.isOpen",
      "accept": "@roblox/globaltype/NetworkSocket.accept",
      "send": "@roblox/globaltype/NetworkSocket.send",
      "getName": "@roblox/globaltype/NetworkSocket.getName",
      "sendMsg": "@roblox/globaltype/NetworkSocket.sendMsg",
      "close": "@roblox/globaltype/NetworkSocket.close",
      "connect": "@roblox/globaltype/NetworkSocket.connect",
      "recvMsg": "@roblox/globaltype/NetworkSocket.recvMsg",
      "setOption": "@roblox/globaltype/NetworkSocket.setOption",
      "listen": "@roblox/globaltype/NetworkSocket.listen",
      "bindIp": "@roblox/globaltype/NetworkSocket.bindIp",
      "recv": "@roblox/globaltype/NetworkSocket.recv"
    }
  },
  "@roblox/globaltype/NetworkSocket.setOption": {
    "code_sample": "",
    "documentation": "Sets a socket option on the socket.\n\n**Parameters**\n- `level`: The level of the option.\n- `optname`: The name of the option.\n- `value`: The value of the option.\n\n\n**Throws**\n- Network Error\n",
    "returns": [],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/NetworkSocket.setOption/param/0"
      },
      {
        "name": "level",
        "documentation": "@roblox/globaltype/NetworkSocket.setOption/param/1"
      },
      {
        "name": "optname",
        "documentation": "@roblox/globaltype/NetworkSocket.setOption/param/2"
      },
      {
        "name": "value",
        "documentation": "@roblox/globaltype/NetworkSocket.setOption/param/3"
      }
    ]
  },
  "@roblox/globaltype/Random.nextInteger/param/2": {
    "code_sample": "",
    "documentation": "The maximum value (inclusive)."
  },
  "@roblox/globaltype/_zune_ffi.c": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "compile": "@roblox/globaltype/_zune_ffi.c.compile"
    }
  },
  "@roblox/globaltype/SQLite3Database": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "close": "@roblox/globaltype/SQLite3Database.close",
      "transaction": "@roblox/globaltype/SQLite3Database.transaction",
      "exec": "@roblox/globaltype/SQLite3Database.exec",
      "query": "@roblox/globaltype/SQLite3Database.query"
    }
  },
  "@roblox/globaltype/_zune_random_Sfc64": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "new": "@roblox/globaltype/_zune_random_Sfc64.new"
    }
  },
  "@roblox/globaltype/_zune_random": {
    "code_sample": "",
    "documentation": "A library to create a pseudo random number generator in luau.",
    "keys": {
      "RomuTrio": "@roblox/globaltype/_zune_random.RomuTrio",
      "Isaac64": "@roblox/globaltype/_zune_random.Isaac64",
      "Sfc64": "@roblox/globaltype/_zune_random.Sfc64",
      "Xoshiro256": "@roblox/globaltype/_zune_random.Xoshiro256",
      "Xoroshiro128": "@roblox/globaltype/_zune_random.Xoroshiro128",
      "Pcg32": "@roblox/globaltype/_zune_random.Pcg32",
      "LuauPcg32": "@roblox/globaltype/_zune_random.LuauPcg32",
      "new": "@roblox/globaltype/_zune_random.new"
    },
    "learn_more_link": "https://zune.sh/docs/v0.5.0/api/random"
  },
  "@roblox/globaltype/ProcessOptions.stdio": {
    "code_sample": "",
    "documentation": "The stdio configuration for the process."
  },
  "@roblox/globaltype/_zune_crypto_tls.bundleFromSystem": {
    "code_sample": "",
    "documentation": "\n\n**Throws**\n- IO Error\n- Tls Error\n",
    "returns": [
      "@roblox/globaltype/_zune_crypto_tls.bundleFromSystem/return/0"
    ],
    "params": []
  },
  "@roblox/globaltype/_zune_crypto.aead.aes_ocb.Aes256Ocb": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "encrypt": "@roblox/globaltype/_zune_crypto.aead.aes_ocb.Aes256Ocb.encrypt",
      "decrypt": "@roblox/globaltype/_zune_crypto.aead.aes_ocb.Aes256Ocb.decrypt"
    }
  },
  "@roblox/globaltype/_zune_mem.set/param/1": {
    "code_sample": "",
    "documentation": "The value to set."
  },
  "@roblox/globaltype/NetworkSocket.setOption/param/3": {
    "code_sample": "",
    "documentation": "The value of the option."
  },
  "@roblox/globaltype/_zune_crypto.password.hash/param/0": {
    "code_sample": "",
    "documentation": "The password to hash."
  },
  "@roblox/globaltype/_zune_testing": {
    "code_sample": "",
    "documentation": "A library to interact with the testing suite.",
    "keys": {
      "expect": "@roblox/globaltype/_zune_testing.expect",
      "_failed": "@roblox/globaltype/_zune_testing._failed",
      "defer": "@roblox/globaltype/_zune_testing.defer",
      "running": "@roblox/globaltype/_zune_testing.running",
      "expectEqual": "@roblox/globaltype/_zune_testing.expectEqual",
      "_start": "@roblox/globaltype/_zune_testing._start",
      "test": "@roblox/globaltype/_zune_testing.test",
      "expected": "@roblox/globaltype/_zune_testing.expected",
      "_count": "@roblox/globaltype/_zune_testing._count",
      "describe": "@roblox/globaltype/_zune_testing.describe"
    },
    "learn_more_link": "https://zune.sh/docs/v0.5.0/api/testing"
  },
  "@roblox/globaltype/_zune_net.http.serve/param/0": {
    "code_sample": "",
    "documentation": "The options for the server."
  },
  "@roblox/globaltype/_zune_net.createSocket/param/2": {
    "code_sample": "",
    "documentation": "The protocol to use."
  },
  "@roblox/globaltype/FFICompiled.getSymbol/param/1": {
    "code_sample": "",
    "documentation": "The symbol to get."
  },
  "@roblox/globaltype/FileHandle.close": {
    "code_sample": "",
    "documentation": "Close the file handle.\n\n**Throws**\n- IO Error\n",
    "returns": [],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/FileHandle.close/param/0"
      }
    ]
  },
  "@roblox/globaltype/_zune_fs_path.globMatch/param/1": {
    "code_sample": "",
    "documentation": "The glob pattern to match against."
  },
  "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis128X2.decrypt": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis128X2.decrypt/return/0"
    ],
    "params": [
      {
        "name": "cipher",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis128X2.decrypt/param/0"
      },
      {
        "name": "tag",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis128X2.decrypt/param/1"
      },
      {
        "name": "key",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis128X2.decrypt/param/2"
      },
      {
        "name": "nonce",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis128X2.decrypt/param/3"
      },
      {
        "name": "ad",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis128X2.decrypt/param/4"
      }
    ]
  },
  "@roblox/globaltype/_zune_net_http.request": {
    "code_sample": "",
    "documentation": "Makes a request to the specified host.\n\nOptions are optional, defaults to GET request."
  },
  "@roblox/globaltype/_zune_serde.yaml.encode/param/0": {
    "code_sample": "",
    "documentation": "The value to encode."
  },
  "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis128X2_256.decrypt": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis128X2_256.decrypt/return/0"
    ],
    "params": [
      {
        "name": "cipher",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis128X2_256.decrypt/param/0"
      },
      {
        "name": "tag",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis128X2_256.decrypt/param/1"
      },
      {
        "name": "key",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis128X2_256.decrypt/param/2"
      },
      {
        "name": "nonce",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis128X2_256.decrypt/param/3"
      },
      {
        "name": "ad",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis128X2_256.decrypt/param/4"
      }
    ]
  },
  "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis256X2_256": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "encrypt": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis256X2_256.encrypt",
      "decrypt": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis256X2_256.decrypt"
    }
  },
  "@roblox/globaltype/_zune_process.run/param/2": {
    "code_sample": "",
    "documentation": "The options for the process."
  },
  "@roblox/globaltype/_zune_mem.indexOf": {
    "code_sample": "",
    "documentation": "Find the index of a needle in the buffer.\n\n**Parameters**\n- `src`: The source to search in.\n- `needle`: The needle to search for.\n",
    "returns": [
      "@roblox/globaltype/_zune_mem.indexOf/return/0"
    ],
    "params": [
      {
        "name": "src",
        "documentation": "@roblox/globaltype/_zune_mem.indexOf/param/0"
      },
      {
        "name": "needle",
        "documentation": "@roblox/globaltype/_zune_mem.indexOf/param/1"
      }
    ]
  },
  "@roblox/globaltype/_zune_ffi.dupe": {
    "code_sample": "",
    "documentation": "\n\n**Parameters**\n- `src`: The pointer to duplicate. If the source is a static pointer, it must have a known size.\n\n\n**Throws**\n- Memory Error\n",
    "returns": [
      "@roblox/globaltype/_zune_ffi.dupe/return/0"
    ],
    "params": [
      {
        "name": "src",
        "documentation": "@roblox/globaltype/_zune_ffi.dupe/param/0"
      }
    ]
  },
  "@roblox/globaltype/FFICompileOptions.libraries": {
    "code_sample": "",
    "documentation": "The libraries to link against."
  },
  "@roblox/globaltype/_zune_mem.indexOfScalarPos/param/1": {
    "code_sample": "",
    "documentation": "The offset to start searching from."
  },
  "@roblox/globaltype/_zune_mem.indexOfNone/param/0": {
    "code_sample": "",
    "documentation": "The source to search in."
  },
  "@roblox/globaltype/_zune_crypto_aead.salsa_poly.XSalsa20Poly1305.decrypt": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/_zune_crypto_aead.salsa_poly.XSalsa20Poly1305.decrypt/return/0"
    ],
    "params": [
      {
        "name": "cipher",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.salsa_poly.XSalsa20Poly1305.decrypt/param/0"
      },
      {
        "name": "tag",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.salsa_poly.XSalsa20Poly1305.decrypt/param/1"
      },
      {
        "name": "key",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.salsa_poly.XSalsa20Poly1305.decrypt/param/2"
      },
      {
        "name": "nonce",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.salsa_poly.XSalsa20Poly1305.decrypt/param/3"
      },
      {
        "name": "ad",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.salsa_poly.XSalsa20Poly1305.decrypt/param/4"
      }
    ]
  },
  "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis256.decrypt": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis256.decrypt/return/0"
    ],
    "params": [
      {
        "name": "cipher",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis256.decrypt/param/0"
      },
      {
        "name": "tag",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis256.decrypt/param/1"
      },
      {
        "name": "key",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis256.decrypt/param/2"
      },
      {
        "name": "nonce",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis256.decrypt/param/3"
      },
      {
        "name": "ad",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis256.decrypt/param/4"
      }
    ]
  },
  "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis256_256.encrypt": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis256_256.encrypt/return/0"
    ],
    "params": [
      {
        "name": "data",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis256_256.encrypt/param/0"
      },
      {
        "name": "key",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis256_256.encrypt/param/1"
      },
      {
        "name": "nonce",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis256_256.encrypt/param/2"
      },
      {
        "name": "ad",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis256_256.encrypt/param/3"
      }
    ]
  },
  "@roblox/globaltype/NetworkSocket.connect/param/2": {
    "code_sample": "",
    "documentation": "The port to connect to."
  },
  "@roblox/globaltype/_zune_fs.createFile/param/0": {
    "code_sample": "",
    "documentation": "The path to the file to open/create."
  },
  "@roblox/globaltype/_zune_fs.symlink/param/0": {
    "code_sample": "",
    "documentation": "The path to the file or directory to link."
  },
  "@roblox/globaltype/_zune_serde.json5.values": {
    "code_sample": "",
    "documentation": "Special values for JSON.",
    "keys": {
      "null": "@roblox/globaltype/_zune_serde.json5.values.null"
    }
  },
  "@roblox/globaltype/_zune_random.RomuTrio.new": {
    "code_sample": "",
    "documentation": "\n\n**Throws**\n- Memory Error\n",
    "returns": [
      "@roblox/globaltype/_zune_random.RomuTrio.new/return/0"
    ],
    "params": [
      {
        "name": "seed",
        "documentation": "@roblox/globaltype/_zune_random.RomuTrio.new/param/0"
      }
    ]
  },
  "@roblox/globaltype/IoWritable.writeu16": {
    "code_sample": "",
    "documentation": "\n\n**Throws**\n- Writer Error\n",
    "returns": [],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/IoWritable.writeu16/param/0"
      },
      {
        "name": "value",
        "documentation": "@roblox/globaltype/IoWritable.writeu16/param/1"
      }
    ]
  },
  "@roblox/globaltype/_zune_mem.eql": {
    "code_sample": "",
    "documentation": "Compares two slices for equality.\nA shortcut for `eqlSlice(a, 0, b, 0, nil)`.\n\n**Parameters**\n- `a`: The first slice to compare.\n- `b`: The second slice to compare.\n",
    "returns": [
      "@roblox/globaltype/_zune_mem.eql/return/0"
    ],
    "params": [
      {
        "name": "a",
        "documentation": "@roblox/globaltype/_zune_mem.eql/param/0"
      },
      {
        "name": "b",
        "documentation": "@roblox/globaltype/_zune_mem.eql/param/1"
      }
    ]
  },
  "@roblox/globaltype/_zune_mem.replaceScalar/param/2": {
    "code_sample": "",
    "documentation": "The byte to replace with."
  },
  "@roblox/globaltype/_zune_mem.indexOfScalarPos/param/2": {
    "code_sample": "",
    "documentation": "The byte to search for."
  },
  "@roblox/globaltype/_zune_thread": {
    "code_sample": "",
    "documentation": "A library to create multiple lua states and execute in parallel.",
    "keys": {
      "receive": "@roblox/globaltype/_zune_thread.receive",
      "isThread": "@roblox/globaltype/_zune_thread.isThread",
      "fromModule": "@roblox/globaltype/_zune_thread.fromModule",
      "fromBytecode": "@roblox/globaltype/_zune_thread.fromBytecode",
      "send": "@roblox/globaltype/_zune_thread.send",
      "getCpuCount": "@roblox/globaltype/_zune_thread.getCpuCount"
    },
    "learn_more_link": "https://zune.sh/docs/v0.5.0/api/thread"
  },
  "@roblox/globaltype/_zune_crypto.random.nextNumber": {
    "code_sample": "",
    "documentation": "Generates a random number (f64).\n\nIf no arguments are provided, the function will generate a number between 0 and 1."
  },
  "@roblox/globaltype/_zune_require.navigate": {
    "code_sample": "",
    "documentation": "\n\n**Parameters**\n- `path`: The path to navigate to.\n- `from`: The path to navigate from. Defaults to the current file.\n- `config`: The configuration to use.\n\n\n**Throws**\n- Require Error\n- Memory Error\n",
    "returns": [
      "@roblox/globaltype/_zune_require.navigate/return/0"
    ],
    "params": [
      {
        "name": "path",
        "documentation": "@roblox/globaltype/_zune_require.navigate/param/0"
      },
      {
        "name": "from",
        "documentation": "@roblox/globaltype/_zune_require.navigate/param/1"
      },
      {
        "name": "config",
        "documentation": "@roblox/globaltype/_zune_require.navigate/param/2"
      }
    ]
  },
  "@roblox/globaltype/_zune_crypto_aead.salsa_poly.XSalsa20Poly1305": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "encrypt": "@roblox/globaltype/_zune_crypto_aead.salsa_poly.XSalsa20Poly1305.encrypt",
      "decrypt": "@roblox/globaltype/_zune_crypto_aead.salsa_poly.XSalsa20Poly1305.decrypt"
    }
  },
  "@roblox/globaltype/_zune_crypto_aead.isap": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "IsapA128A": "@roblox/globaltype/_zune_crypto_aead.isap.IsapA128A"
    }
  },
  "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis256X4.decrypt": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis256X4.decrypt/return/0"
    ],
    "params": [
      {
        "name": "cipher",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis256X4.decrypt/param/0"
      },
      {
        "name": "tag",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis256X4.decrypt/param/1"
      },
      {
        "name": "key",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis256X4.decrypt/param/2"
      },
      {
        "name": "nonce",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis256X4.decrypt/param/3"
      },
      {
        "name": "ad",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis256X4.decrypt/param/4"
      }
    ]
  },
  "@roblox/globaltype/_zune_datetime.parse": {
    "code_sample": "",
    "documentation": "Parse a date string.\n- Supports ISO8601 format, `YYYY-MM-DDTHH:MM:SSZ`.\n- Supports RFC3339 format, `YYYY-MM-DDTHH:MM:SS+00:00`.\n- Supports RFC2822 format, `Day, DD Mon YYYY HH:MM:SS GMT`.\n\n**Parameters**\n- `date`: The date string to parse.\n\n\n**Throws**\n- DateTime Error\n- Memory Error\n",
    "returns": [
      "@roblox/globaltype/_zune_datetime.parse/return/0"
    ],
    "params": [
      {
        "name": "date",
        "documentation": "@roblox/globaltype/_zune_datetime.parse/param/0"
      }
    ]
  },
  "@roblox/globaltype/NetworkSocket.recv": {
    "code_sample": "",
    "documentation": "\n\n**Parameters**\n- `max_size`: The maximum size of the data to receive.\n  - default: `8192`\n\n\n**Throws**\n- Network Error\n- Memory Error\n",
    "returns": [
      "@roblox/globaltype/NetworkSocket.recv/return/0"
    ],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/NetworkSocket.recv/param/0"
      },
      {
        "name": "max_size",
        "documentation": "@roblox/globaltype/NetworkSocket.recv/param/1"
      }
    ]
  },
  "@roblox/globaltype/_zune_crypto_aead.aes_gcm.Aes128Gcm": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "encrypt": "@roblox/globaltype/_zune_crypto_aead.aes_gcm.Aes128Gcm.encrypt",
      "decrypt": "@roblox/globaltype/_zune_crypto_aead.aes_gcm.Aes128Gcm.decrypt"
    }
  },
  "@roblox/globaltype/_zune_random.new": {
    "code_sample": "",
    "documentation": "Creates a new default random generator.\n\nPRNG: `LuauPcg32`\n\n**Throws**\n- Memory Error\n",
    "returns": [
      "@roblox/globaltype/_zune_random.new/return/0"
    ],
    "params": [
      {
        "name": "seed",
        "documentation": "@roblox/globaltype/_zune_random.new/param/0"
      }
    ]
  },
  "@roblox/globaltype/_zune_crypto_aead.chacha_poly.ChaCha20Poly1305.decrypt": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/_zune_crypto_aead.chacha_poly.ChaCha20Poly1305.decrypt/return/0"
    ],
    "params": [
      {
        "name": "cipher",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.chacha_poly.ChaCha20Poly1305.decrypt/param/0"
      },
      {
        "name": "tag",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.chacha_poly.ChaCha20Poly1305.decrypt/param/1"
      },
      {
        "name": "key",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.chacha_poly.ChaCha20Poly1305.decrypt/param/2"
      },
      {
        "name": "nonce",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.chacha_poly.ChaCha20Poly1305.decrypt/param/3"
      },
      {
        "name": "ad",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.chacha_poly.ChaCha20Poly1305.decrypt/param/4"
      }
    ]
  },
  "@roblox/globaltype/_zune_net_ADDRF": {
    "code_sample": "",
    "documentation": "The table of address families.",
    "keys": {
      "RDS": "@roblox/globaltype/_zune_net_ADDRF.RDS",
      "ROSE": "@roblox/globaltype/_zune_net_ADDRF.ROSE",
      "BRIDGE": "@roblox/globaltype/_zune_net_ADDRF.BRIDGE",
      "PHONET": "@roblox/globaltype/_zune_net_ADDRF.PHONET",
      "SNA": "@roblox/globaltype/_zune_net_ADDRF.SNA",
      "FILE": "@roblox/globaltype/_zune_net_ADDRF.FILE",
      "MPLS": "@roblox/globaltype/_zune_net_ADDRF.MPLS",
      "IUCV": "@roblox/globaltype/_zune_net_ADDRF.IUCV",
      "WANPIPE": "@roblox/globaltype/_zune_net_ADDRF.WANPIPE",
      "UNSPEC": "@roblox/globaltype/_zune_net_ADDRF.UNSPEC",
      "CAIF": "@roblox/globaltype/_zune_net_ADDRF.CAIF",
      "NETROM": "@roblox/globaltype/_zune_net_ADDRF.NETROM",
      "UNIX": "@roblox/globaltype/_zune_net_ADDRF.UNIX",
      "INET": "@roblox/globaltype/_zune_net_ADDRF.INET",
      "ATMSVC": "@roblox/globaltype/_zune_net_ADDRF.ATMSVC",
      "MAX": "@roblox/globaltype/_zune_net_ADDRF.MAX",
      "NETLINK": "@roblox/globaltype/_zune_net_ADDRF.NETLINK",
      "X25": "@roblox/globaltype/_zune_net_ADDRF.X25",
      "SECURITY": "@roblox/globaltype/_zune_net_ADDRF.SECURITY",
      "INET6": "@roblox/globaltype/_zune_net_ADDRF.INET6",
      "TIPC": "@roblox/globaltype/_zune_net_ADDRF.TIPC",
      "KEY": "@roblox/globaltype/_zune_net_ADDRF.KEY",
      "IRDA": "@roblox/globaltype/_zune_net_ADDRF.IRDA",
      "ECONET": "@roblox/globaltype/_zune_net_ADDRF.ECONET",
      "IPX": "@roblox/globaltype/_zune_net_ADDRF.IPX",
      "ASH": "@roblox/globaltype/_zune_net_ADDRF.ASH",
      "IB": "@roblox/globaltype/_zune_net_ADDRF.IB",
      "PACKET": "@roblox/globaltype/_zune_net_ADDRF.PACKET",
      "KCM": "@roblox/globaltype/_zune_net_ADDRF.KCM",
      "DECnet": "@roblox/globaltype/_zune_net_ADDRF.DECnet",
      "RXRPC": "@roblox/globaltype/_zune_net_ADDRF.RXRPC",
      "NETBEUI": "@roblox/globaltype/_zune_net_ADDRF.NETBEUI",
      "ALG": "@roblox/globaltype/_zune_net_ADDRF.ALG",
      "IEEE802154": "@roblox/globaltype/_zune_net_ADDRF.IEEE802154",
      "ISDN": "@roblox/globaltype/_zune_net_ADDRF.ISDN",
      "APPLETALK": "@roblox/globaltype/_zune_net_ADDRF.APPLETALK",
      "XDP": "@roblox/globaltype/_zune_net_ADDRF.XDP",
      "LOCAL": "@roblox/globaltype/_zune_net_ADDRF.LOCAL",
      "LLC": "@roblox/globaltype/_zune_net_ADDRF.LLC",
      "CAN": "@roblox/globaltype/_zune_net_ADDRF.CAN",
      "BLUETOOTH": "@roblox/globaltype/_zune_net_ADDRF.BLUETOOTH",
      "QIPCRTR": "@roblox/globaltype/_zune_net_ADDRF.QIPCRTR",
      "PPPOX": "@roblox/globaltype/_zune_net_ADDRF.PPPOX",
      "ATMPVC": "@roblox/globaltype/_zune_net_ADDRF.ATMPVC",
      "AX25": "@roblox/globaltype/_zune_net_ADDRF.AX25",
      "NFC": "@roblox/globaltype/_zune_net_ADDRF.NFC",
      "SMC": "@roblox/globaltype/_zune_net_ADDRF.SMC",
      "ROUTE": "@roblox/globaltype/_zune_net_ADDRF.ROUTE",
      "VSOCK": "@roblox/globaltype/_zune_net_ADDRF.VSOCK"
    }
  },
  "@roblox/globaltype/_zune_fs_path.basename/param/0": {
    "code_sample": "",
    "documentation": "The path to get the base name from."
  },
  "@roblox/globaltype/FFIDataType": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "alignment": "@roblox/globaltype/FFIDataType.alignment",
      "size": "@roblox/globaltype/FFIDataType.size"
    }
  },
  "@roblox/globaltype/_zune_random.LuauPcg32": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "new": "@roblox/globaltype/_zune_random.LuauPcg32.new"
    }
  },
  "@roblox/globaltype/_zune_net.http.websocket": {
    "code_sample": "",
    "documentation": "\n\n**Parameters**\n- `host`: The host to connect to.\n- `opts`: The options for the WebSocket.\n\n\n**Throws**\n- WebSocket Error\n- Network Error\n",
    "returns": [
      "@roblox/globaltype/_zune_net.http.websocket/return/0"
    ],
    "params": [
      {
        "name": "host",
        "documentation": "@roblox/globaltype/_zune_net.http.websocket/param/0"
      },
      {
        "name": "opts",
        "documentation": "@roblox/globaltype/_zune_net.http.websocket/param/1"
      }
    ]
  },
  "@roblox/globaltype/_zune_process.onSignal/param/0": {
    "code_sample": "",
    "documentation": "The signal to handle."
  },
  "@roblox/globaltype/_zune_crypto.tls.keyPairFromFile/param/0": {
    "code_sample": "",
    "documentation": "The certificate file."
  },
  "@roblox/globaltype/FFIPointer.write": {
    "code_sample": "",
    "documentation": "",
    "returns": [],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/FFIPointer.write/param/0"
      },
      {
        "name": "destOffset",
        "documentation": "@roblox/globaltype/FFIPointer.write/param/1"
      },
      {
        "name": "src",
        "documentation": "@roblox/globaltype/FFIPointer.write/param/2"
      },
      {
        "name": "srcOffset",
        "documentation": "@roblox/globaltype/FFIPointer.write/param/3"
      },
      {
        "name": "count",
        "documentation": "@roblox/globaltype/FFIPointer.write/param/4"
      }
    ]
  },
  "@roblox/globaltype/_zune_fs.removeFile": {
    "code_sample": "",
    "documentation": "Removes a file at the provided path.\n\n**Parameters**\n- `path`: The path to the file to remove.\n\n\n**Throws**\n- IO Error\n",
    "returns": [],
    "params": [
      {
        "name": "path",
        "documentation": "@roblox/globaltype/_zune_fs.removeFile/param/0"
      }
    ]
  },
  "@roblox/globaltype/_zune_mem.trimRight": {
    "code_sample": "",
    "documentation": "Trims the given values from the right end of the buffer.\n\n**Parameters**\n- `src`: The source to trim.\n- `values_to_strip`: The values to trim from the source.\n\n\n**Throws**\n- Memory Error\n",
    "returns": [
      "@roblox/globaltype/_zune_mem.trimRight/return/0"
    ],
    "params": [
      {
        "name": "src",
        "documentation": "@roblox/globaltype/_zune_mem.trimRight/param/0"
      },
      {
        "name": "values_to_strip",
        "documentation": "@roblox/globaltype/_zune_mem.trimRight/param/1"
      }
    ]
  },
  "@roblox/globaltype/RegexMatch": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "index": "@roblox/globaltype/RegexMatch.index",
      "string": "@roblox/globaltype/RegexMatch.string"
    }
  },
  "@roblox/globaltype/Random.nextNumber": {
    "code_sample": "",
    "documentation": "Generates a random number.\n\nIf no arguments are provided, the function will generate a number between 0 and 1."
  },
  "@roblox/globaltype/_zune_crypto.random.fill/param/1": {
    "code_sample": "",
    "documentation": "The offset to start writing at."
  },
  "@roblox/globaltype/_zune_serde.toml": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "encode": "@roblox/globaltype/_zune_serde.toml.encode",
      "decode": "@roblox/globaltype/_zune_serde.toml.decode"
    }
  },
  "@roblox/globaltype/_zune_random_Isaac64.new": {
    "code_sample": "",
    "documentation": "\n\n**Throws**\n- Memory Error\n",
    "returns": [
      "@roblox/globaltype/_zune_random_Isaac64.new/return/0"
    ],
    "params": [
      {
        "name": "seed",
        "documentation": "@roblox/globaltype/_zune_random_Isaac64.new/param/0"
      }
    ]
  },
  "@roblox/globaltype/_zune_testing.describe/param/1": {
    "code_sample": "",
    "documentation": "The callback to run the suite.",
    "returns": [],
    "params": []
  },
  "@roblox/globaltype/_zune_mem.indexOfMin": {
    "code_sample": "",
    "documentation": "Find the index of the minimum value in the buffer.\n\nExpects the buffer to be non-empty.\n\n**Parameters**\n- `src`: The source to search in.\n",
    "returns": [
      "@roblox/globaltype/_zune_mem.indexOfMin/return/0"
    ],
    "params": [
      {
        "name": "src",
        "documentation": "@roblox/globaltype/_zune_mem.indexOfMin/param/0"
      }
    ]
  },
  "@roblox/globaltype/_zune_crypto.aead.chacha_poly.ChaCha12Poly1305.encrypt": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/_zune_crypto.aead.chacha_poly.ChaCha12Poly1305.encrypt/return/0"
    ],
    "params": [
      {
        "name": "data",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.chacha_poly.ChaCha12Poly1305.encrypt/param/0"
      },
      {
        "name": "key",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.chacha_poly.ChaCha12Poly1305.encrypt/param/1"
      },
      {
        "name": "nonce",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.chacha_poly.ChaCha12Poly1305.encrypt/param/2"
      },
      {
        "name": "ad",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.chacha_poly.ChaCha12Poly1305.encrypt/param/3"
      }
    ]
  },
  "@roblox/globaltype/_zune_crypto.aead.aes_ocb.Aes128Ocb": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "encrypt": "@roblox/globaltype/_zune_crypto.aead.aes_ocb.Aes128Ocb.encrypt",
      "decrypt": "@roblox/globaltype/_zune_crypto.aead.aes_ocb.Aes128Ocb.decrypt"
    }
  },
  "@roblox/globaltype/FileWatcher.stop": {
    "code_sample": "",
    "documentation": "This will stop the watcher from watching the file or directory.",
    "returns": [],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/FileWatcher.stop/param/0"
      }
    ]
  },
  "@roblox/globaltype/_zune_mem": {
    "code_sample": "",
    "documentation": "A library to manipulate/interact with bytes and buffers.",
    "keys": {
      "indexOf": "@roblox/globaltype/_zune_mem.indexOf",
      "lastIndexOfAny": "@roblox/globaltype/_zune_mem.lastIndexOfAny",
      "copy": "@roblox/globaltype/_zune_mem.copy",
      "indexOfDiff": "@roblox/globaltype/_zune_mem.indexOfDiff",
      "endsWith": "@roblox/globaltype/_zune_mem.endsWith",
      "set": "@roblox/globaltype/_zune_mem.set",
      "max": "@roblox/globaltype/_zune_mem.max",
      "trim": "@roblox/globaltype/_zune_mem.trim",
      "indexOfScalarPos": "@roblox/globaltype/_zune_mem.indexOfScalarPos",
      "indexOfAny": "@roblox/globaltype/_zune_mem.indexOfAny",
      "reverse": "@roblox/globaltype/_zune_mem.reverse",
      "eql": "@roblox/globaltype/_zune_mem.eql",
      "rotate": "@roblox/globaltype/_zune_mem.rotate",
      "lastIndexOfScalar": "@roblox/globaltype/_zune_mem.lastIndexOfScalar",
      "indexOfNonePos": "@roblox/globaltype/_zune_mem.indexOfNonePos",
      "indexOfScalar": "@roblox/globaltype/_zune_mem.indexOfScalar",
      "indexOfMax": "@roblox/globaltype/_zune_mem.indexOfMax",
      "eqlSlice": "@roblox/globaltype/_zune_mem.eqlSlice",
      "MAX_SIZE": "@roblox/globaltype/_zune_mem.MAX_SIZE",
      "min": "@roblox/globaltype/_zune_mem.min",
      "lastIndexOf": "@roblox/globaltype/_zune_mem.lastIndexOf",
      "trimLeft": "@roblox/globaltype/_zune_mem.trimLeft",
      "slice": "@roblox/globaltype/_zune_mem.slice",
      "indexOfAnyPos": "@roblox/globaltype/_zune_mem.indexOfAnyPos",
      "replaceScalar": "@roblox/globaltype/_zune_mem.replaceScalar",
      "indexOfMinMax": "@roblox/globaltype/_zune_mem.indexOfMinMax",
      "trimRight": "@roblox/globaltype/_zune_mem.trimRight",
      "startsWith": "@roblox/globaltype/_zune_mem.startsWith",
      "indexOfPos": "@roblox/globaltype/_zune_mem.indexOfPos",
      "len": "@roblox/globaltype/_zune_mem.len",
      "indexOfMin": "@roblox/globaltype/_zune_mem.indexOfMin",
      "indexOfNone": "@roblox/globaltype/_zune_mem.indexOfNone",
      "lastIndexOfNone": "@roblox/globaltype/_zune_mem.lastIndexOfNone"
    },
    "learn_more_link": "https://zune.sh/docs/v0.5.0/api/mem"
  },
  "@roblox/globaltype/_zune_net.http": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "request": "@roblox/globaltype/_zune_net.http.request",
      "websocket": "@roblox/globaltype/_zune_net.http.websocket",
      "serve": "@roblox/globaltype/_zune_net.http.serve"
    }
  },
  "@roblox/globaltype/_zune_task.wait": {
    "code_sample": "",
    "documentation": "Yields and resumes current calling thread after a certain amount of time, returning the total time the sleep took.\n\n**Parameters**\n- `sec`: The amount of time to sleep.\n",
    "returns": [
      "@roblox/globaltype/_zune_task.wait/return/0"
    ],
    "params": [
      {
        "name": "sec",
        "documentation": "@roblox/globaltype/_zune_task.wait/param/0"
      }
    ]
  },
  "@roblox/globaltype/_zune_random_LuauPcg32": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "new": "@roblox/globaltype/_zune_random_LuauPcg32.new"
    }
  },
  "@roblox/globaltype/HttpWebSocketOptions.protocols": {
    "code_sample": "",
    "documentation": "The protocols to send to the server."
  },
  "@roblox/globaltype/_zune_regex.create": {
    "code_sample": "",
    "documentation": "Compiles a regular expression pattern.\n\n**Parameters**\n- `pattern`: The pattern to compile.\n- `flags`: The flags to use.\n\n\n**Throws**\n- Regex Error\n- Memory Error\n",
    "returns": [
      "@roblox/globaltype/_zune_regex.create/return/0"
    ],
    "params": [
      {
        "name": "pattern",
        "documentation": "@roblox/globaltype/_zune_regex.create/param/0"
      },
      {
        "name": "flags",
        "documentation": "@roblox/globaltype/_zune_regex.create/param/1"
      }
    ]
  },
  "@roblox/globaltype/_zune_require.navigate/param/0": {
    "code_sample": "",
    "documentation": "The path to navigate to."
  },
  "@roblox/globaltype/LuauCoverageData": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "line": "@roblox/globaltype/LuauCoverageData.line",
      "name": "@roblox/globaltype/LuauCoverageData.name",
      "depth": "@roblox/globaltype/LuauCoverageData.depth"
    }
  },
  "@roblox/globaltype/_zune_net_http.serve/param/0": {
    "code_sample": "",
    "documentation": "The options for the server."
  },
  "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis128L_256.encrypt": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis128L_256.encrypt/return/0"
    ],
    "params": [
      {
        "name": "data",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis128L_256.encrypt/param/0"
      },
      {
        "name": "key",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis128L_256.encrypt/param/1"
      },
      {
        "name": "nonce",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis128L_256.encrypt/param/2"
      },
      {
        "name": "ad",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis128L_256.encrypt/param/3"
      }
    ]
  },
  "@roblox/globaltype/FileHandle.getSize": {
    "code_sample": "",
    "documentation": "Returns the size of the file in bytes.\n\n**Throws**\n- IO Error\n",
    "returns": [
      "@roblox/globaltype/FileHandle.getSize/return/0"
    ],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/FileHandle.getSize/param/0"
      }
    ]
  },
  "@roblox/globaltype/HttpServer": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "getPort": "@roblox/globaltype/HttpServer.getPort",
      "stop": "@roblox/globaltype/HttpServer.stop",
      "isRunning": "@roblox/globaltype/HttpServer.isRunning"
    }
  },
  "@roblox/globaltype/_zune_mem.copy/param/4": {
    "code_sample": "",
    "documentation": "The number of bytes to copy. If not provided, will copy until the end of the source."
  },
  "@roblox/globaltype/_zune_mem.set": {
    "code_sample": "",
    "documentation": "Sets the value of the buffer at the given offset to the given value, for the given count of bytes.\n\n**Parameters**\n- `dest`: The source to write in.\n- `value`: The value to set.\n- `offset`: The offset to start writing at.\n  - default: `0`\n- `count`: The number of bytes to write. If not provided, will write until the end of the buffer.\n",
    "returns": [],
    "params": [
      {
        "name": "dest",
        "documentation": "@roblox/globaltype/_zune_mem.set/param/0"
      },
      {
        "name": "value",
        "documentation": "@roblox/globaltype/_zune_mem.set/param/1"
      },
      {
        "name": "offset",
        "documentation": "@roblox/globaltype/_zune_mem.set/param/2"
      },
      {
        "name": "count",
        "documentation": "@roblox/globaltype/_zune_mem.set/param/3"
      }
    ]
  },
  "@roblox/globaltype/SerdeJsonEncodeConfig": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "pretty_indent": "@roblox/globaltype/SerdeJsonEncodeConfig.pretty_indent"
    }
  },
  "@roblox/globaltype/_zune_fs.openFile/param/1": {
    "code_sample": "",
    "documentation": "The open options."
  },
  "@roblox/globaltype/HttpWebSocketOptions.close": {
    "code_sample": "",
    "documentation": "The function to call when the WebSocket connection is closed."
  },
  "@roblox/globaltype/_zune_crypto.random.nextInteger": {
    "code_sample": "",
    "documentation": "Generates a random integer.\n\nIf no arguments are provided, the function will generate a number between the limits of a signed 32-bit integer."
  },
  "@roblox/globaltype/_zune_crypto.aead.aes_gcm": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "Aes128Gcm": "@roblox/globaltype/_zune_crypto.aead.aes_gcm.Aes128Gcm",
      "Aes256Gcm": "@roblox/globaltype/_zune_crypto.aead.aes_gcm.Aes256Gcm"
    }
  },
  "@roblox/globaltype/_zune_crypto_aead.chacha_poly.XChaCha12Poly1305.decrypt": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/_zune_crypto_aead.chacha_poly.XChaCha12Poly1305.decrypt/return/0"
    ],
    "params": [
      {
        "name": "cipher",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.chacha_poly.XChaCha12Poly1305.decrypt/param/0"
      },
      {
        "name": "tag",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.chacha_poly.XChaCha12Poly1305.decrypt/param/1"
      },
      {
        "name": "key",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.chacha_poly.XChaCha12Poly1305.decrypt/param/2"
      },
      {
        "name": "nonce",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.chacha_poly.XChaCha12Poly1305.decrypt/param/3"
      },
      {
        "name": "ad",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.chacha_poly.XChaCha12Poly1305.decrypt/param/4"
      }
    ]
  },
  "@roblox/globaltype/_zune_task.delay/param/0": {
    "code_sample": "",
    "documentation": "The amount of time to delay."
  },
  "@roblox/globaltype/Regex.replaceAll/param/1": {
    "code_sample": "",
    "documentation": "The string to replace."
  },
  "@roblox/globaltype/_zune_crypto.aead.chacha_poly.ChaCha20Poly1305": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "encrypt": "@roblox/globaltype/_zune_crypto.aead.chacha_poly.ChaCha20Poly1305.encrypt",
      "decrypt": "@roblox/globaltype/_zune_crypto.aead.chacha_poly.ChaCha20Poly1305.decrypt"
    }
  },
  "@roblox/globaltype/_zune_datetime.fromUnixTimestampMillis/param/0": {
    "code_sample": "",
    "documentation": "The unix timestamp in milliseconds."
  },
  "@roblox/globaltype/CryptoTlsClientConfig": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "host": "@roblox/globaltype/CryptoTlsClientConfig.host",
      "ca": "@roblox/globaltype/CryptoTlsClientConfig.ca"
    }
  },
  "@roblox/globaltype/_zune_task.delay": {
    "code_sample": "",
    "documentation": "Runs function or thread after a certain amount of time.\n\n**Parameters**\n- `sec`: The amount of time to delay.\n- `f`: The function to run after the delay.\n",
    "returns": [
      "@roblox/globaltype/_zune_task.delay/return/0"
    ],
    "params": [
      {
        "name": "sec",
        "documentation": "@roblox/globaltype/_zune_task.delay/param/0"
      },
      {
        "name": "f",
        "documentation": "@roblox/globaltype/_zune_task.delay/param/1"
      },
      {
        "name": "...",
        "documentation": "@roblox/globaltype/_zune_task.delay/param/2"
      }
    ]
  },
  "@roblox/globaltype/FileHandle.seekBy/param/1": {
    "code_sample": "",
    "documentation": "The amount of bytes to seek from the current seek."
  },
  "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis128X4": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "encrypt": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis128X4.encrypt",
      "decrypt": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis128X4.decrypt"
    }
  },
  "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis256X2": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "encrypt": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis256X2.encrypt",
      "decrypt": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis256X2.decrypt"
    }
  },
  "@roblox/globaltype/_zune_serde_yaml.decode/param/0": {
    "code_sample": "",
    "documentation": "The YAML string to decode."
  },
  "@roblox/globaltype/FileHandle.appendSync/param/1": {
    "code_sample": "",
    "documentation": "The contents to append to the file."
  },
  "@roblox/globaltype/DateTime.toUniversalTime": {
    "code_sample": "",
    "documentation": "\n\n**Throws**\n- DateTime Error\n",
    "returns": [
      "@roblox/globaltype/DateTime.toUniversalTime/return/0"
    ],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/DateTime.toUniversalTime/param/0"
      }
    ]
  },
  "@roblox/globaltype/_zune_random_Xoroshiro128.new": {
    "code_sample": "",
    "documentation": "\n\n**Throws**\n- Memory Error\n",
    "returns": [
      "@roblox/globaltype/_zune_random_Xoroshiro128.new/return/0"
    ],
    "params": [
      {
        "name": "seed",
        "documentation": "@roblox/globaltype/_zune_random_Xoroshiro128.new/param/0"
      }
    ]
  },
  "@roblox/globaltype/_zune_net.createSocket/param/1": {
    "code_sample": "",
    "documentation": "The socket type to use."
  },
  "@roblox/globaltype/BufferStream.pos": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/BufferStream.pos/return/0"
    ],
    "params": [
      {
        "name": "self",
        "documentation": "@roblox/globaltype/BufferStream.pos/param/0"
      }
    ]
  },
  "@roblox/globaltype/_zune_mem.copy/param/3": {
    "code_sample": "",
    "documentation": "The offset to start copying from in the source."
  },
  "@roblox/globaltype/_zune_fs.watch/param/1": {
    "code_sample": "",
    "documentation": "The function to call when a change is detected.",
    "returns": [],
    "params": [
      {
        "name": "path",
        "documentation": "@roblox/globaltype/_zune_fs.watch/param/1/param/0"
      },
      {
        "name": "events",
        "documentation": "@roblox/globaltype/_zune_fs.watch/param/1/param/1"
      }
    ]
  },
  "@roblox/globaltype/_zune_crypto_tls.keyPairFromFile": {
    "code_sample": "",
    "documentation": "\n\n**Parameters**\n- `certFile`: The certificate file.\n- `keyFile`: The key file.\n\n\n**Throws**\n- IO Error\n- Tls Error\n",
    "returns": [
      "@roblox/globaltype/_zune_crypto_tls.keyPairFromFile/return/0"
    ],
    "params": [
      {
        "name": "certFile",
        "documentation": "@roblox/globaltype/_zune_crypto_tls.keyPairFromFile/param/0"
      },
      {
        "name": "keyFile",
        "documentation": "@roblox/globaltype/_zune_crypto_tls.keyPairFromFile/param/1"
      }
    ]
  },
  "@roblox/globaltype/_zune_luau.compile": {
    "code_sample": "",
    "documentation": "Compiles `Luau` source code.\n\n**Parameters**\n- `source`: The source code to compile.\n- `opts`: The options for the compiler.\n\n\n**Throws**\n- Luau Error\n- Memory Error\n",
    "returns": [
      "@roblox/globaltype/_zune_luau.compile/return/0"
    ],
    "params": [
      {
        "name": "source",
        "documentation": "@roblox/globaltype/_zune_luau.compile/param/0"
      },
      {
        "name": "opts",
        "documentation": "@roblox/globaltype/_zune_luau.compile/param/1"
      }
    ]
  },
  "@roblox/globaltype/_zune_net_SOCKOPTLV": {
    "code_sample": "",
    "documentation": "Table of socket option levels.",
    "keys": {
      "PPPOL2TP": "@roblox/globaltype/_zune_net_SOCKOPTLV.PPPOL2TP",
      "RDS": "@roblox/globaltype/_zune_net_SOCKOPTLV.RDS",
      "TIPC": "@roblox/globaltype/_zune_net_SOCKOPTLV.TIPC",
      "ALG": "@roblox/globaltype/_zune_net_SOCKOPTLV.ALG",
      "PNPIPE": "@roblox/globaltype/_zune_net_SOCKOPTLV.PNPIPE",
      "BLUETOOTH": "@roblox/globaltype/_zune_net_SOCKOPTLV.BLUETOOTH",
      "PACKET": "@roblox/globaltype/_zune_net_SOCKOPTLV.PACKET",
      "KCM": "@roblox/globaltype/_zune_net_SOCKOPTLV.KCM",
      "IP": "@roblox/globaltype/_zune_net_SOCKOPTLV.IP",
      "RXRPC": "@roblox/globaltype/_zune_net_SOCKOPTLV.RXRPC",
      "NETBEUI": "@roblox/globaltype/_zune_net_SOCKOPTLV.NETBEUI",
      "DECNET": "@roblox/globaltype/_zune_net_SOCKOPTLV.DECNET",
      "ATM": "@roblox/globaltype/_zune_net_SOCKOPTLV.ATM",
      "ICMPV6": "@roblox/globaltype/_zune_net_SOCKOPTLV.ICMPV6",
      "RAW": "@roblox/globaltype/_zune_net_SOCKOPTLV.RAW",
      "XDP": "@roblox/globaltype/_zune_net_SOCKOPTLV.XDP",
      "SOCKET": "@roblox/globaltype/_zune_net_SOCKOPTLV.SOCKET",
      "LLC": "@roblox/globaltype/_zune_net_SOCKOPTLV.LLC",
      "NFC": "@roblox/globaltype/_zune_net_SOCKOPTLV.NFC",
      "CAIF": "@roblox/globaltype/_zune_net_SOCKOPTLV.CAIF",
      "DCCP": "@roblox/globaltype/_zune_net_SOCKOPTLV.DCCP",
      "X25": "@roblox/globaltype/_zune_net_SOCKOPTLV.X25",
      "AAL": "@roblox/globaltype/_zune_net_SOCKOPTLV.AAL",
      "IPV6": "@roblox/globaltype/_zune_net_SOCKOPTLV.IPV6",
      "IUCV": "@roblox/globaltype/_zune_net_SOCKOPTLV.IUCV",
      "IRDA": "@roblox/globaltype/_zune_net_SOCKOPTLV.IRDA",
      "TLS": "@roblox/globaltype/_zune_net_SOCKOPTLV.TLS",
      "NETLINK": "@roblox/globaltype/_zune_net_SOCKOPTLV.NETLINK"
    }
  },
  "@roblox/globaltype/_zune_mem.eqlSlice/param/0": {
    "code_sample": "",
    "documentation": "The first slice to compare."
  },
  "@roblox/globaltype/_zune_testing.describe": {
    "code_sample": "",
    "documentation": "Describes a test suite.\n\n*Will be ignored if the testing suite is not running.*\n\n\n**Parameters**\n- `name`: The name of the suite.\n- `callback`: The callback to run the suite.\n",
    "returns": [],
    "params": [
      {
        "name": "name",
        "documentation": "@roblox/globaltype/_zune_testing.describe/param/0"
      },
      {
        "name": "callback",
        "documentation": "@roblox/globaltype/_zune_testing.describe/param/1"
      }
    ]
  },
  "@roblox/globaltype/_zune_mem.lastIndexOfAny/param/0": {
    "code_sample": "",
    "documentation": "The source to search in."
  },
  "@roblox/globaltype/_zune_serde_yaml.encode/param/0": {
    "code_sample": "",
    "documentation": "The value to encode."
  },
  "@roblox/globaltype/_zune_process.exit": {
    "code_sample": "",
    "documentation": "Exits the process with the given code.\n\n**Parameters**\n- `code`: The exit code.\n",
    "returns": [
      "@roblox/globaltype/_zune_process.exit/return/0"
    ],
    "params": [
      {
        "name": "code",
        "documentation": "@roblox/globaltype/_zune_process.exit/param/0"
      }
    ]
  },
  "@roblox/globaltype/FFICompiled": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "listSymbols": "@roblox/globaltype/FFICompiled.listSymbols",
      "getSymbol": "@roblox/globaltype/FFICompiled.getSymbol"
    }
  },
  "@roblox/globaltype/_zune_datetime.now": {
    "code_sample": "",
    "documentation": "\n\n**Throws**\n- DateTime Error\n- Memory Error\n",
    "returns": [
      "@roblox/globaltype/_zune_datetime.now/return/0"
    ],
    "params": []
  },
  "@roblox/globaltype/_zune_crypto.tls.setupServer/param/1": {
    "code_sample": "",
    "documentation": "The configuration for the server."
  },
  "@roblox/globaltype/_zune_task.wait/param/0": {
    "code_sample": "",
    "documentation": "The amount of time to sleep."
  },
  "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis256X4_256": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "encrypt": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis256X4_256.encrypt",
      "decrypt": "@roblox/globaltype/_zune_crypto_aead.aegis.Aegis256X4_256.decrypt"
    }
  },
  "@roblox/globaltype/_zune_crypto_aead.aes_ocb.Aes256Ocb.encrypt": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/_zune_crypto_aead.aes_ocb.Aes256Ocb.encrypt/return/0"
    ],
    "params": [
      {
        "name": "data",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aes_ocb.Aes256Ocb.encrypt/param/0"
      },
      {
        "name": "key",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aes_ocb.Aes256Ocb.encrypt/param/1"
      },
      {
        "name": "nonce",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aes_ocb.Aes256Ocb.encrypt/param/2"
      },
      {
        "name": "ad",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.aes_ocb.Aes256Ocb.encrypt/param/3"
      }
    ]
  },
  "@roblox/globaltype/HttpServeOptions.request": {
    "code_sample": "",
    "documentation": "The function to call when a request is received.\n- If a `HttpServerResponse` is returned, it will be sent as the response.\n- If a `string` or `buffer` is returned, it will be sent as the response body with a `200 OK` status.",
    "returns": [
      "@roblox/globaltype/HttpServeOptions.request/return/0"
    ],
    "params": [
      {
        "name": "request",
        "documentation": "@roblox/globaltype/HttpServeOptions.request/param/0"
      }
    ]
  },
  "@roblox/globaltype/_zune_serde_base64": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "encode": "@roblox/globaltype/_zune_serde_base64.encode",
      "decode": "@roblox/globaltype/_zune_serde_base64.decode"
    }
  },
  "@roblox/globaltype/_zune_require.navigate/param/2": {
    "code_sample": "",
    "documentation": "The configuration to use."
  },
  "@roblox/globaltype/_zune_fs_path.globMatch/param/0": {
    "code_sample": "",
    "documentation": "The path to check."
  },
  "@roblox/globaltype/_zune_crypto.tls.setupClient": {
    "code_sample": "",
    "documentation": "\n\n**Parameters**\n- `socket`: The socket to setup the client on.\n- `config`: The configuration for the client.\n\n\n**Throws**\n- Tls Error\n- Memory Error\n",
    "returns": [],
    "params": [
      {
        "name": "socket",
        "documentation": "@roblox/globaltype/_zune_crypto.tls.setupClient/param/0"
      },
      {
        "name": "config",
        "documentation": "@roblox/globaltype/_zune_crypto.tls.setupClient/param/1"
      }
    ]
  },
  "@roblox/globaltype/_zune_mem.indexOfAnyPos/param/0": {
    "code_sample": "",
    "documentation": "The source to search in."
  },
  "@roblox/globaltype/_zune_crypto_aead.chacha_poly.ChaCha12Poly1305.decrypt": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/_zune_crypto_aead.chacha_poly.ChaCha12Poly1305.decrypt/return/0"
    ],
    "params": [
      {
        "name": "cipher",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.chacha_poly.ChaCha12Poly1305.decrypt/param/0"
      },
      {
        "name": "tag",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.chacha_poly.ChaCha12Poly1305.decrypt/param/1"
      },
      {
        "name": "key",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.chacha_poly.ChaCha12Poly1305.decrypt/param/2"
      },
      {
        "name": "nonce",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.chacha_poly.ChaCha12Poly1305.decrypt/param/3"
      },
      {
        "name": "ad",
        "documentation": "@roblox/globaltype/_zune_crypto_aead.chacha_poly.ChaCha12Poly1305.decrypt/param/4"
      }
    ]
  },
  "@roblox/globaltype/_zune_serde.yaml.encode": {
    "code_sample": "",
    "documentation": "Encodes a value to YAML.\n\n**Parameters**\n- `object`: The value to encode.\n\n\n**Throws**\n- Memory Error\n",
    "returns": [
      "@roblox/globaltype/_zune_serde.yaml.encode/return/0"
    ],
    "params": [
      {
        "name": "object",
        "documentation": "@roblox/globaltype/_zune_serde.yaml.encode/param/0"
      }
    ]
  },
  "@roblox/globaltype/_zune_crypto.aead.isap.IsapA128A.encrypt": {
    "code_sample": "",
    "documentation": "",
    "returns": [
      "@roblox/globaltype/_zune_crypto.aead.isap.IsapA128A.encrypt/return/0"
    ],
    "params": [
      {
        "name": "data",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.isap.IsapA128A.encrypt/param/0"
      },
      {
        "name": "key",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.isap.IsapA128A.encrypt/param/1"
      },
      {
        "name": "nonce",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.isap.IsapA128A.encrypt/param/2"
      },
      {
        "name": "ad",
        "documentation": "@roblox/globaltype/_zune_crypto.aead.isap.IsapA128A.encrypt/param/3"
      }
    ]
  },
  "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis256X2_256": {
    "code_sample": "",
    "documentation": "",
    "keys": {
      "encrypt": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis256X2_256.encrypt",
      "decrypt": "@roblox/globaltype/_zune_crypto.aead.aegis.Aegis256X2_256.decrypt"
    }
  }
}